//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace E_Procurement.Eprocurement {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="eprocurement_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement")]
    public partial class eprocurement : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback FncancelWEPRecordApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateWEPReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitProjectPhotoRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreateNewDailyWorkRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitDailyWorkRecordExecutionLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetDWRWorkExecutionPlanNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetDailyWorkRecordProjectNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetDailyWorkRecordDocumentDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetEOTRequestProjectEngineerOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetEOTRequestProjectManagerOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitDailyWorkRecordKeyTeamOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitDailyWorkRecordEquipmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitDailyWorkRecordMaterialsDeliveredOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitDailyWorkRecordMaterialsRemovedOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitDailyWorkRecordLabourScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitDailyWorkRecordVisitorOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitDailyWorkRecordMeetingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitContractorAdvancePaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitContractorPaymentRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmiCPRTaskLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmiCPRPlanningLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitFeeNoteRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmiFeeNoteTaskLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmiFeeNotePlanningLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetCPRProjectNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitRiskManagementPlanOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitRiskManagementPlanLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitContractorSupervisionRequirementOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitTemporarySupervisionLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitSiteAgentNominationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitContractorPersonnelAppointmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitContractorStaffDisengagementOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitContractorEquipmentRegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitREsOfficeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreateNewExtensionofTimeRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetEOTRequestProjectNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitEOTRevisedActivityScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitEOTGroundsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitEOTProjectVariationSectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitEOTProjectVariationCommitteeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitContractorVariationRequestLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreateNewContractorVariationRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitCVRProjectVariationSectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreateNewCostClaimOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitCostClaimLineDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitContractorRequestforCloseoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitContractorRequestforDLPInspectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadContractorSignatureOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetContractMilestonesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetContractBidSecurityOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetContractInsuranceOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetContractSignatoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetContractRepresentativeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetContractPaymentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadDocumentWorkExecutionPlanOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetInsuranceofWorksOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetInsuranceofWorksDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetInsuranceTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetTenderSecurityTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitProfessionalIndmnityOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitInsuranceofWorksOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitAdvancePaymentsGuaranteeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitPerformancesGuaranteeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadDocumentInsuranceGuaranteeHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitSubContractorRequestDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitSubcontractingLineDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetSubcontractingRequiredDocOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadDocumentSubcontractorOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetFinalAccountTemplateIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitFinalAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitFinalAccountLineDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetExpiryStatusInsuranceOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetExpiryStatusAdvanceGuaranteeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitWorkPlanOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitWorkPlanLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitPlanningWorkPlanLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitContractorInspectionRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitContractorInspectionActivitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitTestMaterialRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitMaterialTestLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetMaterialTestTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetWorkPlanNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadDocumentMaterialTestRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadDocumentWorkPlanOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadDocumentTestRquestOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadDocumentSiteAgentOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadDocumentPaymentRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadDocumentEOTOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadDocumentFinalAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadDocumentReportSubmissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteInspectionActivityOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitWorkplanMaterialsonSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitWorkPlanEquipmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateTemplateNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportTemplate_OperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGeneratePreviousIPCOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportIPCDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadCPRExportedForImportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetMaximumAdvanceAmountOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitEquipmentRepairOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitEquipmentRepairLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetLoginTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetReportSubmissionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetReportSubmissionsDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitReportSubmissionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetReportTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetCostClaimLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetQualityManagementPlansOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitQualityManagementPlanOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitInsuranceForNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitNotificationtoRERequestForTakingOverOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetTakingOverSectionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetTakingOverSectionsLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitTakingOverSectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetInspectionSnagListOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitInspectionSnagListOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetProjectRoadLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSupplierCommunicationDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSupplierBusinessProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertRFIResponseResponsibilityCenterOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteResponsibilityCenterOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertRFregresponseHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDelDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDelBidRespDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnRegisterVendorOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetPassOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnApplyPreQualificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnApplyPreQualificationsDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentYearOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnApplyRFQOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyRFQOLDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddVendorSpecialGroupDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ActivateAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddDirectorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnApplyforTenderOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCountOpenTendersOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCountAppliedTendersOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCountTendersAwardedOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnApplyforOpenTenderOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertBlogOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertBlogReplyOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEditProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnResetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateVendorstatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateRfQDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddPurchaseReqLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnReqforRegistrationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnBLOBRfQDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDownloadRfQPTDocOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSupplierRegistrationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSupplierGeneralDetailsRegistrationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertBankOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertBankDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteBankOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertDirectorOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertDirectorDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteBeneficiaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteShareholderOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertBidResponseSecurityDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertLitigationHOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertLitigationHistoryDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteLitigationHistoryDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertSpecialGrpOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertPurchaseLinesDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertPurchaseLinesResponseDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertPurchaseLinesResponseRFQDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertPastXepOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertPastExperienceDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeletePastExperienceDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteStaffExperienceOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteBidResponsePersonelOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteBidResponseEquipmentDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertBalanceSheetOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnBidResponseInsertBalanceSheetOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteBalanceSheetDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEditBidResponseInsertBalanceSheetOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertIncomestatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteIncomeStatementDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEditInsertIncomestatementDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnBidResponseInsertIncomestatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteBidResponsIncomeStatamentDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteBidResponsBalanceSheetDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteBidResponsPastExperienceDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteBidResponTenderSecurityOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertFiledetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnBidResponsePastExperienceOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertStaffEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertStaffQlfEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertStaffXPrEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCompleteSupplierRegOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetOwnerPercentageOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertRFIresponseHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetLastDocumentNoRegistrationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetLastDocumentNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertIFRResponseLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertRFIResponseLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertRFIResponseLinesDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitResponseFinalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnPrequalificationResponseDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertFiledetails_RfiOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertPrequalificatinDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertBidReponseDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmisionResponseStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetEvalCritScoresOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnrfiResponsetLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSupplierRegistrationLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitTenderResponseOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetBidResponseNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInserBidInfoTab1OperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInserBidGeneralDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertBidPersonnelDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertBidEquipmentsDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddBidPrefrOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteBidAuditedBalsheetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetSendEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitRFQResponseOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInserRFQBidGeneralDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateRFQPreviewReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGeneratePrequalificationPreviewReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateRegistrationPreviewReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeletePrequalificatinDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertBeneficiariesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitPrequalificationResponseOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetRegisteredCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreatNewWorkExecutionPlanOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreatNewWorkExecutionPlanDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreatWorkExecutionScheduleDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetWorkExecutionPlanNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetWorkExecutionPlanProjectNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetContractNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitWorkExecutionPlanScheduleDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitWorkExecutionPlanContractorTeamOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnPopulateWorkExecutionPlanLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitWorkExecutionPlanEquipmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitWEPEquipmentRepairPlanOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreateApplicantAccountRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdateAcknowledgementStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdateAcknowledgementStatusDWROperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdateAcknowledgementStatusSiteInstructionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGeneratePCOReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitWEPMethodofWorksOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnsendWEPRecordForApprovalOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public eprocurement() {
            this.Url = global::E_Procurement.Properties.Settings.Default.E_Procurement_Eprocurement_eprocurement;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event FncancelWEPRecordApprovalCompletedEventHandler FncancelWEPRecordApprovalCompleted;
        
        /// <remarks/>
        public event FnGenerateWEPReportCompletedEventHandler FnGenerateWEPReportCompleted;
        
        /// <remarks/>
        public event FnSubmitProjectPhotoRecordCompletedEventHandler FnSubmitProjectPhotoRecordCompleted;
        
        /// <remarks/>
        public event FnCreateNewDailyWorkRecordCompletedEventHandler FnCreateNewDailyWorkRecordCompleted;
        
        /// <remarks/>
        public event FnSubmitDailyWorkRecordExecutionLinesCompletedEventHandler FnSubmitDailyWorkRecordExecutionLinesCompleted;
        
        /// <remarks/>
        public event FngetDWRWorkExecutionPlanNumberCompletedEventHandler FngetDWRWorkExecutionPlanNumberCompleted;
        
        /// <remarks/>
        public event FngetDailyWorkRecordProjectNumberCompletedEventHandler FngetDailyWorkRecordProjectNumberCompleted;
        
        /// <remarks/>
        public event FngetDailyWorkRecordDocumentDateCompletedEventHandler FngetDailyWorkRecordDocumentDateCompleted;
        
        /// <remarks/>
        public event FngetEOTRequestProjectEngineerCompletedEventHandler FngetEOTRequestProjectEngineerCompleted;
        
        /// <remarks/>
        public event FngetEOTRequestProjectManagerCompletedEventHandler FngetEOTRequestProjectManagerCompleted;
        
        /// <remarks/>
        public event FnSubmitDailyWorkRecordKeyTeamCompletedEventHandler FnSubmitDailyWorkRecordKeyTeamCompleted;
        
        /// <remarks/>
        public event FnSubmitDailyWorkRecordEquipmentCompletedEventHandler FnSubmitDailyWorkRecordEquipmentCompleted;
        
        /// <remarks/>
        public event FnSubmitDailyWorkRecordMaterialsDeliveredCompletedEventHandler FnSubmitDailyWorkRecordMaterialsDeliveredCompleted;
        
        /// <remarks/>
        public event FnSubmitDailyWorkRecordMaterialsRemovedCompletedEventHandler FnSubmitDailyWorkRecordMaterialsRemovedCompleted;
        
        /// <remarks/>
        public event FnSubmitDailyWorkRecordLabourScheduleCompletedEventHandler FnSubmitDailyWorkRecordLabourScheduleCompleted;
        
        /// <remarks/>
        public event FnSubmitDailyWorkRecordVisitorCompletedEventHandler FnSubmitDailyWorkRecordVisitorCompleted;
        
        /// <remarks/>
        public event FnSubmitDailyWorkRecordMeetingsCompletedEventHandler FnSubmitDailyWorkRecordMeetingsCompleted;
        
        /// <remarks/>
        public event FnSubmitContractorAdvancePaymentCompletedEventHandler FnSubmitContractorAdvancePaymentCompleted;
        
        /// <remarks/>
        public event FnSubmitContractorPaymentRequestCompletedEventHandler FnSubmitContractorPaymentRequestCompleted;
        
        /// <remarks/>
        public event FnSubmiCPRTaskLinesCompletedEventHandler FnSubmiCPRTaskLinesCompleted;
        
        /// <remarks/>
        public event FnSubmiCPRPlanningLinesCompletedEventHandler FnSubmiCPRPlanningLinesCompleted;
        
        /// <remarks/>
        public event FnSubmitFeeNoteRequestCompletedEventHandler FnSubmitFeeNoteRequestCompleted;
        
        /// <remarks/>
        public event FnSubmiFeeNoteTaskLinesCompletedEventHandler FnSubmiFeeNoteTaskLinesCompleted;
        
        /// <remarks/>
        public event FnSubmiFeeNotePlanningLinesCompletedEventHandler FnSubmiFeeNotePlanningLinesCompleted;
        
        /// <remarks/>
        public event FngetCPRProjectNumberCompletedEventHandler FngetCPRProjectNumberCompleted;
        
        /// <remarks/>
        public event FnSubmitRiskManagementPlanCompletedEventHandler FnSubmitRiskManagementPlanCompleted;
        
        /// <remarks/>
        public event FnSubmitRiskManagementPlanLinesCompletedEventHandler FnSubmitRiskManagementPlanLinesCompleted;
        
        /// <remarks/>
        public event FnSubmitContractorSupervisionRequirementCompletedEventHandler FnSubmitContractorSupervisionRequirementCompleted;
        
        /// <remarks/>
        public event FnSubmitTemporarySupervisionLinesCompletedEventHandler FnSubmitTemporarySupervisionLinesCompleted;
        
        /// <remarks/>
        public event FnSubmitSiteAgentNominationCompletedEventHandler FnSubmitSiteAgentNominationCompleted;
        
        /// <remarks/>
        public event FnSubmitContractorPersonnelAppointmentCompletedEventHandler FnSubmitContractorPersonnelAppointmentCompleted;
        
        /// <remarks/>
        public event FnSubmitContractorStaffDisengagementCompletedEventHandler FnSubmitContractorStaffDisengagementCompleted;
        
        /// <remarks/>
        public event FnSubmitContractorEquipmentRegisterCompletedEventHandler FnSubmitContractorEquipmentRegisterCompleted;
        
        /// <remarks/>
        public event FnSubmitREsOfficeCompletedEventHandler FnSubmitREsOfficeCompleted;
        
        /// <remarks/>
        public event FnCreateNewExtensionofTimeRequestCompletedEventHandler FnCreateNewExtensionofTimeRequestCompleted;
        
        /// <remarks/>
        public event FngetEOTRequestProjectNumberCompletedEventHandler FngetEOTRequestProjectNumberCompleted;
        
        /// <remarks/>
        public event FnSubmitEOTRevisedActivityScheduleCompletedEventHandler FnSubmitEOTRevisedActivityScheduleCompleted;
        
        /// <remarks/>
        public event FnSubmitEOTGroundsCompletedEventHandler FnSubmitEOTGroundsCompleted;
        
        /// <remarks/>
        public event FnSubmitEOTProjectVariationSectionCompletedEventHandler FnSubmitEOTProjectVariationSectionCompleted;
        
        /// <remarks/>
        public event FnSubmitEOTProjectVariationCommitteeCompletedEventHandler FnSubmitEOTProjectVariationCommitteeCompleted;
        
        /// <remarks/>
        public event FnSubmitContractorVariationRequestLinesCompletedEventHandler FnSubmitContractorVariationRequestLinesCompleted;
        
        /// <remarks/>
        public event FnCreateNewContractorVariationRequestCompletedEventHandler FnCreateNewContractorVariationRequestCompleted;
        
        /// <remarks/>
        public event FnSubmitCVRProjectVariationSectionCompletedEventHandler FnSubmitCVRProjectVariationSectionCompleted;
        
        /// <remarks/>
        public event FnCreateNewCostClaimCompletedEventHandler FnCreateNewCostClaimCompleted;
        
        /// <remarks/>
        public event FnSubmitCostClaimLineDetailsCompletedEventHandler FnSubmitCostClaimLineDetailsCompleted;
        
        /// <remarks/>
        public event FnSubmitContractorRequestforCloseoutCompletedEventHandler FnSubmitContractorRequestforCloseoutCompleted;
        
        /// <remarks/>
        public event FnSubmitContractorRequestforDLPInspectionCompletedEventHandler FnSubmitContractorRequestforDLPInspectionCompleted;
        
        /// <remarks/>
        public event UploadContractorSignatureCompletedEventHandler UploadContractorSignatureCompleted;
        
        /// <remarks/>
        public event FnGetContractMilestonesCompletedEventHandler FnGetContractMilestonesCompleted;
        
        /// <remarks/>
        public event FnGetContractBidSecurityCompletedEventHandler FnGetContractBidSecurityCompleted;
        
        /// <remarks/>
        public event FnGetContractInsuranceCompletedEventHandler FnGetContractInsuranceCompleted;
        
        /// <remarks/>
        public event FnGetContractSignatoriesCompletedEventHandler FnGetContractSignatoriesCompleted;
        
        /// <remarks/>
        public event FnGetContractRepresentativeCompletedEventHandler FnGetContractRepresentativeCompleted;
        
        /// <remarks/>
        public event FnGetContractPaymentsCompletedEventHandler FnGetContractPaymentsCompleted;
        
        /// <remarks/>
        public event UploadDocumentWorkExecutionPlanCompletedEventHandler UploadDocumentWorkExecutionPlanCompleted;
        
        /// <remarks/>
        public event FnGetInsuranceofWorksCompletedEventHandler FnGetInsuranceofWorksCompleted;
        
        /// <remarks/>
        public event FnGetInsuranceofWorksDetailsCompletedEventHandler FnGetInsuranceofWorksDetailsCompleted;
        
        /// <remarks/>
        public event FnGetInsuranceTypesCompletedEventHandler FnGetInsuranceTypesCompleted;
        
        /// <remarks/>
        public event FnGetTenderSecurityTypesCompletedEventHandler FnGetTenderSecurityTypesCompleted;
        
        /// <remarks/>
        public event FnSubmitProfessionalIndmnityCompletedEventHandler FnSubmitProfessionalIndmnityCompleted;
        
        /// <remarks/>
        public event FnSubmitInsuranceofWorksCompletedEventHandler FnSubmitInsuranceofWorksCompleted;
        
        /// <remarks/>
        public event FnSubmitAdvancePaymentsGuaranteeCompletedEventHandler FnSubmitAdvancePaymentsGuaranteeCompleted;
        
        /// <remarks/>
        public event FnSubmitPerformancesGuaranteeCompletedEventHandler FnSubmitPerformancesGuaranteeCompleted;
        
        /// <remarks/>
        public event UploadDocumentInsuranceGuaranteeHeaderCompletedEventHandler UploadDocumentInsuranceGuaranteeHeaderCompleted;
        
        /// <remarks/>
        public event FnSubmitSubContractorRequestDetailsCompletedEventHandler FnSubmitSubContractorRequestDetailsCompleted;
        
        /// <remarks/>
        public event FnSubmitSubcontractingLineDetailsCompletedEventHandler FnSubmitSubcontractingLineDetailsCompleted;
        
        /// <remarks/>
        public event FnGetSubcontractingRequiredDocCompletedEventHandler FnGetSubcontractingRequiredDocCompleted;
        
        /// <remarks/>
        public event UploadDocumentSubcontractorCompletedEventHandler UploadDocumentSubcontractorCompleted;
        
        /// <remarks/>
        public event FnGetFinalAccountTemplateIDCompletedEventHandler FnGetFinalAccountTemplateIDCompleted;
        
        /// <remarks/>
        public event FnSubmitFinalAccountCompletedEventHandler FnSubmitFinalAccountCompleted;
        
        /// <remarks/>
        public event FnSubmitFinalAccountLineDetailsCompletedEventHandler FnSubmitFinalAccountLineDetailsCompleted;
        
        /// <remarks/>
        public event FnGetExpiryStatusInsuranceCompletedEventHandler FnGetExpiryStatusInsuranceCompleted;
        
        /// <remarks/>
        public event FnGetExpiryStatusAdvanceGuaranteeCompletedEventHandler FnGetExpiryStatusAdvanceGuaranteeCompleted;
        
        /// <remarks/>
        public event FnSubmitWorkPlanCompletedEventHandler FnSubmitWorkPlanCompleted;
        
        /// <remarks/>
        public event FnSubmitWorkPlanLineCompletedEventHandler FnSubmitWorkPlanLineCompleted;
        
        /// <remarks/>
        public event FnSubmitPlanningWorkPlanLineCompletedEventHandler FnSubmitPlanningWorkPlanLineCompleted;
        
        /// <remarks/>
        public event FnSubmitContractorInspectionRequestCompletedEventHandler FnSubmitContractorInspectionRequestCompleted;
        
        /// <remarks/>
        public event FnSubmitContractorInspectionActivitiesCompletedEventHandler FnSubmitContractorInspectionActivitiesCompleted;
        
        /// <remarks/>
        public event FnSubmitTestMaterialRecordCompletedEventHandler FnSubmitTestMaterialRecordCompleted;
        
        /// <remarks/>
        public event FnSubmitMaterialTestLineCompletedEventHandler FnSubmitMaterialTestLineCompleted;
        
        /// <remarks/>
        public event FnGetMaterialTestTemplateCompletedEventHandler FnGetMaterialTestTemplateCompleted;
        
        /// <remarks/>
        public event FnGetWorkPlanNoCompletedEventHandler FnGetWorkPlanNoCompleted;
        
        /// <remarks/>
        public event UploadDocumentMaterialTestRecordCompletedEventHandler UploadDocumentMaterialTestRecordCompleted;
        
        /// <remarks/>
        public event UploadDocumentWorkPlanCompletedEventHandler UploadDocumentWorkPlanCompleted;
        
        /// <remarks/>
        public event UploadDocumentTestRquestCompletedEventHandler UploadDocumentTestRquestCompleted;
        
        /// <remarks/>
        public event UploadDocumentSiteAgentCompletedEventHandler UploadDocumentSiteAgentCompleted;
        
        /// <remarks/>
        public event UploadDocumentPaymentRequestCompletedEventHandler UploadDocumentPaymentRequestCompleted;
        
        /// <remarks/>
        public event UploadDocumentEOTCompletedEventHandler UploadDocumentEOTCompleted;
        
        /// <remarks/>
        public event UploadDocumentFinalAccountCompletedEventHandler UploadDocumentFinalAccountCompleted;
        
        /// <remarks/>
        public event UploadDocumentReportSubmissionCompletedEventHandler UploadDocumentReportSubmissionCompleted;
        
        /// <remarks/>
        public event FnDeleteInspectionActivityCompletedEventHandler FnDeleteInspectionActivityCompleted;
        
        /// <remarks/>
        public event FnSubmitWorkplanMaterialsonSiteCompletedEventHandler FnSubmitWorkplanMaterialsonSiteCompleted;
        
        /// <remarks/>
        public event FnSubmitWorkPlanEquipmentCompletedEventHandler FnSubmitWorkPlanEquipmentCompleted;
        
        /// <remarks/>
        public event GenerateTemplateCompletedEventHandler GenerateTemplateCompleted;
        
        /// <remarks/>
        public event GenerateTemplateNewCompletedEventHandler GenerateTemplateNewCompleted;
        
        /// <remarks/>
        public event ImportTemplate_CompletedEventHandler ImportTemplate_Completed;
        
        /// <remarks/>
        public event FnGeneratePreviousIPCCompletedEventHandler FnGeneratePreviousIPCCompleted;
        
        /// <remarks/>
        public event ImportIPCDocumentCompletedEventHandler ImportIPCDocumentCompleted;
        
        /// <remarks/>
        public event UploadCPRExportedForImportCompletedEventHandler UploadCPRExportedForImportCompleted;
        
        /// <remarks/>
        public event FnGetMaximumAdvanceAmountCompletedEventHandler FnGetMaximumAdvanceAmountCompleted;
        
        /// <remarks/>
        public event FnSubmitEquipmentRepairCompletedEventHandler FnSubmitEquipmentRepairCompleted;
        
        /// <remarks/>
        public event FnSubmitEquipmentRepairLineCompletedEventHandler FnSubmitEquipmentRepairLineCompleted;
        
        /// <remarks/>
        public event FnGetLoginTypeCompletedEventHandler FnGetLoginTypeCompleted;
        
        /// <remarks/>
        public event FnGetReportSubmissionsCompletedEventHandler FnGetReportSubmissionsCompleted;
        
        /// <remarks/>
        public event FnGetReportSubmissionsDetailsCompletedEventHandler FnGetReportSubmissionsDetailsCompleted;
        
        /// <remarks/>
        public event FnSubmitReportSubmissionsCompletedEventHandler FnSubmitReportSubmissionsCompleted;
        
        /// <remarks/>
        public event FnGetReportTypesCompletedEventHandler FnGetReportTypesCompleted;
        
        /// <remarks/>
        public event FnGetCostClaimLinesCompletedEventHandler FnGetCostClaimLinesCompleted;
        
        /// <remarks/>
        public event FnGetQualityManagementPlansCompletedEventHandler FnGetQualityManagementPlansCompleted;
        
        /// <remarks/>
        public event FnSubmitQualityManagementPlanCompletedEventHandler FnSubmitQualityManagementPlanCompleted;
        
        /// <remarks/>
        public event FnSubmitInsuranceForNotificationCompletedEventHandler FnSubmitInsuranceForNotificationCompleted;
        
        /// <remarks/>
        public event FnSubmitNotificationtoRERequestForTakingOverCompletedEventHandler FnSubmitNotificationtoRERequestForTakingOverCompleted;
        
        /// <remarks/>
        public event FnGetTakingOverSectionsCompletedEventHandler FnGetTakingOverSectionsCompleted;
        
        /// <remarks/>
        public event FnGetTakingOverSectionsLinesCompletedEventHandler FnGetTakingOverSectionsLinesCompleted;
        
        /// <remarks/>
        public event FnSubmitTakingOverSectionCompletedEventHandler FnSubmitTakingOverSectionCompleted;
        
        /// <remarks/>
        public event FnGetInspectionSnagListCompletedEventHandler FnGetInspectionSnagListCompleted;
        
        /// <remarks/>
        public event FnSubmitInspectionSnagListCompletedEventHandler FnSubmitInspectionSnagListCompleted;
        
        /// <remarks/>
        public event FnGetProjectRoadLinksCompletedEventHandler FnGetProjectRoadLinksCompleted;
        
        /// <remarks/>
        public event FnSupplierCommunicationDetailsCompletedEventHandler FnSupplierCommunicationDetailsCompleted;
        
        /// <remarks/>
        public event FnSupplierBusinessProfileCompletedEventHandler FnSupplierBusinessProfileCompleted;
        
        /// <remarks/>
        public event FnInsertRFIResponseResponsibilityCenterCompletedEventHandler FnInsertRFIResponseResponsibilityCenterCompleted;
        
        /// <remarks/>
        public event FnDeleteResponsibilityCenterCompletedEventHandler FnDeleteResponsibilityCenterCompleted;
        
        /// <remarks/>
        public event FnInsertRFregresponseHeaderCompletedEventHandler FnInsertRFregresponseHeaderCompleted;
        
        /// <remarks/>
        public event FnDelDocumentCompletedEventHandler FnDelDocumentCompleted;
        
        /// <remarks/>
        public event FnDelBidRespDocumentCompletedEventHandler FnDelBidRespDocumentCompleted;
        
        /// <remarks/>
        public event FnRegisterVendorCompletedEventHandler FnRegisterVendorCompleted;
        
        /// <remarks/>
        public event ResetPassCompletedEventHandler ResetPassCompleted;
        
        /// <remarks/>
        public event FnApplyPreQualificationCompletedEventHandler FnApplyPreQualificationCompleted;
        
        /// <remarks/>
        public event FnApplyPreQualificationsDetailsCompletedEventHandler FnApplyPreQualificationsDetailsCompleted;
        
        /// <remarks/>
        public event GetCurrentYearCompletedEventHandler GetCurrentYearCompleted;
        
        /// <remarks/>
        public event FnApplyRFQCompletedEventHandler FnApplyRFQCompleted;
        
        /// <remarks/>
        public event ApplyRFQOLDCompletedEventHandler ApplyRFQOLDCompleted;
        
        /// <remarks/>
        public event SendEmailCompletedEventHandler SendEmailCompleted;
        
        /// <remarks/>
        public event FnAddVendorSpecialGroupDetailsCompletedEventHandler FnAddVendorSpecialGroupDetailsCompleted;
        
        /// <remarks/>
        public event ActivateAccountCompletedEventHandler ActivateAccountCompleted;
        
        /// <remarks/>
        public event FnAddDirectorsCompletedEventHandler FnAddDirectorsCompleted;
        
        /// <remarks/>
        public event FnApplyforTenderCompletedEventHandler FnApplyforTenderCompleted;
        
        /// <remarks/>
        public event FnCountOpenTendersCompletedEventHandler FnCountOpenTendersCompleted;
        
        /// <remarks/>
        public event FnCountAppliedTendersCompletedEventHandler FnCountAppliedTendersCompleted;
        
        /// <remarks/>
        public event FnCountTendersAwardedCompletedEventHandler FnCountTendersAwardedCompleted;
        
        /// <remarks/>
        public event FnApplyforOpenTenderCompletedEventHandler FnApplyforOpenTenderCompleted;
        
        /// <remarks/>
        public event FnInsertBlogCompletedEventHandler FnInsertBlogCompleted;
        
        /// <remarks/>
        public event FnInsertBlogReplyCompletedEventHandler FnInsertBlogReplyCompleted;
        
        /// <remarks/>
        public event FnChangePasswordCompletedEventHandler FnChangePasswordCompleted;
        
        /// <remarks/>
        public event FnEditProfileCompletedEventHandler FnEditProfileCompleted;
        
        /// <remarks/>
        public event FnResetPasswordCompletedEventHandler FnResetPasswordCompleted;
        
        /// <remarks/>
        public event FnGenerateVendorstatementCompletedEventHandler FnGenerateVendorstatementCompleted;
        
        /// <remarks/>
        public event FnGenerateRfQDocumentCompletedEventHandler FnGenerateRfQDocumentCompleted;
        
        /// <remarks/>
        public event FnAddPurchaseReqLineCompletedEventHandler FnAddPurchaseReqLineCompleted;
        
        /// <remarks/>
        public event FnReqforRegistrationCompletedEventHandler FnReqforRegistrationCompleted;
        
        /// <remarks/>
        public event FnBLOBRfQDocumentCompletedEventHandler FnBLOBRfQDocumentCompleted;
        
        /// <remarks/>
        public event FnDownloadRfQPTDocCompletedEventHandler FnDownloadRfQPTDocCompleted;
        
        /// <remarks/>
        public event FnSupplierRegistrationCompletedEventHandler FnSupplierRegistrationCompleted;
        
        /// <remarks/>
        public event FnSupplierGeneralDetailsRegistrationCompletedEventHandler FnSupplierGeneralDetailsRegistrationCompleted;
        
        /// <remarks/>
        public event FnInsertBankCompletedEventHandler FnInsertBankCompleted;
        
        /// <remarks/>
        public event FnInsertBankDetailsCompletedEventHandler FnInsertBankDetailsCompleted;
        
        /// <remarks/>
        public event FnDeleteBankCompletedEventHandler FnDeleteBankCompleted;
        
        /// <remarks/>
        public event FnInsertDirectorCompletedEventHandler FnInsertDirectorCompleted;
        
        /// <remarks/>
        public event FnInsertDirectorDetailsCompletedEventHandler FnInsertDirectorDetailsCompleted;
        
        /// <remarks/>
        public event FnDeleteBeneficiaryCompletedEventHandler FnDeleteBeneficiaryCompleted;
        
        /// <remarks/>
        public event FnDeleteShareholderCompletedEventHandler FnDeleteShareholderCompleted;
        
        /// <remarks/>
        public event FnInsertBidResponseSecurityDetailsCompletedEventHandler FnInsertBidResponseSecurityDetailsCompleted;
        
        /// <remarks/>
        public event FnInsertLitigationHCompletedEventHandler FnInsertLitigationHCompleted;
        
        /// <remarks/>
        public event FnInsertLitigationHistoryDetailsCompletedEventHandler FnInsertLitigationHistoryDetailsCompleted;
        
        /// <remarks/>
        public event FnDeleteLitigationHistoryDetailsCompletedEventHandler FnDeleteLitigationHistoryDetailsCompleted;
        
        /// <remarks/>
        public event FnInsertSpecialGrpCompletedEventHandler FnInsertSpecialGrpCompleted;
        
        /// <remarks/>
        public event FnInsertPurchaseLinesDetailsCompletedEventHandler FnInsertPurchaseLinesDetailsCompleted;
        
        /// <remarks/>
        public event FnInsertPurchaseLinesResponseDetailsCompletedEventHandler FnInsertPurchaseLinesResponseDetailsCompleted;
        
        /// <remarks/>
        public event FnInsertPurchaseLinesResponseRFQDetailsCompletedEventHandler FnInsertPurchaseLinesResponseRFQDetailsCompleted;
        
        /// <remarks/>
        public event FnInsertPastXepCompletedEventHandler FnInsertPastXepCompleted;
        
        /// <remarks/>
        public event FnInsertPastExperienceDetailsCompletedEventHandler FnInsertPastExperienceDetailsCompleted;
        
        /// <remarks/>
        public event FnDeletePastExperienceDetailsCompletedEventHandler FnDeletePastExperienceDetailsCompleted;
        
        /// <remarks/>
        public event FnDeleteStaffExperienceCompletedEventHandler FnDeleteStaffExperienceCompleted;
        
        /// <remarks/>
        public event FnDeleteBidResponsePersonelCompletedEventHandler FnDeleteBidResponsePersonelCompleted;
        
        /// <remarks/>
        public event FnDeleteBidResponseEquipmentDetailsCompletedEventHandler FnDeleteBidResponseEquipmentDetailsCompleted;
        
        /// <remarks/>
        public event FnInsertBalanceSheetCompletedEventHandler FnInsertBalanceSheetCompleted;
        
        /// <remarks/>
        public event FnBidResponseInsertBalanceSheetCompletedEventHandler FnBidResponseInsertBalanceSheetCompleted;
        
        /// <remarks/>
        public event FnDeleteBalanceSheetDetailsCompletedEventHandler FnDeleteBalanceSheetDetailsCompleted;
        
        /// <remarks/>
        public event FnEditBidResponseInsertBalanceSheetCompletedEventHandler FnEditBidResponseInsertBalanceSheetCompleted;
        
        /// <remarks/>
        public event FnInsertIncomestatementCompletedEventHandler FnInsertIncomestatementCompleted;
        
        /// <remarks/>
        public event FnDeleteIncomeStatementDetailsCompletedEventHandler FnDeleteIncomeStatementDetailsCompleted;
        
        /// <remarks/>
        public event FnEditInsertIncomestatementDetailsCompletedEventHandler FnEditInsertIncomestatementDetailsCompleted;
        
        /// <remarks/>
        public event FnBidResponseInsertIncomestatementCompletedEventHandler FnBidResponseInsertIncomestatementCompleted;
        
        /// <remarks/>
        public event FnDeleteBidResponsIncomeStatamentDetailsCompletedEventHandler FnDeleteBidResponsIncomeStatamentDetailsCompleted;
        
        /// <remarks/>
        public event FnDeleteBidResponsBalanceSheetDetailsCompletedEventHandler FnDeleteBidResponsBalanceSheetDetailsCompleted;
        
        /// <remarks/>
        public event FnDeleteBidResponsPastExperienceDetailsCompletedEventHandler FnDeleteBidResponsPastExperienceDetailsCompleted;
        
        /// <remarks/>
        public event FnDeleteBidResponTenderSecurityCompletedEventHandler FnDeleteBidResponTenderSecurityCompleted;
        
        /// <remarks/>
        public event FnInsertFiledetailsCompletedEventHandler FnInsertFiledetailsCompleted;
        
        /// <remarks/>
        public event FnBidResponsePastExperienceCompletedEventHandler FnBidResponsePastExperienceCompleted;
        
        /// <remarks/>
        public event FnInsertStaffEntryCompletedEventHandler FnInsertStaffEntryCompleted;
        
        /// <remarks/>
        public event FnInsertStaffQlfEntryCompletedEventHandler FnInsertStaffQlfEntryCompleted;
        
        /// <remarks/>
        public event FnInsertStaffXPrEntryCompletedEventHandler FnInsertStaffXPrEntryCompleted;
        
        /// <remarks/>
        public event FnCompleteSupplierRegCompletedEventHandler FnCompleteSupplierRegCompleted;
        
        /// <remarks/>
        public event FnGetOwnerPercentageCompletedEventHandler FnGetOwnerPercentageCompleted;
        
        /// <remarks/>
        public event FnInsertRFIresponseHeaderCompletedEventHandler FnInsertRFIresponseHeaderCompleted;
        
        /// <remarks/>
        public event FnGetLastDocumentNoRegistrationCompletedEventHandler FnGetLastDocumentNoRegistrationCompleted;
        
        /// <remarks/>
        public event FnGetLastDocumentNoCompletedEventHandler FnGetLastDocumentNoCompleted;
        
        /// <remarks/>
        public event FnInsertIFRResponseLinesCompletedEventHandler FnInsertIFRResponseLinesCompleted;
        
        /// <remarks/>
        public event FnInsertRFIResponseLinesCompletedEventHandler FnInsertRFIResponseLinesCompleted;
        
        /// <remarks/>
        public event FnInsertRFIResponseLinesDetailsCompletedEventHandler FnInsertRFIResponseLinesDetailsCompleted;
        
        /// <remarks/>
        public event FnSubmitResponseFinalCompletedEventHandler FnSubmitResponseFinalCompleted;
        
        /// <remarks/>
        public event FnPrequalificationResponseDetailsCompletedEventHandler FnPrequalificationResponseDetailsCompleted;
        
        /// <remarks/>
        public event FnInsertFiledetails_RfiCompletedEventHandler FnInsertFiledetails_RfiCompleted;
        
        /// <remarks/>
        public event FnInsertPrequalificatinDocumentsCompletedEventHandler FnInsertPrequalificatinDocumentsCompleted;
        
        /// <remarks/>
        public event FnInsertBidReponseDocumentsCompletedEventHandler FnInsertBidReponseDocumentsCompleted;
        
        /// <remarks/>
        public event FnSubmisionResponseStatusCompletedEventHandler FnSubmisionResponseStatusCompleted;
        
        /// <remarks/>
        public event FnGetEvalCritScoresCompletedEventHandler FnGetEvalCritScoresCompleted;
        
        /// <remarks/>
        public event FnrfiResponsetLinksCompletedEventHandler FnrfiResponsetLinksCompleted;
        
        /// <remarks/>
        public event FnSupplierRegistrationLinksCompletedEventHandler FnSupplierRegistrationLinksCompleted;
        
        /// <remarks/>
        public event FnSubmitTenderResponseCompletedEventHandler FnSubmitTenderResponseCompleted;
        
        /// <remarks/>
        public event FngetBidResponseNumberCompletedEventHandler FngetBidResponseNumberCompleted;
        
        /// <remarks/>
        public event FnInserBidInfoTab1CompletedEventHandler FnInserBidInfoTab1Completed;
        
        /// <remarks/>
        public event FnInserBidGeneralDetailsCompletedEventHandler FnInserBidGeneralDetailsCompleted;
        
        /// <remarks/>
        public event FnInsertBidPersonnelDetailsCompletedEventHandler FnInsertBidPersonnelDetailsCompleted;
        
        /// <remarks/>
        public event FnInsertBidEquipmentsDetailsCompletedEventHandler FnInsertBidEquipmentsDetailsCompleted;
        
        /// <remarks/>
        public event FnAddBidPrefrCompletedEventHandler FnAddBidPrefrCompleted;
        
        /// <remarks/>
        public event FnDeleteBidAuditedBalsheetCompletedEventHandler FnDeleteBidAuditedBalsheetCompleted;
        
        /// <remarks/>
        public event ResetSendEmailCompletedEventHandler ResetSendEmailCompleted;
        
        /// <remarks/>
        public event FnSubmitRFQResponseCompletedEventHandler FnSubmitRFQResponseCompleted;
        
        /// <remarks/>
        public event FnInserRFQBidGeneralDetailsCompletedEventHandler FnInserRFQBidGeneralDetailsCompleted;
        
        /// <remarks/>
        public event FnGenerateRFQPreviewReportCompletedEventHandler FnGenerateRFQPreviewReportCompleted;
        
        /// <remarks/>
        public event FnGeneratePrequalificationPreviewReportCompletedEventHandler FnGeneratePrequalificationPreviewReportCompleted;
        
        /// <remarks/>
        public event FnGenerateRegistrationPreviewReportCompletedEventHandler FnGenerateRegistrationPreviewReportCompleted;
        
        /// <remarks/>
        public event FnDeletePrequalificatinDocumentsCompletedEventHandler FnDeletePrequalificatinDocumentsCompleted;
        
        /// <remarks/>
        public event FnInsertBeneficiariesCompletedEventHandler FnInsertBeneficiariesCompleted;
        
        /// <remarks/>
        public event FnSubmitPrequalificationResponseCompletedEventHandler FnSubmitPrequalificationResponseCompleted;
        
        /// <remarks/>
        public event FnGetRegisteredCategoriesCompletedEventHandler FnGetRegisteredCategoriesCompleted;
        
        /// <remarks/>
        public event FnCreatNewWorkExecutionPlanCompletedEventHandler FnCreatNewWorkExecutionPlanCompleted;
        
        /// <remarks/>
        public event FnCreatNewWorkExecutionPlanDetailsCompletedEventHandler FnCreatNewWorkExecutionPlanDetailsCompleted;
        
        /// <remarks/>
        public event FnCreatWorkExecutionScheduleDetailsCompletedEventHandler FnCreatWorkExecutionScheduleDetailsCompleted;
        
        /// <remarks/>
        public event FngetWorkExecutionPlanNumberCompletedEventHandler FngetWorkExecutionPlanNumberCompleted;
        
        /// <remarks/>
        public event FngetWorkExecutionPlanProjectNumberCompletedEventHandler FngetWorkExecutionPlanProjectNumberCompleted;
        
        /// <remarks/>
        public event FngetContractNoCompletedEventHandler FngetContractNoCompleted;
        
        /// <remarks/>
        public event FnSubmitWorkExecutionPlanScheduleDetailsCompletedEventHandler FnSubmitWorkExecutionPlanScheduleDetailsCompleted;
        
        /// <remarks/>
        public event FnSubmitWorkExecutionPlanContractorTeamCompletedEventHandler FnSubmitWorkExecutionPlanContractorTeamCompleted;
        
        /// <remarks/>
        public event FnPopulateWorkExecutionPlanLinesCompletedEventHandler FnPopulateWorkExecutionPlanLinesCompleted;
        
        /// <remarks/>
        public event FnSubmitWorkExecutionPlanEquipmentsCompletedEventHandler FnSubmitWorkExecutionPlanEquipmentsCompleted;
        
        /// <remarks/>
        public event FnSubmitWEPEquipmentRepairPlanCompletedEventHandler FnSubmitWEPEquipmentRepairPlanCompleted;
        
        /// <remarks/>
        public event FnCreateApplicantAccountRequestCompletedEventHandler FnCreateApplicantAccountRequestCompleted;
        
        /// <remarks/>
        public event FnUpdateAcknowledgementStatusCompletedEventHandler FnUpdateAcknowledgementStatusCompleted;
        
        /// <remarks/>
        public event FnUpdateAcknowledgementStatusDWRCompletedEventHandler FnUpdateAcknowledgementStatusDWRCompleted;
        
        /// <remarks/>
        public event FnUpdateAcknowledgementStatusSiteInstructionsCompletedEventHandler FnUpdateAcknowledgementStatusSiteInstructionsCompleted;
        
        /// <remarks/>
        public event FnGeneratePCOReportCompletedEventHandler FnGeneratePCOReportCompleted;
        
        /// <remarks/>
        public event FnSubmitWEPMethodofWorksCompletedEventHandler FnSubmitWEPMethodofWorksCompleted;
        
        /// <remarks/>
        public event FnsendWEPRecordForApprovalCompletedEventHandler FnsendWEPRecordForApprovalCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FncancelWEPRecordApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FncancelWEPRecordApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FncancelWEPRecordApproval(string vendorNo, string documentNo, string recordType) {
            object[] results = this.Invoke("FncancelWEPRecordApproval", new object[] {
                        vendorNo,
                        documentNo,
                        recordType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FncancelWEPRecordApprovalAsync(string vendorNo, string documentNo, string recordType) {
            this.FncancelWEPRecordApprovalAsync(vendorNo, documentNo, recordType, null);
        }
        
        /// <remarks/>
        public void FncancelWEPRecordApprovalAsync(string vendorNo, string documentNo, string recordType, object userState) {
            if ((this.FncancelWEPRecordApprovalOperationCompleted == null)) {
                this.FncancelWEPRecordApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFncancelWEPRecordApprovalOperationCompleted);
            }
            this.InvokeAsync("FncancelWEPRecordApproval", new object[] {
                        vendorNo,
                        documentNo,
                        recordType}, this.FncancelWEPRecordApprovalOperationCompleted, userState);
        }
        
        private void OnFncancelWEPRecordApprovalOperationCompleted(object arg) {
            if ((this.FncancelWEPRecordApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FncancelWEPRecordApprovalCompleted(this, new FncancelWEPRecordApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGenerateWEPReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGenerateWEPReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateWEPReport(string vendorNo, string pCONo) {
            object[] results = this.Invoke("FnGenerateWEPReport", new object[] {
                        vendorNo,
                        pCONo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateWEPReportAsync(string vendorNo, string pCONo) {
            this.FnGenerateWEPReportAsync(vendorNo, pCONo, null);
        }
        
        /// <remarks/>
        public void FnGenerateWEPReportAsync(string vendorNo, string pCONo, object userState) {
            if ((this.FnGenerateWEPReportOperationCompleted == null)) {
                this.FnGenerateWEPReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateWEPReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateWEPReport", new object[] {
                        vendorNo,
                        pCONo}, this.FnGenerateWEPReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateWEPReportOperationCompleted(object arg) {
            if ((this.FnGenerateWEPReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateWEPReportCompleted(this, new FnGenerateWEPReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitProjectPhotoRecord", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitProjectPhotoRecord_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitProjectPhotoRecord(string projectid, string externalrefno, string comments) {
            object[] results = this.Invoke("FnSubmitProjectPhotoRecord", new object[] {
                        projectid,
                        externalrefno,
                        comments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitProjectPhotoRecordAsync(string projectid, string externalrefno, string comments) {
            this.FnSubmitProjectPhotoRecordAsync(projectid, externalrefno, comments, null);
        }
        
        /// <remarks/>
        public void FnSubmitProjectPhotoRecordAsync(string projectid, string externalrefno, string comments, object userState) {
            if ((this.FnSubmitProjectPhotoRecordOperationCompleted == null)) {
                this.FnSubmitProjectPhotoRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitProjectPhotoRecordOperationCompleted);
            }
            this.InvokeAsync("FnSubmitProjectPhotoRecord", new object[] {
                        projectid,
                        externalrefno,
                        comments}, this.FnSubmitProjectPhotoRecordOperationCompleted, userState);
        }
        
        private void OnFnSubmitProjectPhotoRecordOperationCompleted(object arg) {
            if ((this.FnSubmitProjectPhotoRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitProjectPhotoRecordCompleted(this, new FnSubmitProjectPhotoRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnCreateNewDailyWorkRecord", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnCreateNewDailyWorkRecord_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCreateNewDailyWorkRecord(string vendornumber, string wepID, decimal temperature, [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime workingstartdade, [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime workingenddate, int casualstaffno, decimal rainfall, string otherWeathercondition) {
            object[] results = this.Invoke("FnCreateNewDailyWorkRecord", new object[] {
                        vendornumber,
                        wepID,
                        temperature,
                        workingstartdade,
                        workingenddate,
                        casualstaffno,
                        rainfall,
                        otherWeathercondition});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreateNewDailyWorkRecordAsync(string vendornumber, string wepID, decimal temperature, System.DateTime workingstartdade, System.DateTime workingenddate, int casualstaffno, decimal rainfall, string otherWeathercondition) {
            this.FnCreateNewDailyWorkRecordAsync(vendornumber, wepID, temperature, workingstartdade, workingenddate, casualstaffno, rainfall, otherWeathercondition, null);
        }
        
        /// <remarks/>
        public void FnCreateNewDailyWorkRecordAsync(string vendornumber, string wepID, decimal temperature, System.DateTime workingstartdade, System.DateTime workingenddate, int casualstaffno, decimal rainfall, string otherWeathercondition, object userState) {
            if ((this.FnCreateNewDailyWorkRecordOperationCompleted == null)) {
                this.FnCreateNewDailyWorkRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreateNewDailyWorkRecordOperationCompleted);
            }
            this.InvokeAsync("FnCreateNewDailyWorkRecord", new object[] {
                        vendornumber,
                        wepID,
                        temperature,
                        workingstartdade,
                        workingenddate,
                        casualstaffno,
                        rainfall,
                        otherWeathercondition}, this.FnCreateNewDailyWorkRecordOperationCompleted, userState);
        }
        
        private void OnFnCreateNewDailyWorkRecordOperationCompleted(object arg) {
            if ((this.FnCreateNewDailyWorkRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreateNewDailyWorkRecordCompleted(this, new FnCreateNewDailyWorkRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitDailyWorkRecordExecu" +
            "tionLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitDailyWorkRecordExecutionLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitDailyWorkRecordExecutionLines(string vendornumber, string documentno, string projectid, string jobtaskno, int lineno, decimal quantitydone, string additionalcomments, string photono) {
            object[] results = this.Invoke("FnSubmitDailyWorkRecordExecutionLines", new object[] {
                        vendornumber,
                        documentno,
                        projectid,
                        jobtaskno,
                        lineno,
                        quantitydone,
                        additionalcomments,
                        photono});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitDailyWorkRecordExecutionLinesAsync(string vendornumber, string documentno, string projectid, string jobtaskno, int lineno, decimal quantitydone, string additionalcomments, string photono) {
            this.FnSubmitDailyWorkRecordExecutionLinesAsync(vendornumber, documentno, projectid, jobtaskno, lineno, quantitydone, additionalcomments, photono, null);
        }
        
        /// <remarks/>
        public void FnSubmitDailyWorkRecordExecutionLinesAsync(string vendornumber, string documentno, string projectid, string jobtaskno, int lineno, decimal quantitydone, string additionalcomments, string photono, object userState) {
            if ((this.FnSubmitDailyWorkRecordExecutionLinesOperationCompleted == null)) {
                this.FnSubmitDailyWorkRecordExecutionLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitDailyWorkRecordExecutionLinesOperationCompleted);
            }
            this.InvokeAsync("FnSubmitDailyWorkRecordExecutionLines", new object[] {
                        vendornumber,
                        documentno,
                        projectid,
                        jobtaskno,
                        lineno,
                        quantitydone,
                        additionalcomments,
                        photono}, this.FnSubmitDailyWorkRecordExecutionLinesOperationCompleted, userState);
        }
        
        private void OnFnSubmitDailyWorkRecordExecutionLinesOperationCompleted(object arg) {
            if ((this.FnSubmitDailyWorkRecordExecutionLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitDailyWorkRecordExecutionLinesCompleted(this, new FnSubmitDailyWorkRecordExecutionLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FngetDWRWorkExecutionPlanNum" +
            "ber", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FngetDWRWorkExecutionPlanNumber_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetDWRWorkExecutionPlanNumber(string vendorNumber, string dailyworkrecordno) {
            object[] results = this.Invoke("FngetDWRWorkExecutionPlanNumber", new object[] {
                        vendorNumber,
                        dailyworkrecordno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetDWRWorkExecutionPlanNumberAsync(string vendorNumber, string dailyworkrecordno) {
            this.FngetDWRWorkExecutionPlanNumberAsync(vendorNumber, dailyworkrecordno, null);
        }
        
        /// <remarks/>
        public void FngetDWRWorkExecutionPlanNumberAsync(string vendorNumber, string dailyworkrecordno, object userState) {
            if ((this.FngetDWRWorkExecutionPlanNumberOperationCompleted == null)) {
                this.FngetDWRWorkExecutionPlanNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetDWRWorkExecutionPlanNumberOperationCompleted);
            }
            this.InvokeAsync("FngetDWRWorkExecutionPlanNumber", new object[] {
                        vendorNumber,
                        dailyworkrecordno}, this.FngetDWRWorkExecutionPlanNumberOperationCompleted, userState);
        }
        
        private void OnFngetDWRWorkExecutionPlanNumberOperationCompleted(object arg) {
            if ((this.FngetDWRWorkExecutionPlanNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetDWRWorkExecutionPlanNumberCompleted(this, new FngetDWRWorkExecutionPlanNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FngetDailyWorkRecordProjectN" +
            "umber", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FngetDailyWorkRecordProjectNumber_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetDailyWorkRecordProjectNumber(string documentno) {
            object[] results = this.Invoke("FngetDailyWorkRecordProjectNumber", new object[] {
                        documentno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetDailyWorkRecordProjectNumberAsync(string documentno) {
            this.FngetDailyWorkRecordProjectNumberAsync(documentno, null);
        }
        
        /// <remarks/>
        public void FngetDailyWorkRecordProjectNumberAsync(string documentno, object userState) {
            if ((this.FngetDailyWorkRecordProjectNumberOperationCompleted == null)) {
                this.FngetDailyWorkRecordProjectNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetDailyWorkRecordProjectNumberOperationCompleted);
            }
            this.InvokeAsync("FngetDailyWorkRecordProjectNumber", new object[] {
                        documentno}, this.FngetDailyWorkRecordProjectNumberOperationCompleted, userState);
        }
        
        private void OnFngetDailyWorkRecordProjectNumberOperationCompleted(object arg) {
            if ((this.FngetDailyWorkRecordProjectNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetDailyWorkRecordProjectNumberCompleted(this, new FngetDailyWorkRecordProjectNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FngetDailyWorkRecordDocument" +
            "Date", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FngetDailyWorkRecordDocumentDate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetDailyWorkRecordDocumentDate(string documentno) {
            object[] results = this.Invoke("FngetDailyWorkRecordDocumentDate", new object[] {
                        documentno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetDailyWorkRecordDocumentDateAsync(string documentno) {
            this.FngetDailyWorkRecordDocumentDateAsync(documentno, null);
        }
        
        /// <remarks/>
        public void FngetDailyWorkRecordDocumentDateAsync(string documentno, object userState) {
            if ((this.FngetDailyWorkRecordDocumentDateOperationCompleted == null)) {
                this.FngetDailyWorkRecordDocumentDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetDailyWorkRecordDocumentDateOperationCompleted);
            }
            this.InvokeAsync("FngetDailyWorkRecordDocumentDate", new object[] {
                        documentno}, this.FngetDailyWorkRecordDocumentDateOperationCompleted, userState);
        }
        
        private void OnFngetDailyWorkRecordDocumentDateOperationCompleted(object arg) {
            if ((this.FngetDailyWorkRecordDocumentDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetDailyWorkRecordDocumentDateCompleted(this, new FngetDailyWorkRecordDocumentDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FngetEOTRequestProjectEngine" +
            "er", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FngetEOTRequestProjectEngineer_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetEOTRequestProjectEngineer(string documentno) {
            object[] results = this.Invoke("FngetEOTRequestProjectEngineer", new object[] {
                        documentno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetEOTRequestProjectEngineerAsync(string documentno) {
            this.FngetEOTRequestProjectEngineerAsync(documentno, null);
        }
        
        /// <remarks/>
        public void FngetEOTRequestProjectEngineerAsync(string documentno, object userState) {
            if ((this.FngetEOTRequestProjectEngineerOperationCompleted == null)) {
                this.FngetEOTRequestProjectEngineerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetEOTRequestProjectEngineerOperationCompleted);
            }
            this.InvokeAsync("FngetEOTRequestProjectEngineer", new object[] {
                        documentno}, this.FngetEOTRequestProjectEngineerOperationCompleted, userState);
        }
        
        private void OnFngetEOTRequestProjectEngineerOperationCompleted(object arg) {
            if ((this.FngetEOTRequestProjectEngineerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetEOTRequestProjectEngineerCompleted(this, new FngetEOTRequestProjectEngineerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FngetEOTRequestProjectManage" +
            "r", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FngetEOTRequestProjectManager_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetEOTRequestProjectManager(string documentno) {
            object[] results = this.Invoke("FngetEOTRequestProjectManager", new object[] {
                        documentno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetEOTRequestProjectManagerAsync(string documentno) {
            this.FngetEOTRequestProjectManagerAsync(documentno, null);
        }
        
        /// <remarks/>
        public void FngetEOTRequestProjectManagerAsync(string documentno, object userState) {
            if ((this.FngetEOTRequestProjectManagerOperationCompleted == null)) {
                this.FngetEOTRequestProjectManagerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetEOTRequestProjectManagerOperationCompleted);
            }
            this.InvokeAsync("FngetEOTRequestProjectManager", new object[] {
                        documentno}, this.FngetEOTRequestProjectManagerOperationCompleted, userState);
        }
        
        private void OnFngetEOTRequestProjectManagerOperationCompleted(object arg) {
            if ((this.FngetEOTRequestProjectManagerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetEOTRequestProjectManagerCompleted(this, new FngetEOTRequestProjectManagerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitDailyWorkRecordKeyTe" +
            "am", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitDailyWorkRecordKeyTeam_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitDailyWorkRecordKeyTeam(string vendornumber, string documentno, string projectid, string contractorstaffno) {
            object[] results = this.Invoke("FnSubmitDailyWorkRecordKeyTeam", new object[] {
                        vendornumber,
                        documentno,
                        projectid,
                        contractorstaffno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitDailyWorkRecordKeyTeamAsync(string vendornumber, string documentno, string projectid, string contractorstaffno) {
            this.FnSubmitDailyWorkRecordKeyTeamAsync(vendornumber, documentno, projectid, contractorstaffno, null);
        }
        
        /// <remarks/>
        public void FnSubmitDailyWorkRecordKeyTeamAsync(string vendornumber, string documentno, string projectid, string contractorstaffno, object userState) {
            if ((this.FnSubmitDailyWorkRecordKeyTeamOperationCompleted == null)) {
                this.FnSubmitDailyWorkRecordKeyTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitDailyWorkRecordKeyTeamOperationCompleted);
            }
            this.InvokeAsync("FnSubmitDailyWorkRecordKeyTeam", new object[] {
                        vendornumber,
                        documentno,
                        projectid,
                        contractorstaffno}, this.FnSubmitDailyWorkRecordKeyTeamOperationCompleted, userState);
        }
        
        private void OnFnSubmitDailyWorkRecordKeyTeamOperationCompleted(object arg) {
            if ((this.FnSubmitDailyWorkRecordKeyTeamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitDailyWorkRecordKeyTeamCompleted(this, new FnSubmitDailyWorkRecordKeyTeamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitDailyWorkRecordEquip" +
            "ment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitDailyWorkRecordEquipment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitDailyWorkRecordEquipment(string vendornumber, string documentno, string projectid, string equipmentno, string photono, int utilization, int usagehours, string remarks) {
            object[] results = this.Invoke("FnSubmitDailyWorkRecordEquipment", new object[] {
                        vendornumber,
                        documentno,
                        projectid,
                        equipmentno,
                        photono,
                        utilization,
                        usagehours,
                        remarks});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitDailyWorkRecordEquipmentAsync(string vendornumber, string documentno, string projectid, string equipmentno, string photono, int utilization, int usagehours, string remarks) {
            this.FnSubmitDailyWorkRecordEquipmentAsync(vendornumber, documentno, projectid, equipmentno, photono, utilization, usagehours, remarks, null);
        }
        
        /// <remarks/>
        public void FnSubmitDailyWorkRecordEquipmentAsync(string vendornumber, string documentno, string projectid, string equipmentno, string photono, int utilization, int usagehours, string remarks, object userState) {
            if ((this.FnSubmitDailyWorkRecordEquipmentOperationCompleted == null)) {
                this.FnSubmitDailyWorkRecordEquipmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitDailyWorkRecordEquipmentOperationCompleted);
            }
            this.InvokeAsync("FnSubmitDailyWorkRecordEquipment", new object[] {
                        vendornumber,
                        documentno,
                        projectid,
                        equipmentno,
                        photono,
                        utilization,
                        usagehours,
                        remarks}, this.FnSubmitDailyWorkRecordEquipmentOperationCompleted, userState);
        }
        
        private void OnFnSubmitDailyWorkRecordEquipmentOperationCompleted(object arg) {
            if ((this.FnSubmitDailyWorkRecordEquipmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitDailyWorkRecordEquipmentCompleted(this, new FnSubmitDailyWorkRecordEquipmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitDailyWorkRecordMater" +
            "ialsDelivered", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitDailyWorkRecordMaterialsDelivered_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitDailyWorkRecordMaterialsDelivered(string vendornumber, string documentno, string materialid, string photono, int quantity, string materialtestrecid) {
            object[] results = this.Invoke("FnSubmitDailyWorkRecordMaterialsDelivered", new object[] {
                        vendornumber,
                        documentno,
                        materialid,
                        photono,
                        quantity,
                        materialtestrecid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitDailyWorkRecordMaterialsDeliveredAsync(string vendornumber, string documentno, string materialid, string photono, int quantity, string materialtestrecid) {
            this.FnSubmitDailyWorkRecordMaterialsDeliveredAsync(vendornumber, documentno, materialid, photono, quantity, materialtestrecid, null);
        }
        
        /// <remarks/>
        public void FnSubmitDailyWorkRecordMaterialsDeliveredAsync(string vendornumber, string documentno, string materialid, string photono, int quantity, string materialtestrecid, object userState) {
            if ((this.FnSubmitDailyWorkRecordMaterialsDeliveredOperationCompleted == null)) {
                this.FnSubmitDailyWorkRecordMaterialsDeliveredOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitDailyWorkRecordMaterialsDeliveredOperationCompleted);
            }
            this.InvokeAsync("FnSubmitDailyWorkRecordMaterialsDelivered", new object[] {
                        vendornumber,
                        documentno,
                        materialid,
                        photono,
                        quantity,
                        materialtestrecid}, this.FnSubmitDailyWorkRecordMaterialsDeliveredOperationCompleted, userState);
        }
        
        private void OnFnSubmitDailyWorkRecordMaterialsDeliveredOperationCompleted(object arg) {
            if ((this.FnSubmitDailyWorkRecordMaterialsDeliveredCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitDailyWorkRecordMaterialsDeliveredCompleted(this, new FnSubmitDailyWorkRecordMaterialsDeliveredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitDailyWorkRecordMater" +
            "ialsRemoved", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitDailyWorkRecordMaterialsRemoved_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitDailyWorkRecordMaterialsRemoved(string vendornumber, string documentno, string materialid, string photono, int quantity, string materialtestrecid, string reasonsforremoval) {
            object[] results = this.Invoke("FnSubmitDailyWorkRecordMaterialsRemoved", new object[] {
                        vendornumber,
                        documentno,
                        materialid,
                        photono,
                        quantity,
                        materialtestrecid,
                        reasonsforremoval});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitDailyWorkRecordMaterialsRemovedAsync(string vendornumber, string documentno, string materialid, string photono, int quantity, string materialtestrecid, string reasonsforremoval) {
            this.FnSubmitDailyWorkRecordMaterialsRemovedAsync(vendornumber, documentno, materialid, photono, quantity, materialtestrecid, reasonsforremoval, null);
        }
        
        /// <remarks/>
        public void FnSubmitDailyWorkRecordMaterialsRemovedAsync(string vendornumber, string documentno, string materialid, string photono, int quantity, string materialtestrecid, string reasonsforremoval, object userState) {
            if ((this.FnSubmitDailyWorkRecordMaterialsRemovedOperationCompleted == null)) {
                this.FnSubmitDailyWorkRecordMaterialsRemovedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitDailyWorkRecordMaterialsRemovedOperationCompleted);
            }
            this.InvokeAsync("FnSubmitDailyWorkRecordMaterialsRemoved", new object[] {
                        vendornumber,
                        documentno,
                        materialid,
                        photono,
                        quantity,
                        materialtestrecid,
                        reasonsforremoval}, this.FnSubmitDailyWorkRecordMaterialsRemovedOperationCompleted, userState);
        }
        
        private void OnFnSubmitDailyWorkRecordMaterialsRemovedOperationCompleted(object arg) {
            if ((this.FnSubmitDailyWorkRecordMaterialsRemovedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitDailyWorkRecordMaterialsRemovedCompleted(this, new FnSubmitDailyWorkRecordMaterialsRemovedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitDailyWorkRecordLabou" +
            "rSchedule", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitDailyWorkRecordLabourSchedule_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitDailyWorkRecordLabourSchedule(string vendornumber, string documentno, int labourtype, int noofstaff, decimal averagemanhours, decimal estimatetotalwagespaid) {
            object[] results = this.Invoke("FnSubmitDailyWorkRecordLabourSchedule", new object[] {
                        vendornumber,
                        documentno,
                        labourtype,
                        noofstaff,
                        averagemanhours,
                        estimatetotalwagespaid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitDailyWorkRecordLabourScheduleAsync(string vendornumber, string documentno, int labourtype, int noofstaff, decimal averagemanhours, decimal estimatetotalwagespaid) {
            this.FnSubmitDailyWorkRecordLabourScheduleAsync(vendornumber, documentno, labourtype, noofstaff, averagemanhours, estimatetotalwagespaid, null);
        }
        
        /// <remarks/>
        public void FnSubmitDailyWorkRecordLabourScheduleAsync(string vendornumber, string documentno, int labourtype, int noofstaff, decimal averagemanhours, decimal estimatetotalwagespaid, object userState) {
            if ((this.FnSubmitDailyWorkRecordLabourScheduleOperationCompleted == null)) {
                this.FnSubmitDailyWorkRecordLabourScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitDailyWorkRecordLabourScheduleOperationCompleted);
            }
            this.InvokeAsync("FnSubmitDailyWorkRecordLabourSchedule", new object[] {
                        vendornumber,
                        documentno,
                        labourtype,
                        noofstaff,
                        averagemanhours,
                        estimatetotalwagespaid}, this.FnSubmitDailyWorkRecordLabourScheduleOperationCompleted, userState);
        }
        
        private void OnFnSubmitDailyWorkRecordLabourScheduleOperationCompleted(object arg) {
            if ((this.FnSubmitDailyWorkRecordLabourScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitDailyWorkRecordLabourScheduleCompleted(this, new FnSubmitDailyWorkRecordLabourScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitDailyWorkRecordVisit" +
            "or", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitDailyWorkRecordVisitor_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitDailyWorkRecordVisitor(string vendornumber, string documentno, string projectid, string visitorname, string organization, [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime timein, [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime timeout, string purpose, string telephoneno, string idpassportno, string remarks, string vistoremail) {
            object[] results = this.Invoke("FnSubmitDailyWorkRecordVisitor", new object[] {
                        vendornumber,
                        documentno,
                        projectid,
                        visitorname,
                        organization,
                        timein,
                        timeout,
                        purpose,
                        telephoneno,
                        idpassportno,
                        remarks,
                        vistoremail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitDailyWorkRecordVisitorAsync(string vendornumber, string documentno, string projectid, string visitorname, string organization, System.DateTime timein, System.DateTime timeout, string purpose, string telephoneno, string idpassportno, string remarks, string vistoremail) {
            this.FnSubmitDailyWorkRecordVisitorAsync(vendornumber, documentno, projectid, visitorname, organization, timein, timeout, purpose, telephoneno, idpassportno, remarks, vistoremail, null);
        }
        
        /// <remarks/>
        public void FnSubmitDailyWorkRecordVisitorAsync(string vendornumber, string documentno, string projectid, string visitorname, string organization, System.DateTime timein, System.DateTime timeout, string purpose, string telephoneno, string idpassportno, string remarks, string vistoremail, object userState) {
            if ((this.FnSubmitDailyWorkRecordVisitorOperationCompleted == null)) {
                this.FnSubmitDailyWorkRecordVisitorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitDailyWorkRecordVisitorOperationCompleted);
            }
            this.InvokeAsync("FnSubmitDailyWorkRecordVisitor", new object[] {
                        vendornumber,
                        documentno,
                        projectid,
                        visitorname,
                        organization,
                        timein,
                        timeout,
                        purpose,
                        telephoneno,
                        idpassportno,
                        remarks,
                        vistoremail}, this.FnSubmitDailyWorkRecordVisitorOperationCompleted, userState);
        }
        
        private void OnFnSubmitDailyWorkRecordVisitorOperationCompleted(object arg) {
            if ((this.FnSubmitDailyWorkRecordVisitorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitDailyWorkRecordVisitorCompleted(this, new FnSubmitDailyWorkRecordVisitorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitDailyWorkRecordMeeti" +
            "ngs", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitDailyWorkRecordMeetings_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitDailyWorkRecordMeetings(string vendornumber, string documentno, string projectid, string meetingtype, string meetingorganizerid, [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime starttime, [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime endtime, string duration, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startdate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime enddate, int meetingstatus, string venue) {
            object[] results = this.Invoke("FnSubmitDailyWorkRecordMeetings", new object[] {
                        vendornumber,
                        documentno,
                        projectid,
                        meetingtype,
                        meetingorganizerid,
                        starttime,
                        endtime,
                        duration,
                        startdate,
                        enddate,
                        meetingstatus,
                        venue});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitDailyWorkRecordMeetingsAsync(string vendornumber, string documentno, string projectid, string meetingtype, string meetingorganizerid, System.DateTime starttime, System.DateTime endtime, string duration, System.DateTime startdate, System.DateTime enddate, int meetingstatus, string venue) {
            this.FnSubmitDailyWorkRecordMeetingsAsync(vendornumber, documentno, projectid, meetingtype, meetingorganizerid, starttime, endtime, duration, startdate, enddate, meetingstatus, venue, null);
        }
        
        /// <remarks/>
        public void FnSubmitDailyWorkRecordMeetingsAsync(string vendornumber, string documentno, string projectid, string meetingtype, string meetingorganizerid, System.DateTime starttime, System.DateTime endtime, string duration, System.DateTime startdate, System.DateTime enddate, int meetingstatus, string venue, object userState) {
            if ((this.FnSubmitDailyWorkRecordMeetingsOperationCompleted == null)) {
                this.FnSubmitDailyWorkRecordMeetingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitDailyWorkRecordMeetingsOperationCompleted);
            }
            this.InvokeAsync("FnSubmitDailyWorkRecordMeetings", new object[] {
                        vendornumber,
                        documentno,
                        projectid,
                        meetingtype,
                        meetingorganizerid,
                        starttime,
                        endtime,
                        duration,
                        startdate,
                        enddate,
                        meetingstatus,
                        venue}, this.FnSubmitDailyWorkRecordMeetingsOperationCompleted, userState);
        }
        
        private void OnFnSubmitDailyWorkRecordMeetingsOperationCompleted(object arg) {
            if ((this.FnSubmitDailyWorkRecordMeetingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitDailyWorkRecordMeetingsCompleted(this, new FnSubmitDailyWorkRecordMeetingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitContractorAdvancePay" +
            "ment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitContractorAdvancePayment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitContractorAdvancePayment(string vendornumber, string documentno, string projectid, decimal advanceamount, int guaranteeref, int performancesecurityid, string advancejustification) {
            object[] results = this.Invoke("FnSubmitContractorAdvancePayment", new object[] {
                        vendornumber,
                        documentno,
                        projectid,
                        advanceamount,
                        guaranteeref,
                        performancesecurityid,
                        advancejustification});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitContractorAdvancePaymentAsync(string vendornumber, string documentno, string projectid, decimal advanceamount, int guaranteeref, int performancesecurityid, string advancejustification) {
            this.FnSubmitContractorAdvancePaymentAsync(vendornumber, documentno, projectid, advanceamount, guaranteeref, performancesecurityid, advancejustification, null);
        }
        
        /// <remarks/>
        public void FnSubmitContractorAdvancePaymentAsync(string vendornumber, string documentno, string projectid, decimal advanceamount, int guaranteeref, int performancesecurityid, string advancejustification, object userState) {
            if ((this.FnSubmitContractorAdvancePaymentOperationCompleted == null)) {
                this.FnSubmitContractorAdvancePaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitContractorAdvancePaymentOperationCompleted);
            }
            this.InvokeAsync("FnSubmitContractorAdvancePayment", new object[] {
                        vendornumber,
                        documentno,
                        projectid,
                        advanceamount,
                        guaranteeref,
                        performancesecurityid,
                        advancejustification}, this.FnSubmitContractorAdvancePaymentOperationCompleted, userState);
        }
        
        private void OnFnSubmitContractorAdvancePaymentOperationCompleted(object arg) {
            if ((this.FnSubmitContractorAdvancePaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitContractorAdvancePaymentCompleted(this, new FnSubmitContractorAdvancePaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitContractorPaymentReq" +
            "uest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitContractorPaymentRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitContractorPaymentRequest(string vendornumber, string documentno, string projectid) {
            object[] results = this.Invoke("FnSubmitContractorPaymentRequest", new object[] {
                        vendornumber,
                        documentno,
                        projectid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitContractorPaymentRequestAsync(string vendornumber, string documentno, string projectid) {
            this.FnSubmitContractorPaymentRequestAsync(vendornumber, documentno, projectid, null);
        }
        
        /// <remarks/>
        public void FnSubmitContractorPaymentRequestAsync(string vendornumber, string documentno, string projectid, object userState) {
            if ((this.FnSubmitContractorPaymentRequestOperationCompleted == null)) {
                this.FnSubmitContractorPaymentRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitContractorPaymentRequestOperationCompleted);
            }
            this.InvokeAsync("FnSubmitContractorPaymentRequest", new object[] {
                        vendornumber,
                        documentno,
                        projectid}, this.FnSubmitContractorPaymentRequestOperationCompleted, userState);
        }
        
        private void OnFnSubmitContractorPaymentRequestOperationCompleted(object arg) {
            if ((this.FnSubmitContractorPaymentRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitContractorPaymentRequestCompleted(this, new FnSubmitContractorPaymentRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmiCPRTaskLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmiCPRTaskLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmiCPRTaskLines(string vendornumber, string documentno, string projectid, string jobtaskno, int lineno, decimal quantitydone, string additionalcomments, string photono) {
            object[] results = this.Invoke("FnSubmiCPRTaskLines", new object[] {
                        vendornumber,
                        documentno,
                        projectid,
                        jobtaskno,
                        lineno,
                        quantitydone,
                        additionalcomments,
                        photono});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmiCPRTaskLinesAsync(string vendornumber, string documentno, string projectid, string jobtaskno, int lineno, decimal quantitydone, string additionalcomments, string photono) {
            this.FnSubmiCPRTaskLinesAsync(vendornumber, documentno, projectid, jobtaskno, lineno, quantitydone, additionalcomments, photono, null);
        }
        
        /// <remarks/>
        public void FnSubmiCPRTaskLinesAsync(string vendornumber, string documentno, string projectid, string jobtaskno, int lineno, decimal quantitydone, string additionalcomments, string photono, object userState) {
            if ((this.FnSubmiCPRTaskLinesOperationCompleted == null)) {
                this.FnSubmiCPRTaskLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmiCPRTaskLinesOperationCompleted);
            }
            this.InvokeAsync("FnSubmiCPRTaskLines", new object[] {
                        vendornumber,
                        documentno,
                        projectid,
                        jobtaskno,
                        lineno,
                        quantitydone,
                        additionalcomments,
                        photono}, this.FnSubmiCPRTaskLinesOperationCompleted, userState);
        }
        
        private void OnFnSubmiCPRTaskLinesOperationCompleted(object arg) {
            if ((this.FnSubmiCPRTaskLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmiCPRTaskLinesCompleted(this, new FnSubmiCPRTaskLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmiCPRPlanningLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmiCPRPlanningLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmiCPRPlanningLines(string vendornumber, string documentno, string projectid, string jobtaskno, int lineno, decimal quantitydone, string additionalcomments, string photono) {
            object[] results = this.Invoke("FnSubmiCPRPlanningLines", new object[] {
                        vendornumber,
                        documentno,
                        projectid,
                        jobtaskno,
                        lineno,
                        quantitydone,
                        additionalcomments,
                        photono});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmiCPRPlanningLinesAsync(string vendornumber, string documentno, string projectid, string jobtaskno, int lineno, decimal quantitydone, string additionalcomments, string photono) {
            this.FnSubmiCPRPlanningLinesAsync(vendornumber, documentno, projectid, jobtaskno, lineno, quantitydone, additionalcomments, photono, null);
        }
        
        /// <remarks/>
        public void FnSubmiCPRPlanningLinesAsync(string vendornumber, string documentno, string projectid, string jobtaskno, int lineno, decimal quantitydone, string additionalcomments, string photono, object userState) {
            if ((this.FnSubmiCPRPlanningLinesOperationCompleted == null)) {
                this.FnSubmiCPRPlanningLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmiCPRPlanningLinesOperationCompleted);
            }
            this.InvokeAsync("FnSubmiCPRPlanningLines", new object[] {
                        vendornumber,
                        documentno,
                        projectid,
                        jobtaskno,
                        lineno,
                        quantitydone,
                        additionalcomments,
                        photono}, this.FnSubmiCPRPlanningLinesOperationCompleted, userState);
        }
        
        private void OnFnSubmiCPRPlanningLinesOperationCompleted(object arg) {
            if ((this.FnSubmiCPRPlanningLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmiCPRPlanningLinesCompleted(this, new FnSubmiCPRPlanningLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitFeeNoteRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitFeeNoteRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitFeeNoteRequest(string vendornumber, string documentno, string projectid) {
            object[] results = this.Invoke("FnSubmitFeeNoteRequest", new object[] {
                        vendornumber,
                        documentno,
                        projectid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitFeeNoteRequestAsync(string vendornumber, string documentno, string projectid) {
            this.FnSubmitFeeNoteRequestAsync(vendornumber, documentno, projectid, null);
        }
        
        /// <remarks/>
        public void FnSubmitFeeNoteRequestAsync(string vendornumber, string documentno, string projectid, object userState) {
            if ((this.FnSubmitFeeNoteRequestOperationCompleted == null)) {
                this.FnSubmitFeeNoteRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitFeeNoteRequestOperationCompleted);
            }
            this.InvokeAsync("FnSubmitFeeNoteRequest", new object[] {
                        vendornumber,
                        documentno,
                        projectid}, this.FnSubmitFeeNoteRequestOperationCompleted, userState);
        }
        
        private void OnFnSubmitFeeNoteRequestOperationCompleted(object arg) {
            if ((this.FnSubmitFeeNoteRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitFeeNoteRequestCompleted(this, new FnSubmitFeeNoteRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmiFeeNoteTaskLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmiFeeNoteTaskLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmiFeeNoteTaskLines(string vendornumber, string documentno, string projectid, string jobtaskno, int lineno, decimal quantitydone, string additionalcomments, string photono) {
            object[] results = this.Invoke("FnSubmiFeeNoteTaskLines", new object[] {
                        vendornumber,
                        documentno,
                        projectid,
                        jobtaskno,
                        lineno,
                        quantitydone,
                        additionalcomments,
                        photono});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmiFeeNoteTaskLinesAsync(string vendornumber, string documentno, string projectid, string jobtaskno, int lineno, decimal quantitydone, string additionalcomments, string photono) {
            this.FnSubmiFeeNoteTaskLinesAsync(vendornumber, documentno, projectid, jobtaskno, lineno, quantitydone, additionalcomments, photono, null);
        }
        
        /// <remarks/>
        public void FnSubmiFeeNoteTaskLinesAsync(string vendornumber, string documentno, string projectid, string jobtaskno, int lineno, decimal quantitydone, string additionalcomments, string photono, object userState) {
            if ((this.FnSubmiFeeNoteTaskLinesOperationCompleted == null)) {
                this.FnSubmiFeeNoteTaskLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmiFeeNoteTaskLinesOperationCompleted);
            }
            this.InvokeAsync("FnSubmiFeeNoteTaskLines", new object[] {
                        vendornumber,
                        documentno,
                        projectid,
                        jobtaskno,
                        lineno,
                        quantitydone,
                        additionalcomments,
                        photono}, this.FnSubmiFeeNoteTaskLinesOperationCompleted, userState);
        }
        
        private void OnFnSubmiFeeNoteTaskLinesOperationCompleted(object arg) {
            if ((this.FnSubmiFeeNoteTaskLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmiFeeNoteTaskLinesCompleted(this, new FnSubmiFeeNoteTaskLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmiFeeNotePlanningLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmiFeeNotePlanningLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmiFeeNotePlanningLines(string vendornumber, string documentno, string projectid, string jobtaskno, int lineno, decimal qtytoorder) {
            object[] results = this.Invoke("FnSubmiFeeNotePlanningLines", new object[] {
                        vendornumber,
                        documentno,
                        projectid,
                        jobtaskno,
                        lineno,
                        qtytoorder});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmiFeeNotePlanningLinesAsync(string vendornumber, string documentno, string projectid, string jobtaskno, int lineno, decimal qtytoorder) {
            this.FnSubmiFeeNotePlanningLinesAsync(vendornumber, documentno, projectid, jobtaskno, lineno, qtytoorder, null);
        }
        
        /// <remarks/>
        public void FnSubmiFeeNotePlanningLinesAsync(string vendornumber, string documentno, string projectid, string jobtaskno, int lineno, decimal qtytoorder, object userState) {
            if ((this.FnSubmiFeeNotePlanningLinesOperationCompleted == null)) {
                this.FnSubmiFeeNotePlanningLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmiFeeNotePlanningLinesOperationCompleted);
            }
            this.InvokeAsync("FnSubmiFeeNotePlanningLines", new object[] {
                        vendornumber,
                        documentno,
                        projectid,
                        jobtaskno,
                        lineno,
                        qtytoorder}, this.FnSubmiFeeNotePlanningLinesOperationCompleted, userState);
        }
        
        private void OnFnSubmiFeeNotePlanningLinesOperationCompleted(object arg) {
            if ((this.FnSubmiFeeNotePlanningLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmiFeeNotePlanningLinesCompleted(this, new FnSubmiFeeNotePlanningLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FngetCPRProjectNumber", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FngetCPRProjectNumber_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetCPRProjectNumber(string documentno) {
            object[] results = this.Invoke("FngetCPRProjectNumber", new object[] {
                        documentno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetCPRProjectNumberAsync(string documentno) {
            this.FngetCPRProjectNumberAsync(documentno, null);
        }
        
        /// <remarks/>
        public void FngetCPRProjectNumberAsync(string documentno, object userState) {
            if ((this.FngetCPRProjectNumberOperationCompleted == null)) {
                this.FngetCPRProjectNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetCPRProjectNumberOperationCompleted);
            }
            this.InvokeAsync("FngetCPRProjectNumber", new object[] {
                        documentno}, this.FngetCPRProjectNumberOperationCompleted, userState);
        }
        
        private void OnFngetCPRProjectNumberOperationCompleted(object arg) {
            if ((this.FngetCPRProjectNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetCPRProjectNumberCompleted(this, new FngetCPRProjectNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitRiskManagementPlan", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitRiskManagementPlan_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitRiskManagementPlan(string vendornumber, string documentno, string projectid, string primarymission, string staffno) {
            object[] results = this.Invoke("FnSubmitRiskManagementPlan", new object[] {
                        vendornumber,
                        documentno,
                        projectid,
                        primarymission,
                        staffno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitRiskManagementPlanAsync(string vendornumber, string documentno, string projectid, string primarymission, string staffno) {
            this.FnSubmitRiskManagementPlanAsync(vendornumber, documentno, projectid, primarymission, staffno, null);
        }
        
        /// <remarks/>
        public void FnSubmitRiskManagementPlanAsync(string vendornumber, string documentno, string projectid, string primarymission, string staffno, object userState) {
            if ((this.FnSubmitRiskManagementPlanOperationCompleted == null)) {
                this.FnSubmitRiskManagementPlanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitRiskManagementPlanOperationCompleted);
            }
            this.InvokeAsync("FnSubmitRiskManagementPlan", new object[] {
                        vendornumber,
                        documentno,
                        projectid,
                        primarymission,
                        staffno}, this.FnSubmitRiskManagementPlanOperationCompleted, userState);
        }
        
        private void OnFnSubmitRiskManagementPlanOperationCompleted(object arg) {
            if ((this.FnSubmitRiskManagementPlanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitRiskManagementPlanCompleted(this, new FnSubmitRiskManagementPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitRiskManagementPlanLi" +
            "nes", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitRiskManagementPlanLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitRiskManagementPlanLines(string vendornumber, string documentno, string projectid, string riskcategory, int riskimpacttype, decimal estimatefinancialimpact, string risklikelihoodcode, string riskresponsestrategy, string riskimpactcode, int estimatedelayimpactdays) {
            object[] results = this.Invoke("FnSubmitRiskManagementPlanLines", new object[] {
                        vendornumber,
                        documentno,
                        projectid,
                        riskcategory,
                        riskimpacttype,
                        estimatefinancialimpact,
                        risklikelihoodcode,
                        riskresponsestrategy,
                        riskimpactcode,
                        estimatedelayimpactdays});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitRiskManagementPlanLinesAsync(string vendornumber, string documentno, string projectid, string riskcategory, int riskimpacttype, decimal estimatefinancialimpact, string risklikelihoodcode, string riskresponsestrategy, string riskimpactcode, int estimatedelayimpactdays) {
            this.FnSubmitRiskManagementPlanLinesAsync(vendornumber, documentno, projectid, riskcategory, riskimpacttype, estimatefinancialimpact, risklikelihoodcode, riskresponsestrategy, riskimpactcode, estimatedelayimpactdays, null);
        }
        
        /// <remarks/>
        public void FnSubmitRiskManagementPlanLinesAsync(string vendornumber, string documentno, string projectid, string riskcategory, int riskimpacttype, decimal estimatefinancialimpact, string risklikelihoodcode, string riskresponsestrategy, string riskimpactcode, int estimatedelayimpactdays, object userState) {
            if ((this.FnSubmitRiskManagementPlanLinesOperationCompleted == null)) {
                this.FnSubmitRiskManagementPlanLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitRiskManagementPlanLinesOperationCompleted);
            }
            this.InvokeAsync("FnSubmitRiskManagementPlanLines", new object[] {
                        vendornumber,
                        documentno,
                        projectid,
                        riskcategory,
                        riskimpacttype,
                        estimatefinancialimpact,
                        risklikelihoodcode,
                        riskresponsestrategy,
                        riskimpactcode,
                        estimatedelayimpactdays}, this.FnSubmitRiskManagementPlanLinesOperationCompleted, userState);
        }
        
        private void OnFnSubmitRiskManagementPlanLinesOperationCompleted(object arg) {
            if ((this.FnSubmitRiskManagementPlanLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitRiskManagementPlanLinesCompleted(this, new FnSubmitRiskManagementPlanLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitContractorSupervisio" +
            "nRequirement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitContractorSupervisionRequirement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitContractorSupervisionRequirement(string vendornumber, string documentno, string projectid) {
            object[] results = this.Invoke("FnSubmitContractorSupervisionRequirement", new object[] {
                        vendornumber,
                        documentno,
                        projectid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitContractorSupervisionRequirementAsync(string vendornumber, string documentno, string projectid) {
            this.FnSubmitContractorSupervisionRequirementAsync(vendornumber, documentno, projectid, null);
        }
        
        /// <remarks/>
        public void FnSubmitContractorSupervisionRequirementAsync(string vendornumber, string documentno, string projectid, object userState) {
            if ((this.FnSubmitContractorSupervisionRequirementOperationCompleted == null)) {
                this.FnSubmitContractorSupervisionRequirementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitContractorSupervisionRequirementOperationCompleted);
            }
            this.InvokeAsync("FnSubmitContractorSupervisionRequirement", new object[] {
                        vendornumber,
                        documentno,
                        projectid}, this.FnSubmitContractorSupervisionRequirementOperationCompleted, userState);
        }
        
        private void OnFnSubmitContractorSupervisionRequirementOperationCompleted(object arg) {
            if ((this.FnSubmitContractorSupervisionRequirementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitContractorSupervisionRequirementCompleted(this, new FnSubmitContractorSupervisionRequirementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitTemporarySupervision" +
            "Lines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitTemporarySupervisionLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitTemporarySupervisionLines(string vendornumber, string documentno, string projectid, int documenttype, int provisiontype, string jobtaskno, int lineno, string comments, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime scheduleddeliverydate, string identificationno, int reversiontype) {
            object[] results = this.Invoke("FnSubmitTemporarySupervisionLines", new object[] {
                        vendornumber,
                        documentno,
                        projectid,
                        documenttype,
                        provisiontype,
                        jobtaskno,
                        lineno,
                        comments,
                        scheduleddeliverydate,
                        identificationno,
                        reversiontype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitTemporarySupervisionLinesAsync(string vendornumber, string documentno, string projectid, int documenttype, int provisiontype, string jobtaskno, int lineno, string comments, System.DateTime scheduleddeliverydate, string identificationno, int reversiontype) {
            this.FnSubmitTemporarySupervisionLinesAsync(vendornumber, documentno, projectid, documenttype, provisiontype, jobtaskno, lineno, comments, scheduleddeliverydate, identificationno, reversiontype, null);
        }
        
        /// <remarks/>
        public void FnSubmitTemporarySupervisionLinesAsync(string vendornumber, string documentno, string projectid, int documenttype, int provisiontype, string jobtaskno, int lineno, string comments, System.DateTime scheduleddeliverydate, string identificationno, int reversiontype, object userState) {
            if ((this.FnSubmitTemporarySupervisionLinesOperationCompleted == null)) {
                this.FnSubmitTemporarySupervisionLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitTemporarySupervisionLinesOperationCompleted);
            }
            this.InvokeAsync("FnSubmitTemporarySupervisionLines", new object[] {
                        vendornumber,
                        documentno,
                        projectid,
                        documenttype,
                        provisiontype,
                        jobtaskno,
                        lineno,
                        comments,
                        scheduleddeliverydate,
                        identificationno,
                        reversiontype}, this.FnSubmitTemporarySupervisionLinesOperationCompleted, userState);
        }
        
        private void OnFnSubmitTemporarySupervisionLinesOperationCompleted(object arg) {
            if ((this.FnSubmitTemporarySupervisionLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitTemporarySupervisionLinesCompleted(this, new FnSubmitTemporarySupervisionLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitSiteAgentNomination", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitSiteAgentNomination_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitSiteAgentNomination(string vendornumber, string projectid, string staffno, string staffname, string email, string telephoneno, string address, string adress2, string city) {
            object[] results = this.Invoke("FnSubmitSiteAgentNomination", new object[] {
                        vendornumber,
                        projectid,
                        staffno,
                        staffname,
                        email,
                        telephoneno,
                        address,
                        adress2,
                        city});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitSiteAgentNominationAsync(string vendornumber, string projectid, string staffno, string staffname, string email, string telephoneno, string address, string adress2, string city) {
            this.FnSubmitSiteAgentNominationAsync(vendornumber, projectid, staffno, staffname, email, telephoneno, address, adress2, city, null);
        }
        
        /// <remarks/>
        public void FnSubmitSiteAgentNominationAsync(string vendornumber, string projectid, string staffno, string staffname, string email, string telephoneno, string address, string adress2, string city, object userState) {
            if ((this.FnSubmitSiteAgentNominationOperationCompleted == null)) {
                this.FnSubmitSiteAgentNominationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitSiteAgentNominationOperationCompleted);
            }
            this.InvokeAsync("FnSubmitSiteAgentNomination", new object[] {
                        vendornumber,
                        projectid,
                        staffno,
                        staffname,
                        email,
                        telephoneno,
                        address,
                        adress2,
                        city}, this.FnSubmitSiteAgentNominationOperationCompleted, userState);
        }
        
        private void OnFnSubmitSiteAgentNominationOperationCompleted(object arg) {
            if ((this.FnSubmitSiteAgentNominationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitSiteAgentNominationCompleted(this, new FnSubmitSiteAgentNominationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitContractorPersonnelA" +
            "ppointment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitContractorPersonnelAppointment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitContractorPersonnelAppointment(string vendornumber, string projectid) {
            object[] results = this.Invoke("FnSubmitContractorPersonnelAppointment", new object[] {
                        vendornumber,
                        projectid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitContractorPersonnelAppointmentAsync(string vendornumber, string projectid) {
            this.FnSubmitContractorPersonnelAppointmentAsync(vendornumber, projectid, null);
        }
        
        /// <remarks/>
        public void FnSubmitContractorPersonnelAppointmentAsync(string vendornumber, string projectid, object userState) {
            if ((this.FnSubmitContractorPersonnelAppointmentOperationCompleted == null)) {
                this.FnSubmitContractorPersonnelAppointmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitContractorPersonnelAppointmentOperationCompleted);
            }
            this.InvokeAsync("FnSubmitContractorPersonnelAppointment", new object[] {
                        vendornumber,
                        projectid}, this.FnSubmitContractorPersonnelAppointmentOperationCompleted, userState);
        }
        
        private void OnFnSubmitContractorPersonnelAppointmentOperationCompleted(object arg) {
            if ((this.FnSubmitContractorPersonnelAppointmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitContractorPersonnelAppointmentCompleted(this, new FnSubmitContractorPersonnelAppointmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitContractorStaffDisen" +
            "gagement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitContractorStaffDisengagement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitContractorStaffDisengagement(string vendornumber, string projectid, string appointmentvoucherno) {
            object[] results = this.Invoke("FnSubmitContractorStaffDisengagement", new object[] {
                        vendornumber,
                        projectid,
                        appointmentvoucherno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitContractorStaffDisengagementAsync(string vendornumber, string projectid, string appointmentvoucherno) {
            this.FnSubmitContractorStaffDisengagementAsync(vendornumber, projectid, appointmentvoucherno, null);
        }
        
        /// <remarks/>
        public void FnSubmitContractorStaffDisengagementAsync(string vendornumber, string projectid, string appointmentvoucherno, object userState) {
            if ((this.FnSubmitContractorStaffDisengagementOperationCompleted == null)) {
                this.FnSubmitContractorStaffDisengagementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitContractorStaffDisengagementOperationCompleted);
            }
            this.InvokeAsync("FnSubmitContractorStaffDisengagement", new object[] {
                        vendornumber,
                        projectid,
                        appointmentvoucherno}, this.FnSubmitContractorStaffDisengagementOperationCompleted, userState);
        }
        
        private void OnFnSubmitContractorStaffDisengagementOperationCompleted(object arg) {
            if ((this.FnSubmitContractorStaffDisengagementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitContractorStaffDisengagementCompleted(this, new FnSubmitContractorStaffDisengagementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitContractorEquipmentR" +
            "egister", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitContractorEquipmentRegister_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitContractorEquipmentRegister(string vendornumber, string projectid) {
            object[] results = this.Invoke("FnSubmitContractorEquipmentRegister", new object[] {
                        vendornumber,
                        projectid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitContractorEquipmentRegisterAsync(string vendornumber, string projectid) {
            this.FnSubmitContractorEquipmentRegisterAsync(vendornumber, projectid, null);
        }
        
        /// <remarks/>
        public void FnSubmitContractorEquipmentRegisterAsync(string vendornumber, string projectid, object userState) {
            if ((this.FnSubmitContractorEquipmentRegisterOperationCompleted == null)) {
                this.FnSubmitContractorEquipmentRegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitContractorEquipmentRegisterOperationCompleted);
            }
            this.InvokeAsync("FnSubmitContractorEquipmentRegister", new object[] {
                        vendornumber,
                        projectid}, this.FnSubmitContractorEquipmentRegisterOperationCompleted, userState);
        }
        
        private void OnFnSubmitContractorEquipmentRegisterOperationCompleted(object arg) {
            if ((this.FnSubmitContractorEquipmentRegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitContractorEquipmentRegisterCompleted(this, new FnSubmitContractorEquipmentRegisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitREsOffice", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitREsOffice_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitREsOffice(string vendornumber, string documentno, string projectid) {
            object[] results = this.Invoke("FnSubmitREsOffice", new object[] {
                        vendornumber,
                        documentno,
                        projectid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitREsOfficeAsync(string vendornumber, string documentno, string projectid) {
            this.FnSubmitREsOfficeAsync(vendornumber, documentno, projectid, null);
        }
        
        /// <remarks/>
        public void FnSubmitREsOfficeAsync(string vendornumber, string documentno, string projectid, object userState) {
            if ((this.FnSubmitREsOfficeOperationCompleted == null)) {
                this.FnSubmitREsOfficeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitREsOfficeOperationCompleted);
            }
            this.InvokeAsync("FnSubmitREsOffice", new object[] {
                        vendornumber,
                        documentno,
                        projectid}, this.FnSubmitREsOfficeOperationCompleted, userState);
        }
        
        private void OnFnSubmitREsOfficeOperationCompleted(object arg) {
            if ((this.FnSubmitREsOfficeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitREsOfficeCompleted(this, new FnSubmitREsOfficeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnCreateNewExtensionofTimeRe" +
            "quest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnCreateNewExtensionofTimeRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCreateNewExtensionofTimeRequest(string vendornumber, string projectid, string reasoncode, string extensionperiod, decimal costclaimamount) {
            object[] results = this.Invoke("FnCreateNewExtensionofTimeRequest", new object[] {
                        vendornumber,
                        projectid,
                        reasoncode,
                        extensionperiod,
                        costclaimamount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreateNewExtensionofTimeRequestAsync(string vendornumber, string projectid, string reasoncode, string extensionperiod, decimal costclaimamount) {
            this.FnCreateNewExtensionofTimeRequestAsync(vendornumber, projectid, reasoncode, extensionperiod, costclaimamount, null);
        }
        
        /// <remarks/>
        public void FnCreateNewExtensionofTimeRequestAsync(string vendornumber, string projectid, string reasoncode, string extensionperiod, decimal costclaimamount, object userState) {
            if ((this.FnCreateNewExtensionofTimeRequestOperationCompleted == null)) {
                this.FnCreateNewExtensionofTimeRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreateNewExtensionofTimeRequestOperationCompleted);
            }
            this.InvokeAsync("FnCreateNewExtensionofTimeRequest", new object[] {
                        vendornumber,
                        projectid,
                        reasoncode,
                        extensionperiod,
                        costclaimamount}, this.FnCreateNewExtensionofTimeRequestOperationCompleted, userState);
        }
        
        private void OnFnCreateNewExtensionofTimeRequestOperationCompleted(object arg) {
            if ((this.FnCreateNewExtensionofTimeRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreateNewExtensionofTimeRequestCompleted(this, new FnCreateNewExtensionofTimeRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FngetEOTRequestProjectNumber" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FngetEOTRequestProjectNumber_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetEOTRequestProjectNumber(string documentno) {
            object[] results = this.Invoke("FngetEOTRequestProjectNumber", new object[] {
                        documentno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetEOTRequestProjectNumberAsync(string documentno) {
            this.FngetEOTRequestProjectNumberAsync(documentno, null);
        }
        
        /// <remarks/>
        public void FngetEOTRequestProjectNumberAsync(string documentno, object userState) {
            if ((this.FngetEOTRequestProjectNumberOperationCompleted == null)) {
                this.FngetEOTRequestProjectNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetEOTRequestProjectNumberOperationCompleted);
            }
            this.InvokeAsync("FngetEOTRequestProjectNumber", new object[] {
                        documentno}, this.FngetEOTRequestProjectNumberOperationCompleted, userState);
        }
        
        private void OnFngetEOTRequestProjectNumberOperationCompleted(object arg) {
            if ((this.FngetEOTRequestProjectNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetEOTRequestProjectNumberCompleted(this, new FngetEOTRequestProjectNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitEOTRevisedActivitySc" +
            "hedule", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitEOTRevisedActivitySchedule_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitEOTRevisedActivitySchedule(string documentNo, string vendornumber, string projectid, string jobtaskno, int lineno, System.DateTime originalplanningdate, string extensionperiod, string remarks) {
            object[] results = this.Invoke("FnSubmitEOTRevisedActivitySchedule", new object[] {
                        documentNo,
                        vendornumber,
                        projectid,
                        jobtaskno,
                        lineno,
                        originalplanningdate,
                        extensionperiod,
                        remarks});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitEOTRevisedActivityScheduleAsync(string documentNo, string vendornumber, string projectid, string jobtaskno, int lineno, System.DateTime originalplanningdate, string extensionperiod, string remarks) {
            this.FnSubmitEOTRevisedActivityScheduleAsync(documentNo, vendornumber, projectid, jobtaskno, lineno, originalplanningdate, extensionperiod, remarks, null);
        }
        
        /// <remarks/>
        public void FnSubmitEOTRevisedActivityScheduleAsync(string documentNo, string vendornumber, string projectid, string jobtaskno, int lineno, System.DateTime originalplanningdate, string extensionperiod, string remarks, object userState) {
            if ((this.FnSubmitEOTRevisedActivityScheduleOperationCompleted == null)) {
                this.FnSubmitEOTRevisedActivityScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitEOTRevisedActivityScheduleOperationCompleted);
            }
            this.InvokeAsync("FnSubmitEOTRevisedActivitySchedule", new object[] {
                        documentNo,
                        vendornumber,
                        projectid,
                        jobtaskno,
                        lineno,
                        originalplanningdate,
                        extensionperiod,
                        remarks}, this.FnSubmitEOTRevisedActivityScheduleOperationCompleted, userState);
        }
        
        private void OnFnSubmitEOTRevisedActivityScheduleOperationCompleted(object arg) {
            if ((this.FnSubmitEOTRevisedActivityScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitEOTRevisedActivityScheduleCompleted(this, new FnSubmitEOTRevisedActivityScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitEOTGrounds", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitEOTGrounds_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitEOTGrounds(string vendornumber, string documentno, int eotrequesteddays, string causeofdelay) {
            object[] results = this.Invoke("FnSubmitEOTGrounds", new object[] {
                        vendornumber,
                        documentno,
                        eotrequesteddays,
                        causeofdelay});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitEOTGroundsAsync(string vendornumber, string documentno, int eotrequesteddays, string causeofdelay) {
            this.FnSubmitEOTGroundsAsync(vendornumber, documentno, eotrequesteddays, causeofdelay, null);
        }
        
        /// <remarks/>
        public void FnSubmitEOTGroundsAsync(string vendornumber, string documentno, int eotrequesteddays, string causeofdelay, object userState) {
            if ((this.FnSubmitEOTGroundsOperationCompleted == null)) {
                this.FnSubmitEOTGroundsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitEOTGroundsOperationCompleted);
            }
            this.InvokeAsync("FnSubmitEOTGrounds", new object[] {
                        vendornumber,
                        documentno,
                        eotrequesteddays,
                        causeofdelay}, this.FnSubmitEOTGroundsOperationCompleted, userState);
        }
        
        private void OnFnSubmitEOTGroundsOperationCompleted(object arg) {
            if ((this.FnSubmitEOTGroundsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitEOTGroundsCompleted(this, new FnSubmitEOTGroundsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitEOTProjectVariationS" +
            "ection", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitEOTProjectVariationSection_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitEOTProjectVariationSection(string vendornumber, string documentno, int section, string description) {
            object[] results = this.Invoke("FnSubmitEOTProjectVariationSection", new object[] {
                        vendornumber,
                        documentno,
                        section,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitEOTProjectVariationSectionAsync(string vendornumber, string documentno, int section, string description) {
            this.FnSubmitEOTProjectVariationSectionAsync(vendornumber, documentno, section, description, null);
        }
        
        /// <remarks/>
        public void FnSubmitEOTProjectVariationSectionAsync(string vendornumber, string documentno, int section, string description, object userState) {
            if ((this.FnSubmitEOTProjectVariationSectionOperationCompleted == null)) {
                this.FnSubmitEOTProjectVariationSectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitEOTProjectVariationSectionOperationCompleted);
            }
            this.InvokeAsync("FnSubmitEOTProjectVariationSection", new object[] {
                        vendornumber,
                        documentno,
                        section,
                        description}, this.FnSubmitEOTProjectVariationSectionOperationCompleted, userState);
        }
        
        private void OnFnSubmitEOTProjectVariationSectionOperationCompleted(object arg) {
            if ((this.FnSubmitEOTProjectVariationSectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitEOTProjectVariationSectionCompleted(this, new FnSubmitEOTProjectVariationSectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitEOTProjectVariationC" +
            "ommittee", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitEOTProjectVariationCommittee_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitEOTProjectVariationCommittee(string vendornumber, string documentno, string resourceno) {
            object[] results = this.Invoke("FnSubmitEOTProjectVariationCommittee", new object[] {
                        vendornumber,
                        documentno,
                        resourceno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitEOTProjectVariationCommitteeAsync(string vendornumber, string documentno, string resourceno) {
            this.FnSubmitEOTProjectVariationCommitteeAsync(vendornumber, documentno, resourceno, null);
        }
        
        /// <remarks/>
        public void FnSubmitEOTProjectVariationCommitteeAsync(string vendornumber, string documentno, string resourceno, object userState) {
            if ((this.FnSubmitEOTProjectVariationCommitteeOperationCompleted == null)) {
                this.FnSubmitEOTProjectVariationCommitteeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitEOTProjectVariationCommitteeOperationCompleted);
            }
            this.InvokeAsync("FnSubmitEOTProjectVariationCommittee", new object[] {
                        vendornumber,
                        documentno,
                        resourceno}, this.FnSubmitEOTProjectVariationCommitteeOperationCompleted, userState);
        }
        
        private void OnFnSubmitEOTProjectVariationCommitteeOperationCompleted(object arg) {
            if ((this.FnSubmitEOTProjectVariationCommitteeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitEOTProjectVariationCommitteeCompleted(this, new FnSubmitEOTProjectVariationCommitteeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitContractorVariationR" +
            "equestLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitContractorVariationRequestLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitContractorVariationRequestLines(string documentNo, string vendornumber, string projectid, string jobtaskno, int lineno, decimal newquantity) {
            object[] results = this.Invoke("FnSubmitContractorVariationRequestLines", new object[] {
                        documentNo,
                        vendornumber,
                        projectid,
                        jobtaskno,
                        lineno,
                        newquantity});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitContractorVariationRequestLinesAsync(string documentNo, string vendornumber, string projectid, string jobtaskno, int lineno, decimal newquantity) {
            this.FnSubmitContractorVariationRequestLinesAsync(documentNo, vendornumber, projectid, jobtaskno, lineno, newquantity, null);
        }
        
        /// <remarks/>
        public void FnSubmitContractorVariationRequestLinesAsync(string documentNo, string vendornumber, string projectid, string jobtaskno, int lineno, decimal newquantity, object userState) {
            if ((this.FnSubmitContractorVariationRequestLinesOperationCompleted == null)) {
                this.FnSubmitContractorVariationRequestLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitContractorVariationRequestLinesOperationCompleted);
            }
            this.InvokeAsync("FnSubmitContractorVariationRequestLines", new object[] {
                        documentNo,
                        vendornumber,
                        projectid,
                        jobtaskno,
                        lineno,
                        newquantity}, this.FnSubmitContractorVariationRequestLinesOperationCompleted, userState);
        }
        
        private void OnFnSubmitContractorVariationRequestLinesOperationCompleted(object arg) {
            if ((this.FnSubmitContractorVariationRequestLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitContractorVariationRequestLinesCompleted(this, new FnSubmitContractorVariationRequestLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnCreateNewContractorVariati" +
            "onRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnCreateNewContractorVariationRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCreateNewContractorVariationRequest(string vendornumber, string projectid, string variationreasoncode, decimal costclaimamount) {
            object[] results = this.Invoke("FnCreateNewContractorVariationRequest", new object[] {
                        vendornumber,
                        projectid,
                        variationreasoncode,
                        costclaimamount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreateNewContractorVariationRequestAsync(string vendornumber, string projectid, string variationreasoncode, decimal costclaimamount) {
            this.FnCreateNewContractorVariationRequestAsync(vendornumber, projectid, variationreasoncode, costclaimamount, null);
        }
        
        /// <remarks/>
        public void FnCreateNewContractorVariationRequestAsync(string vendornumber, string projectid, string variationreasoncode, decimal costclaimamount, object userState) {
            if ((this.FnCreateNewContractorVariationRequestOperationCompleted == null)) {
                this.FnCreateNewContractorVariationRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreateNewContractorVariationRequestOperationCompleted);
            }
            this.InvokeAsync("FnCreateNewContractorVariationRequest", new object[] {
                        vendornumber,
                        projectid,
                        variationreasoncode,
                        costclaimamount}, this.FnCreateNewContractorVariationRequestOperationCompleted, userState);
        }
        
        private void OnFnCreateNewContractorVariationRequestOperationCompleted(object arg) {
            if ((this.FnCreateNewContractorVariationRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreateNewContractorVariationRequestCompleted(this, new FnCreateNewContractorVariationRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitCVRProjectVariationS" +
            "ection", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitCVRProjectVariationSection_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitCVRProjectVariationSection(string vendornumber, string documentno, int section, string description) {
            object[] results = this.Invoke("FnSubmitCVRProjectVariationSection", new object[] {
                        vendornumber,
                        documentno,
                        section,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitCVRProjectVariationSectionAsync(string vendornumber, string documentno, int section, string description) {
            this.FnSubmitCVRProjectVariationSectionAsync(vendornumber, documentno, section, description, null);
        }
        
        /// <remarks/>
        public void FnSubmitCVRProjectVariationSectionAsync(string vendornumber, string documentno, int section, string description, object userState) {
            if ((this.FnSubmitCVRProjectVariationSectionOperationCompleted == null)) {
                this.FnSubmitCVRProjectVariationSectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitCVRProjectVariationSectionOperationCompleted);
            }
            this.InvokeAsync("FnSubmitCVRProjectVariationSection", new object[] {
                        vendornumber,
                        documentno,
                        section,
                        description}, this.FnSubmitCVRProjectVariationSectionOperationCompleted, userState);
        }
        
        private void OnFnSubmitCVRProjectVariationSectionOperationCompleted(object arg) {
            if ((this.FnSubmitCVRProjectVariationSectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitCVRProjectVariationSectionCompleted(this, new FnSubmitCVRProjectVariationSectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnCreateNewCostClaim", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnCreateNewCostClaim_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCreateNewCostClaim(string vendornumber, string projectid, string costclaimreason) {
            object[] results = this.Invoke("FnCreateNewCostClaim", new object[] {
                        vendornumber,
                        projectid,
                        costclaimreason});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreateNewCostClaimAsync(string vendornumber, string projectid, string costclaimreason) {
            this.FnCreateNewCostClaimAsync(vendornumber, projectid, costclaimreason, null);
        }
        
        /// <remarks/>
        public void FnCreateNewCostClaimAsync(string vendornumber, string projectid, string costclaimreason, object userState) {
            if ((this.FnCreateNewCostClaimOperationCompleted == null)) {
                this.FnCreateNewCostClaimOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreateNewCostClaimOperationCompleted);
            }
            this.InvokeAsync("FnCreateNewCostClaim", new object[] {
                        vendornumber,
                        projectid,
                        costclaimreason}, this.FnCreateNewCostClaimOperationCompleted, userState);
        }
        
        private void OnFnCreateNewCostClaimOperationCompleted(object arg) {
            if ((this.FnCreateNewCostClaimCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreateNewCostClaimCompleted(this, new FnCreateNewCostClaimCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitCostClaimLineDetails" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitCostClaimLineDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitCostClaimLineDetails(string documentNumber, string causeofoverun, decimal costclaimrequested, int entryno) {
            object[] results = this.Invoke("FnSubmitCostClaimLineDetails", new object[] {
                        documentNumber,
                        causeofoverun,
                        costclaimrequested,
                        entryno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitCostClaimLineDetailsAsync(string documentNumber, string causeofoverun, decimal costclaimrequested, int entryno) {
            this.FnSubmitCostClaimLineDetailsAsync(documentNumber, causeofoverun, costclaimrequested, entryno, null);
        }
        
        /// <remarks/>
        public void FnSubmitCostClaimLineDetailsAsync(string documentNumber, string causeofoverun, decimal costclaimrequested, int entryno, object userState) {
            if ((this.FnSubmitCostClaimLineDetailsOperationCompleted == null)) {
                this.FnSubmitCostClaimLineDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitCostClaimLineDetailsOperationCompleted);
            }
            this.InvokeAsync("FnSubmitCostClaimLineDetails", new object[] {
                        documentNumber,
                        causeofoverun,
                        costclaimrequested,
                        entryno}, this.FnSubmitCostClaimLineDetailsOperationCompleted, userState);
        }
        
        private void OnFnSubmitCostClaimLineDetailsOperationCompleted(object arg) {
            if ((this.FnSubmitCostClaimLineDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitCostClaimLineDetailsCompleted(this, new FnSubmitCostClaimLineDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitContractorRequestfor" +
            "Closeout", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitContractorRequestforCloseout_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitContractorRequestforCloseout(string vendornumber, string documentno, string projectid, string closeoutjustification) {
            object[] results = this.Invoke("FnSubmitContractorRequestforCloseout", new object[] {
                        vendornumber,
                        documentno,
                        projectid,
                        closeoutjustification});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitContractorRequestforCloseoutAsync(string vendornumber, string documentno, string projectid, string closeoutjustification) {
            this.FnSubmitContractorRequestforCloseoutAsync(vendornumber, documentno, projectid, closeoutjustification, null);
        }
        
        /// <remarks/>
        public void FnSubmitContractorRequestforCloseoutAsync(string vendornumber, string documentno, string projectid, string closeoutjustification, object userState) {
            if ((this.FnSubmitContractorRequestforCloseoutOperationCompleted == null)) {
                this.FnSubmitContractorRequestforCloseoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitContractorRequestforCloseoutOperationCompleted);
            }
            this.InvokeAsync("FnSubmitContractorRequestforCloseout", new object[] {
                        vendornumber,
                        documentno,
                        projectid,
                        closeoutjustification}, this.FnSubmitContractorRequestforCloseoutOperationCompleted, userState);
        }
        
        private void OnFnSubmitContractorRequestforCloseoutOperationCompleted(object arg) {
            if ((this.FnSubmitContractorRequestforCloseoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitContractorRequestforCloseoutCompleted(this, new FnSubmitContractorRequestforCloseoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitContractorRequestfor" +
            "DLPInspection", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitContractorRequestforDLPInspection_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitContractorRequestforDLPInspection(string vendornumber, string documentno, string projectid) {
            object[] results = this.Invoke("FnSubmitContractorRequestforDLPInspection", new object[] {
                        vendornumber,
                        documentno,
                        projectid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitContractorRequestforDLPInspectionAsync(string vendornumber, string documentno, string projectid) {
            this.FnSubmitContractorRequestforDLPInspectionAsync(vendornumber, documentno, projectid, null);
        }
        
        /// <remarks/>
        public void FnSubmitContractorRequestforDLPInspectionAsync(string vendornumber, string documentno, string projectid, object userState) {
            if ((this.FnSubmitContractorRequestforDLPInspectionOperationCompleted == null)) {
                this.FnSubmitContractorRequestforDLPInspectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitContractorRequestforDLPInspectionOperationCompleted);
            }
            this.InvokeAsync("FnSubmitContractorRequestforDLPInspection", new object[] {
                        vendornumber,
                        documentno,
                        projectid}, this.FnSubmitContractorRequestforDLPInspectionOperationCompleted, userState);
        }
        
        private void OnFnSubmitContractorRequestforDLPInspectionOperationCompleted(object arg) {
            if ((this.FnSubmitContractorRequestforDLPInspectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitContractorRequestforDLPInspectionCompleted(this, new FnSubmitContractorRequestforDLPInspectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:UploadContractorSignature", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="UploadContractorSignature_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UploadContractorSignature(string applicationNo, string path, string description, string fileName, string vendorno) {
            this.Invoke("UploadContractorSignature", new object[] {
                        applicationNo,
                        path,
                        description,
                        fileName,
                        vendorno});
        }
        
        /// <remarks/>
        public void UploadContractorSignatureAsync(string applicationNo, string path, string description, string fileName, string vendorno) {
            this.UploadContractorSignatureAsync(applicationNo, path, description, fileName, vendorno, null);
        }
        
        /// <remarks/>
        public void UploadContractorSignatureAsync(string applicationNo, string path, string description, string fileName, string vendorno, object userState) {
            if ((this.UploadContractorSignatureOperationCompleted == null)) {
                this.UploadContractorSignatureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadContractorSignatureOperationCompleted);
            }
            this.InvokeAsync("UploadContractorSignature", new object[] {
                        applicationNo,
                        path,
                        description,
                        fileName,
                        vendorno}, this.UploadContractorSignatureOperationCompleted, userState);
        }
        
        private void OnUploadContractorSignatureOperationCompleted(object arg) {
            if ((this.UploadContractorSignatureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadContractorSignatureCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGetContractMilestones", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGetContractMilestones_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnGetContractMilestones(ref string varAll, string vendorNo, string contractNo) {
            object[] results = this.Invoke("FnGetContractMilestones", new object[] {
                        varAll,
                        vendorNo,
                        contractNo});
            varAll = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetContractMilestonesAsync(string varAll, string vendorNo, string contractNo) {
            this.FnGetContractMilestonesAsync(varAll, vendorNo, contractNo, null);
        }
        
        /// <remarks/>
        public void FnGetContractMilestonesAsync(string varAll, string vendorNo, string contractNo, object userState) {
            if ((this.FnGetContractMilestonesOperationCompleted == null)) {
                this.FnGetContractMilestonesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetContractMilestonesOperationCompleted);
            }
            this.InvokeAsync("FnGetContractMilestones", new object[] {
                        varAll,
                        vendorNo,
                        contractNo}, this.FnGetContractMilestonesOperationCompleted, userState);
        }
        
        private void OnFnGetContractMilestonesOperationCompleted(object arg) {
            if ((this.FnGetContractMilestonesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetContractMilestonesCompleted(this, new FnGetContractMilestonesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGetContractBidSecurity", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGetContractBidSecurity_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnGetContractBidSecurity(ref string varAll, string vendorNo, string contractNo) {
            object[] results = this.Invoke("FnGetContractBidSecurity", new object[] {
                        varAll,
                        vendorNo,
                        contractNo});
            varAll = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetContractBidSecurityAsync(string varAll, string vendorNo, string contractNo) {
            this.FnGetContractBidSecurityAsync(varAll, vendorNo, contractNo, null);
        }
        
        /// <remarks/>
        public void FnGetContractBidSecurityAsync(string varAll, string vendorNo, string contractNo, object userState) {
            if ((this.FnGetContractBidSecurityOperationCompleted == null)) {
                this.FnGetContractBidSecurityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetContractBidSecurityOperationCompleted);
            }
            this.InvokeAsync("FnGetContractBidSecurity", new object[] {
                        varAll,
                        vendorNo,
                        contractNo}, this.FnGetContractBidSecurityOperationCompleted, userState);
        }
        
        private void OnFnGetContractBidSecurityOperationCompleted(object arg) {
            if ((this.FnGetContractBidSecurityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetContractBidSecurityCompleted(this, new FnGetContractBidSecurityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGetContractInsurance", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGetContractInsurance_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnGetContractInsurance(ref string varAll, string vendorNo, string contractNo) {
            object[] results = this.Invoke("FnGetContractInsurance", new object[] {
                        varAll,
                        vendorNo,
                        contractNo});
            varAll = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetContractInsuranceAsync(string varAll, string vendorNo, string contractNo) {
            this.FnGetContractInsuranceAsync(varAll, vendorNo, contractNo, null);
        }
        
        /// <remarks/>
        public void FnGetContractInsuranceAsync(string varAll, string vendorNo, string contractNo, object userState) {
            if ((this.FnGetContractInsuranceOperationCompleted == null)) {
                this.FnGetContractInsuranceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetContractInsuranceOperationCompleted);
            }
            this.InvokeAsync("FnGetContractInsurance", new object[] {
                        varAll,
                        vendorNo,
                        contractNo}, this.FnGetContractInsuranceOperationCompleted, userState);
        }
        
        private void OnFnGetContractInsuranceOperationCompleted(object arg) {
            if ((this.FnGetContractInsuranceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetContractInsuranceCompleted(this, new FnGetContractInsuranceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGetContractSignatories", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGetContractSignatories_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnGetContractSignatories(ref string varAll, string vendorNo, string contractNo) {
            object[] results = this.Invoke("FnGetContractSignatories", new object[] {
                        varAll,
                        vendorNo,
                        contractNo});
            varAll = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetContractSignatoriesAsync(string varAll, string vendorNo, string contractNo) {
            this.FnGetContractSignatoriesAsync(varAll, vendorNo, contractNo, null);
        }
        
        /// <remarks/>
        public void FnGetContractSignatoriesAsync(string varAll, string vendorNo, string contractNo, object userState) {
            if ((this.FnGetContractSignatoriesOperationCompleted == null)) {
                this.FnGetContractSignatoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetContractSignatoriesOperationCompleted);
            }
            this.InvokeAsync("FnGetContractSignatories", new object[] {
                        varAll,
                        vendorNo,
                        contractNo}, this.FnGetContractSignatoriesOperationCompleted, userState);
        }
        
        private void OnFnGetContractSignatoriesOperationCompleted(object arg) {
            if ((this.FnGetContractSignatoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetContractSignatoriesCompleted(this, new FnGetContractSignatoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGetContractRepresentative", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGetContractRepresentative_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnGetContractRepresentative(ref string varAll, string vendorNo, string contractNo) {
            object[] results = this.Invoke("FnGetContractRepresentative", new object[] {
                        varAll,
                        vendorNo,
                        contractNo});
            varAll = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetContractRepresentativeAsync(string varAll, string vendorNo, string contractNo) {
            this.FnGetContractRepresentativeAsync(varAll, vendorNo, contractNo, null);
        }
        
        /// <remarks/>
        public void FnGetContractRepresentativeAsync(string varAll, string vendorNo, string contractNo, object userState) {
            if ((this.FnGetContractRepresentativeOperationCompleted == null)) {
                this.FnGetContractRepresentativeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetContractRepresentativeOperationCompleted);
            }
            this.InvokeAsync("FnGetContractRepresentative", new object[] {
                        varAll,
                        vendorNo,
                        contractNo}, this.FnGetContractRepresentativeOperationCompleted, userState);
        }
        
        private void OnFnGetContractRepresentativeOperationCompleted(object arg) {
            if ((this.FnGetContractRepresentativeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetContractRepresentativeCompleted(this, new FnGetContractRepresentativeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGetContractPayments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGetContractPayments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnGetContractPayments(ref string varAll, string vendorNo, string contractNo) {
            object[] results = this.Invoke("FnGetContractPayments", new object[] {
                        varAll,
                        vendorNo,
                        contractNo});
            varAll = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetContractPaymentsAsync(string varAll, string vendorNo, string contractNo) {
            this.FnGetContractPaymentsAsync(varAll, vendorNo, contractNo, null);
        }
        
        /// <remarks/>
        public void FnGetContractPaymentsAsync(string varAll, string vendorNo, string contractNo, object userState) {
            if ((this.FnGetContractPaymentsOperationCompleted == null)) {
                this.FnGetContractPaymentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetContractPaymentsOperationCompleted);
            }
            this.InvokeAsync("FnGetContractPayments", new object[] {
                        varAll,
                        vendorNo,
                        contractNo}, this.FnGetContractPaymentsOperationCompleted, userState);
        }
        
        private void OnFnGetContractPaymentsOperationCompleted(object arg) {
            if ((this.FnGetContractPaymentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetContractPaymentsCompleted(this, new FnGetContractPaymentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:UploadDocumentWorkExecutionP" +
            "lan", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="UploadDocumentWorkExecutionPlan_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UploadDocumentWorkExecutionPlan(string applicationNo, string path, string description, string fileName) {
            object[] results = this.Invoke("UploadDocumentWorkExecutionPlan", new object[] {
                        applicationNo,
                        path,
                        description,
                        fileName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadDocumentWorkExecutionPlanAsync(string applicationNo, string path, string description, string fileName) {
            this.UploadDocumentWorkExecutionPlanAsync(applicationNo, path, description, fileName, null);
        }
        
        /// <remarks/>
        public void UploadDocumentWorkExecutionPlanAsync(string applicationNo, string path, string description, string fileName, object userState) {
            if ((this.UploadDocumentWorkExecutionPlanOperationCompleted == null)) {
                this.UploadDocumentWorkExecutionPlanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadDocumentWorkExecutionPlanOperationCompleted);
            }
            this.InvokeAsync("UploadDocumentWorkExecutionPlan", new object[] {
                        applicationNo,
                        path,
                        description,
                        fileName}, this.UploadDocumentWorkExecutionPlanOperationCompleted, userState);
        }
        
        private void OnUploadDocumentWorkExecutionPlanOperationCompleted(object arg) {
            if ((this.UploadDocumentWorkExecutionPlanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadDocumentWorkExecutionPlanCompleted(this, new UploadDocumentWorkExecutionPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGetInsuranceofWorks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGetInsuranceofWorks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnGetInsuranceofWorks(ref string varAll, string vendorNo, string projectno, int documenttype) {
            object[] results = this.Invoke("FnGetInsuranceofWorks", new object[] {
                        varAll,
                        vendorNo,
                        projectno,
                        documenttype});
            varAll = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetInsuranceofWorksAsync(string varAll, string vendorNo, string projectno, int documenttype) {
            this.FnGetInsuranceofWorksAsync(varAll, vendorNo, projectno, documenttype, null);
        }
        
        /// <remarks/>
        public void FnGetInsuranceofWorksAsync(string varAll, string vendorNo, string projectno, int documenttype, object userState) {
            if ((this.FnGetInsuranceofWorksOperationCompleted == null)) {
                this.FnGetInsuranceofWorksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetInsuranceofWorksOperationCompleted);
            }
            this.InvokeAsync("FnGetInsuranceofWorks", new object[] {
                        varAll,
                        vendorNo,
                        projectno,
                        documenttype}, this.FnGetInsuranceofWorksOperationCompleted, userState);
        }
        
        private void OnFnGetInsuranceofWorksOperationCompleted(object arg) {
            if ((this.FnGetInsuranceofWorksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetInsuranceofWorksCompleted(this, new FnGetInsuranceofWorksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGetInsuranceofWorksDetails" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGetInsuranceofWorksDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnGetInsuranceofWorksDetails(ref string varAll, string vendorNo, string projectno, int documenttype) {
            object[] results = this.Invoke("FnGetInsuranceofWorksDetails", new object[] {
                        varAll,
                        vendorNo,
                        projectno,
                        documenttype});
            varAll = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetInsuranceofWorksDetailsAsync(string varAll, string vendorNo, string projectno, int documenttype) {
            this.FnGetInsuranceofWorksDetailsAsync(varAll, vendorNo, projectno, documenttype, null);
        }
        
        /// <remarks/>
        public void FnGetInsuranceofWorksDetailsAsync(string varAll, string vendorNo, string projectno, int documenttype, object userState) {
            if ((this.FnGetInsuranceofWorksDetailsOperationCompleted == null)) {
                this.FnGetInsuranceofWorksDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetInsuranceofWorksDetailsOperationCompleted);
            }
            this.InvokeAsync("FnGetInsuranceofWorksDetails", new object[] {
                        varAll,
                        vendorNo,
                        projectno,
                        documenttype}, this.FnGetInsuranceofWorksDetailsOperationCompleted, userState);
        }
        
        private void OnFnGetInsuranceofWorksDetailsOperationCompleted(object arg) {
            if ((this.FnGetInsuranceofWorksDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetInsuranceofWorksDetailsCompleted(this, new FnGetInsuranceofWorksDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGetInsuranceTypes", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGetInsuranceTypes_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnGetInsuranceTypes(ref string varAll) {
            object[] results = this.Invoke("FnGetInsuranceTypes", new object[] {
                        varAll});
            varAll = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetInsuranceTypesAsync(string varAll) {
            this.FnGetInsuranceTypesAsync(varAll, null);
        }
        
        /// <remarks/>
        public void FnGetInsuranceTypesAsync(string varAll, object userState) {
            if ((this.FnGetInsuranceTypesOperationCompleted == null)) {
                this.FnGetInsuranceTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetInsuranceTypesOperationCompleted);
            }
            this.InvokeAsync("FnGetInsuranceTypes", new object[] {
                        varAll}, this.FnGetInsuranceTypesOperationCompleted, userState);
        }
        
        private void OnFnGetInsuranceTypesOperationCompleted(object arg) {
            if ((this.FnGetInsuranceTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetInsuranceTypesCompleted(this, new FnGetInsuranceTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGetTenderSecurityTypes", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGetTenderSecurityTypes_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnGetTenderSecurityTypes(ref string varAll, int securitytype) {
            object[] results = this.Invoke("FnGetTenderSecurityTypes", new object[] {
                        varAll,
                        securitytype});
            varAll = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetTenderSecurityTypesAsync(string varAll, int securitytype) {
            this.FnGetTenderSecurityTypesAsync(varAll, securitytype, null);
        }
        
        /// <remarks/>
        public void FnGetTenderSecurityTypesAsync(string varAll, int securitytype, object userState) {
            if ((this.FnGetTenderSecurityTypesOperationCompleted == null)) {
                this.FnGetTenderSecurityTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetTenderSecurityTypesOperationCompleted);
            }
            this.InvokeAsync("FnGetTenderSecurityTypes", new object[] {
                        varAll,
                        securitytype}, this.FnGetTenderSecurityTypesOperationCompleted, userState);
        }
        
        private void OnFnGetTenderSecurityTypesOperationCompleted(object arg) {
            if ((this.FnGetTenderSecurityTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetTenderSecurityTypesCompleted(this, new FnGetTenderSecurityTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitProfessionalIndmnity" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitProfessionalIndmnity_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitProfessionalIndmnity(string documentNumber, string projectno, string vendorno, int issuerinstitutiontype, string insurancetype, int policycovertype, string policyno, string insurername, string issuerregisteredoffice, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime effectivedate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime expirydate, decimal amountinsurered) {
            object[] results = this.Invoke("FnSubmitProfessionalIndmnity", new object[] {
                        documentNumber,
                        projectno,
                        vendorno,
                        issuerinstitutiontype,
                        insurancetype,
                        policycovertype,
                        policyno,
                        insurername,
                        issuerregisteredoffice,
                        effectivedate,
                        expirydate,
                        amountinsurered});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitProfessionalIndmnityAsync(string documentNumber, string projectno, string vendorno, int issuerinstitutiontype, string insurancetype, int policycovertype, string policyno, string insurername, string issuerregisteredoffice, System.DateTime effectivedate, System.DateTime expirydate, decimal amountinsurered) {
            this.FnSubmitProfessionalIndmnityAsync(documentNumber, projectno, vendorno, issuerinstitutiontype, insurancetype, policycovertype, policyno, insurername, issuerregisteredoffice, effectivedate, expirydate, amountinsurered, null);
        }
        
        /// <remarks/>
        public void FnSubmitProfessionalIndmnityAsync(string documentNumber, string projectno, string vendorno, int issuerinstitutiontype, string insurancetype, int policycovertype, string policyno, string insurername, string issuerregisteredoffice, System.DateTime effectivedate, System.DateTime expirydate, decimal amountinsurered, object userState) {
            if ((this.FnSubmitProfessionalIndmnityOperationCompleted == null)) {
                this.FnSubmitProfessionalIndmnityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitProfessionalIndmnityOperationCompleted);
            }
            this.InvokeAsync("FnSubmitProfessionalIndmnity", new object[] {
                        documentNumber,
                        projectno,
                        vendorno,
                        issuerinstitutiontype,
                        insurancetype,
                        policycovertype,
                        policyno,
                        insurername,
                        issuerregisteredoffice,
                        effectivedate,
                        expirydate,
                        amountinsurered}, this.FnSubmitProfessionalIndmnityOperationCompleted, userState);
        }
        
        private void OnFnSubmitProfessionalIndmnityOperationCompleted(object arg) {
            if ((this.FnSubmitProfessionalIndmnityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitProfessionalIndmnityCompleted(this, new FnSubmitProfessionalIndmnityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitInsuranceofWorks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitInsuranceofWorks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitInsuranceofWorks(string documentNumber, string projectno, string vendorno, int issuerinstitutiontype, string insurancetype, int policycovertype, string policyno, string insurername, string issuerregisteredoffice, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime effectivedate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime expirydate, decimal amountinsurered, string issueremail) {
            object[] results = this.Invoke("FnSubmitInsuranceofWorks", new object[] {
                        documentNumber,
                        projectno,
                        vendorno,
                        issuerinstitutiontype,
                        insurancetype,
                        policycovertype,
                        policyno,
                        insurername,
                        issuerregisteredoffice,
                        effectivedate,
                        expirydate,
                        amountinsurered,
                        issueremail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitInsuranceofWorksAsync(string documentNumber, string projectno, string vendorno, int issuerinstitutiontype, string insurancetype, int policycovertype, string policyno, string insurername, string issuerregisteredoffice, System.DateTime effectivedate, System.DateTime expirydate, decimal amountinsurered, string issueremail) {
            this.FnSubmitInsuranceofWorksAsync(documentNumber, projectno, vendorno, issuerinstitutiontype, insurancetype, policycovertype, policyno, insurername, issuerregisteredoffice, effectivedate, expirydate, amountinsurered, issueremail, null);
        }
        
        /// <remarks/>
        public void FnSubmitInsuranceofWorksAsync(string documentNumber, string projectno, string vendorno, int issuerinstitutiontype, string insurancetype, int policycovertype, string policyno, string insurername, string issuerregisteredoffice, System.DateTime effectivedate, System.DateTime expirydate, decimal amountinsurered, string issueremail, object userState) {
            if ((this.FnSubmitInsuranceofWorksOperationCompleted == null)) {
                this.FnSubmitInsuranceofWorksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitInsuranceofWorksOperationCompleted);
            }
            this.InvokeAsync("FnSubmitInsuranceofWorks", new object[] {
                        documentNumber,
                        projectno,
                        vendorno,
                        issuerinstitutiontype,
                        insurancetype,
                        policycovertype,
                        policyno,
                        insurername,
                        issuerregisteredoffice,
                        effectivedate,
                        expirydate,
                        amountinsurered,
                        issueremail}, this.FnSubmitInsuranceofWorksOperationCompleted, userState);
        }
        
        private void OnFnSubmitInsuranceofWorksOperationCompleted(object arg) {
            if ((this.FnSubmitInsuranceofWorksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitInsuranceofWorksCompleted(this, new FnSubmitInsuranceofWorksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitAdvancePaymentsGuara" +
            "ntee", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitAdvancePaymentsGuarantee_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitAdvancePaymentsGuarantee(string documentNumber, string projectno, string vendorno, int issuerinstitutiontype, string formofsecurity, string guaranteeno, string guarantorname, string issuerregisteredoffice, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime effectivedate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime expirydate, decimal amountguaranteed, string issueremail) {
            object[] results = this.Invoke("FnSubmitAdvancePaymentsGuarantee", new object[] {
                        documentNumber,
                        projectno,
                        vendorno,
                        issuerinstitutiontype,
                        formofsecurity,
                        guaranteeno,
                        guarantorname,
                        issuerregisteredoffice,
                        effectivedate,
                        expirydate,
                        amountguaranteed,
                        issueremail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitAdvancePaymentsGuaranteeAsync(string documentNumber, string projectno, string vendorno, int issuerinstitutiontype, string formofsecurity, string guaranteeno, string guarantorname, string issuerregisteredoffice, System.DateTime effectivedate, System.DateTime expirydate, decimal amountguaranteed, string issueremail) {
            this.FnSubmitAdvancePaymentsGuaranteeAsync(documentNumber, projectno, vendorno, issuerinstitutiontype, formofsecurity, guaranteeno, guarantorname, issuerregisteredoffice, effectivedate, expirydate, amountguaranteed, issueremail, null);
        }
        
        /// <remarks/>
        public void FnSubmitAdvancePaymentsGuaranteeAsync(string documentNumber, string projectno, string vendorno, int issuerinstitutiontype, string formofsecurity, string guaranteeno, string guarantorname, string issuerregisteredoffice, System.DateTime effectivedate, System.DateTime expirydate, decimal amountguaranteed, string issueremail, object userState) {
            if ((this.FnSubmitAdvancePaymentsGuaranteeOperationCompleted == null)) {
                this.FnSubmitAdvancePaymentsGuaranteeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitAdvancePaymentsGuaranteeOperationCompleted);
            }
            this.InvokeAsync("FnSubmitAdvancePaymentsGuarantee", new object[] {
                        documentNumber,
                        projectno,
                        vendorno,
                        issuerinstitutiontype,
                        formofsecurity,
                        guaranteeno,
                        guarantorname,
                        issuerregisteredoffice,
                        effectivedate,
                        expirydate,
                        amountguaranteed,
                        issueremail}, this.FnSubmitAdvancePaymentsGuaranteeOperationCompleted, userState);
        }
        
        private void OnFnSubmitAdvancePaymentsGuaranteeOperationCompleted(object arg) {
            if ((this.FnSubmitAdvancePaymentsGuaranteeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitAdvancePaymentsGuaranteeCompleted(this, new FnSubmitAdvancePaymentsGuaranteeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitPerformancesGuarante" +
            "e", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitPerformancesGuarantee_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitPerformancesGuarantee(string documentNumber, string projectno, string vendorno, int issuerinstitutiontype, string formofsecurity, string guaranteeno, string guarantorname, string issuerregisteredoffice, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime effectivedate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime expirydate, decimal amountguaranteed, string issueremail) {
            object[] results = this.Invoke("FnSubmitPerformancesGuarantee", new object[] {
                        documentNumber,
                        projectno,
                        vendorno,
                        issuerinstitutiontype,
                        formofsecurity,
                        guaranteeno,
                        guarantorname,
                        issuerregisteredoffice,
                        effectivedate,
                        expirydate,
                        amountguaranteed,
                        issueremail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitPerformancesGuaranteeAsync(string documentNumber, string projectno, string vendorno, int issuerinstitutiontype, string formofsecurity, string guaranteeno, string guarantorname, string issuerregisteredoffice, System.DateTime effectivedate, System.DateTime expirydate, decimal amountguaranteed, string issueremail) {
            this.FnSubmitPerformancesGuaranteeAsync(documentNumber, projectno, vendorno, issuerinstitutiontype, formofsecurity, guaranteeno, guarantorname, issuerregisteredoffice, effectivedate, expirydate, amountguaranteed, issueremail, null);
        }
        
        /// <remarks/>
        public void FnSubmitPerformancesGuaranteeAsync(string documentNumber, string projectno, string vendorno, int issuerinstitutiontype, string formofsecurity, string guaranteeno, string guarantorname, string issuerregisteredoffice, System.DateTime effectivedate, System.DateTime expirydate, decimal amountguaranteed, string issueremail, object userState) {
            if ((this.FnSubmitPerformancesGuaranteeOperationCompleted == null)) {
                this.FnSubmitPerformancesGuaranteeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitPerformancesGuaranteeOperationCompleted);
            }
            this.InvokeAsync("FnSubmitPerformancesGuarantee", new object[] {
                        documentNumber,
                        projectno,
                        vendorno,
                        issuerinstitutiontype,
                        formofsecurity,
                        guaranteeno,
                        guarantorname,
                        issuerregisteredoffice,
                        effectivedate,
                        expirydate,
                        amountguaranteed,
                        issueremail}, this.FnSubmitPerformancesGuaranteeOperationCompleted, userState);
        }
        
        private void OnFnSubmitPerformancesGuaranteeOperationCompleted(object arg) {
            if ((this.FnSubmitPerformancesGuaranteeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitPerformancesGuaranteeCompleted(this, new FnSubmitPerformancesGuaranteeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:UploadDocumentInsuranceGuara" +
            "nteeHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="UploadDocumentInsuranceGuaranteeHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UploadDocumentInsuranceGuaranteeHeader(string applicationNo, string path, string description, string fileName) {
            object[] results = this.Invoke("UploadDocumentInsuranceGuaranteeHeader", new object[] {
                        applicationNo,
                        path,
                        description,
                        fileName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadDocumentInsuranceGuaranteeHeaderAsync(string applicationNo, string path, string description, string fileName) {
            this.UploadDocumentInsuranceGuaranteeHeaderAsync(applicationNo, path, description, fileName, null);
        }
        
        /// <remarks/>
        public void UploadDocumentInsuranceGuaranteeHeaderAsync(string applicationNo, string path, string description, string fileName, object userState) {
            if ((this.UploadDocumentInsuranceGuaranteeHeaderOperationCompleted == null)) {
                this.UploadDocumentInsuranceGuaranteeHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadDocumentInsuranceGuaranteeHeaderOperationCompleted);
            }
            this.InvokeAsync("UploadDocumentInsuranceGuaranteeHeader", new object[] {
                        applicationNo,
                        path,
                        description,
                        fileName}, this.UploadDocumentInsuranceGuaranteeHeaderOperationCompleted, userState);
        }
        
        private void OnUploadDocumentInsuranceGuaranteeHeaderOperationCompleted(object arg) {
            if ((this.UploadDocumentInsuranceGuaranteeHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadDocumentInsuranceGuaranteeHeaderCompleted(this, new UploadDocumentInsuranceGuaranteeHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitSubContractorRequest" +
            "Details", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitSubContractorRequestDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitSubContractorRequestDetails(string documentNumber, string projectcode, string vendorno, string requestjustification) {
            object[] results = this.Invoke("FnSubmitSubContractorRequestDetails", new object[] {
                        documentNumber,
                        projectcode,
                        vendorno,
                        requestjustification});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitSubContractorRequestDetailsAsync(string documentNumber, string projectcode, string vendorno, string requestjustification) {
            this.FnSubmitSubContractorRequestDetailsAsync(documentNumber, projectcode, vendorno, requestjustification, null);
        }
        
        /// <remarks/>
        public void FnSubmitSubContractorRequestDetailsAsync(string documentNumber, string projectcode, string vendorno, string requestjustification, object userState) {
            if ((this.FnSubmitSubContractorRequestDetailsOperationCompleted == null)) {
                this.FnSubmitSubContractorRequestDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitSubContractorRequestDetailsOperationCompleted);
            }
            this.InvokeAsync("FnSubmitSubContractorRequestDetails", new object[] {
                        documentNumber,
                        projectcode,
                        vendorno,
                        requestjustification}, this.FnSubmitSubContractorRequestDetailsOperationCompleted, userState);
        }
        
        private void OnFnSubmitSubContractorRequestDetailsOperationCompleted(object arg) {
            if ((this.FnSubmitSubContractorRequestDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitSubContractorRequestDetailsCompleted(this, new FnSubmitSubContractorRequestDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitSubcontractingLineDe" +
            "tails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitSubcontractingLineDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitSubcontractingLineDetails(string documentNumber, string projectcode, string vendorno, string scopeofsubcontracting, string subcontractorname, int subtype, string krapinno, int vendorgroup, int suppliertype, string descriptionofworks) {
            object[] results = this.Invoke("FnSubmitSubcontractingLineDetails", new object[] {
                        documentNumber,
                        projectcode,
                        vendorno,
                        scopeofsubcontracting,
                        subcontractorname,
                        subtype,
                        krapinno,
                        vendorgroup,
                        suppliertype,
                        descriptionofworks});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitSubcontractingLineDetailsAsync(string documentNumber, string projectcode, string vendorno, string scopeofsubcontracting, string subcontractorname, int subtype, string krapinno, int vendorgroup, int suppliertype, string descriptionofworks) {
            this.FnSubmitSubcontractingLineDetailsAsync(documentNumber, projectcode, vendorno, scopeofsubcontracting, subcontractorname, subtype, krapinno, vendorgroup, suppliertype, descriptionofworks, null);
        }
        
        /// <remarks/>
        public void FnSubmitSubcontractingLineDetailsAsync(string documentNumber, string projectcode, string vendorno, string scopeofsubcontracting, string subcontractorname, int subtype, string krapinno, int vendorgroup, int suppliertype, string descriptionofworks, object userState) {
            if ((this.FnSubmitSubcontractingLineDetailsOperationCompleted == null)) {
                this.FnSubmitSubcontractingLineDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitSubcontractingLineDetailsOperationCompleted);
            }
            this.InvokeAsync("FnSubmitSubcontractingLineDetails", new object[] {
                        documentNumber,
                        projectcode,
                        vendorno,
                        scopeofsubcontracting,
                        subcontractorname,
                        subtype,
                        krapinno,
                        vendorgroup,
                        suppliertype,
                        descriptionofworks}, this.FnSubmitSubcontractingLineDetailsOperationCompleted, userState);
        }
        
        private void OnFnSubmitSubcontractingLineDetailsOperationCompleted(object arg) {
            if ((this.FnSubmitSubcontractingLineDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitSubcontractingLineDetailsCompleted(this, new FnSubmitSubcontractingLineDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGetSubcontractingRequiredD" +
            "oc", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGetSubcontractingRequiredDoc_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnGetSubcontractingRequiredDoc(ref string varAll, string documentno) {
            object[] results = this.Invoke("FnGetSubcontractingRequiredDoc", new object[] {
                        varAll,
                        documentno});
            varAll = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetSubcontractingRequiredDocAsync(string varAll, string documentno) {
            this.FnGetSubcontractingRequiredDocAsync(varAll, documentno, null);
        }
        
        /// <remarks/>
        public void FnGetSubcontractingRequiredDocAsync(string varAll, string documentno, object userState) {
            if ((this.FnGetSubcontractingRequiredDocOperationCompleted == null)) {
                this.FnGetSubcontractingRequiredDocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetSubcontractingRequiredDocOperationCompleted);
            }
            this.InvokeAsync("FnGetSubcontractingRequiredDoc", new object[] {
                        varAll,
                        documentno}, this.FnGetSubcontractingRequiredDocOperationCompleted, userState);
        }
        
        private void OnFnGetSubcontractingRequiredDocOperationCompleted(object arg) {
            if ((this.FnGetSubcontractingRequiredDocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetSubcontractingRequiredDocCompleted(this, new FnGetSubcontractingRequiredDocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:UploadDocumentSubcontractor", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="UploadDocumentSubcontractor_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UploadDocumentSubcontractor(string applicationNo, string path, string description, string fileName) {
            object[] results = this.Invoke("UploadDocumentSubcontractor", new object[] {
                        applicationNo,
                        path,
                        description,
                        fileName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadDocumentSubcontractorAsync(string applicationNo, string path, string description, string fileName) {
            this.UploadDocumentSubcontractorAsync(applicationNo, path, description, fileName, null);
        }
        
        /// <remarks/>
        public void UploadDocumentSubcontractorAsync(string applicationNo, string path, string description, string fileName, object userState) {
            if ((this.UploadDocumentSubcontractorOperationCompleted == null)) {
                this.UploadDocumentSubcontractorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadDocumentSubcontractorOperationCompleted);
            }
            this.InvokeAsync("UploadDocumentSubcontractor", new object[] {
                        applicationNo,
                        path,
                        description,
                        fileName}, this.UploadDocumentSubcontractorOperationCompleted, userState);
        }
        
        private void OnUploadDocumentSubcontractorOperationCompleted(object arg) {
            if ((this.UploadDocumentSubcontractorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadDocumentSubcontractorCompleted(this, new UploadDocumentSubcontractorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGetFinalAccountTemplateID", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGetFinalAccountTemplateID_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnGetFinalAccountTemplateID(ref string varAll) {
            object[] results = this.Invoke("FnGetFinalAccountTemplateID", new object[] {
                        varAll});
            varAll = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetFinalAccountTemplateIDAsync(string varAll) {
            this.FnGetFinalAccountTemplateIDAsync(varAll, null);
        }
        
        /// <remarks/>
        public void FnGetFinalAccountTemplateIDAsync(string varAll, object userState) {
            if ((this.FnGetFinalAccountTemplateIDOperationCompleted == null)) {
                this.FnGetFinalAccountTemplateIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetFinalAccountTemplateIDOperationCompleted);
            }
            this.InvokeAsync("FnGetFinalAccountTemplateID", new object[] {
                        varAll}, this.FnGetFinalAccountTemplateIDOperationCompleted, userState);
        }
        
        private void OnFnGetFinalAccountTemplateIDOperationCompleted(object arg) {
            if ((this.FnGetFinalAccountTemplateIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetFinalAccountTemplateIDCompleted(this, new FnGetFinalAccountTemplateIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitFinalAccount", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitFinalAccount_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitFinalAccount(string vendornumber, string projectid, string templateid) {
            object[] results = this.Invoke("FnSubmitFinalAccount", new object[] {
                        vendornumber,
                        projectid,
                        templateid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitFinalAccountAsync(string vendornumber, string projectid, string templateid) {
            this.FnSubmitFinalAccountAsync(vendornumber, projectid, templateid, null);
        }
        
        /// <remarks/>
        public void FnSubmitFinalAccountAsync(string vendornumber, string projectid, string templateid, object userState) {
            if ((this.FnSubmitFinalAccountOperationCompleted == null)) {
                this.FnSubmitFinalAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitFinalAccountOperationCompleted);
            }
            this.InvokeAsync("FnSubmitFinalAccount", new object[] {
                        vendornumber,
                        projectid,
                        templateid}, this.FnSubmitFinalAccountOperationCompleted, userState);
        }
        
        private void OnFnSubmitFinalAccountOperationCompleted(object arg) {
            if ((this.FnSubmitFinalAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitFinalAccountCompleted(this, new FnSubmitFinalAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitFinalAccountLineDeta" +
            "ils", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitFinalAccountLineDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitFinalAccountLineDetails(string documentno, string projectno, int lineno, int responsestatus, string comments) {
            object[] results = this.Invoke("FnSubmitFinalAccountLineDetails", new object[] {
                        documentno,
                        projectno,
                        lineno,
                        responsestatus,
                        comments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitFinalAccountLineDetailsAsync(string documentno, string projectno, int lineno, int responsestatus, string comments) {
            this.FnSubmitFinalAccountLineDetailsAsync(documentno, projectno, lineno, responsestatus, comments, null);
        }
        
        /// <remarks/>
        public void FnSubmitFinalAccountLineDetailsAsync(string documentno, string projectno, int lineno, int responsestatus, string comments, object userState) {
            if ((this.FnSubmitFinalAccountLineDetailsOperationCompleted == null)) {
                this.FnSubmitFinalAccountLineDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitFinalAccountLineDetailsOperationCompleted);
            }
            this.InvokeAsync("FnSubmitFinalAccountLineDetails", new object[] {
                        documentno,
                        projectno,
                        lineno,
                        responsestatus,
                        comments}, this.FnSubmitFinalAccountLineDetailsOperationCompleted, userState);
        }
        
        private void OnFnSubmitFinalAccountLineDetailsOperationCompleted(object arg) {
            if ((this.FnSubmitFinalAccountLineDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitFinalAccountLineDetailsCompleted(this, new FnSubmitFinalAccountLineDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGetExpiryStatusInsurance", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGetExpiryStatusInsurance_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetExpiryStatusInsurance(string vendorNo) {
            object[] results = this.Invoke("FnGetExpiryStatusInsurance", new object[] {
                        vendorNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetExpiryStatusInsuranceAsync(string vendorNo) {
            this.FnGetExpiryStatusInsuranceAsync(vendorNo, null);
        }
        
        /// <remarks/>
        public void FnGetExpiryStatusInsuranceAsync(string vendorNo, object userState) {
            if ((this.FnGetExpiryStatusInsuranceOperationCompleted == null)) {
                this.FnGetExpiryStatusInsuranceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetExpiryStatusInsuranceOperationCompleted);
            }
            this.InvokeAsync("FnGetExpiryStatusInsurance", new object[] {
                        vendorNo}, this.FnGetExpiryStatusInsuranceOperationCompleted, userState);
        }
        
        private void OnFnGetExpiryStatusInsuranceOperationCompleted(object arg) {
            if ((this.FnGetExpiryStatusInsuranceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetExpiryStatusInsuranceCompleted(this, new FnGetExpiryStatusInsuranceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGetExpiryStatusAdvanceGuar" +
            "antee", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGetExpiryStatusAdvanceGuarantee_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetExpiryStatusAdvanceGuarantee(string vendorNo) {
            object[] results = this.Invoke("FnGetExpiryStatusAdvanceGuarantee", new object[] {
                        vendorNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetExpiryStatusAdvanceGuaranteeAsync(string vendorNo) {
            this.FnGetExpiryStatusAdvanceGuaranteeAsync(vendorNo, null);
        }
        
        /// <remarks/>
        public void FnGetExpiryStatusAdvanceGuaranteeAsync(string vendorNo, object userState) {
            if ((this.FnGetExpiryStatusAdvanceGuaranteeOperationCompleted == null)) {
                this.FnGetExpiryStatusAdvanceGuaranteeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetExpiryStatusAdvanceGuaranteeOperationCompleted);
            }
            this.InvokeAsync("FnGetExpiryStatusAdvanceGuarantee", new object[] {
                        vendorNo}, this.FnGetExpiryStatusAdvanceGuaranteeOperationCompleted, userState);
        }
        
        private void OnFnGetExpiryStatusAdvanceGuaranteeOperationCompleted(object arg) {
            if ((this.FnGetExpiryStatusAdvanceGuaranteeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetExpiryStatusAdvanceGuaranteeCompleted(this, new FnGetExpiryStatusAdvanceGuaranteeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitWorkPlan", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitWorkPlan_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitWorkPlan(string vendornumber, string projectid, int documenttype) {
            object[] results = this.Invoke("FnSubmitWorkPlan", new object[] {
                        vendornumber,
                        projectid,
                        documenttype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitWorkPlanAsync(string vendornumber, string projectid, int documenttype) {
            this.FnSubmitWorkPlanAsync(vendornumber, projectid, documenttype, null);
        }
        
        /// <remarks/>
        public void FnSubmitWorkPlanAsync(string vendornumber, string projectid, int documenttype, object userState) {
            if ((this.FnSubmitWorkPlanOperationCompleted == null)) {
                this.FnSubmitWorkPlanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitWorkPlanOperationCompleted);
            }
            this.InvokeAsync("FnSubmitWorkPlan", new object[] {
                        vendornumber,
                        projectid,
                        documenttype}, this.FnSubmitWorkPlanOperationCompleted, userState);
        }
        
        private void OnFnSubmitWorkPlanOperationCompleted(object arg) {
            if ((this.FnSubmitWorkPlanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitWorkPlanCompleted(this, new FnSubmitWorkPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitWorkPlanLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitWorkPlanLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitWorkPlanLine(string documentNumber, string vendorno, int documentntype, string activitycode, int entryno, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startdate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime enddate) {
            object[] results = this.Invoke("FnSubmitWorkPlanLine", new object[] {
                        documentNumber,
                        vendorno,
                        documentntype,
                        activitycode,
                        entryno,
                        startdate,
                        enddate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitWorkPlanLineAsync(string documentNumber, string vendorno, int documentntype, string activitycode, int entryno, System.DateTime startdate, System.DateTime enddate) {
            this.FnSubmitWorkPlanLineAsync(documentNumber, vendorno, documentntype, activitycode, entryno, startdate, enddate, null);
        }
        
        /// <remarks/>
        public void FnSubmitWorkPlanLineAsync(string documentNumber, string vendorno, int documentntype, string activitycode, int entryno, System.DateTime startdate, System.DateTime enddate, object userState) {
            if ((this.FnSubmitWorkPlanLineOperationCompleted == null)) {
                this.FnSubmitWorkPlanLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitWorkPlanLineOperationCompleted);
            }
            this.InvokeAsync("FnSubmitWorkPlanLine", new object[] {
                        documentNumber,
                        vendorno,
                        documentntype,
                        activitycode,
                        entryno,
                        startdate,
                        enddate}, this.FnSubmitWorkPlanLineOperationCompleted, userState);
        }
        
        private void OnFnSubmitWorkPlanLineOperationCompleted(object arg) {
            if ((this.FnSubmitWorkPlanLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitWorkPlanLineCompleted(this, new FnSubmitWorkPlanLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitPlanningWorkPlanLine" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitPlanningWorkPlanLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitPlanningWorkPlanLine(string documentNumber, string vendorno, int documentntype, string activitycode, int entryno, decimal totaldonetodate, decimal workstartchainage, decimal workendchainage, string projectid, string unitofmeasure, string formarnid, int lineno) {
            object[] results = this.Invoke("FnSubmitPlanningWorkPlanLine", new object[] {
                        documentNumber,
                        vendorno,
                        documentntype,
                        activitycode,
                        entryno,
                        totaldonetodate,
                        workstartchainage,
                        workendchainage,
                        projectid,
                        unitofmeasure,
                        formarnid,
                        lineno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitPlanningWorkPlanLineAsync(string documentNumber, string vendorno, int documentntype, string activitycode, int entryno, decimal totaldonetodate, decimal workstartchainage, decimal workendchainage, string projectid, string unitofmeasure, string formarnid, int lineno) {
            this.FnSubmitPlanningWorkPlanLineAsync(documentNumber, vendorno, documentntype, activitycode, entryno, totaldonetodate, workstartchainage, workendchainage, projectid, unitofmeasure, formarnid, lineno, null);
        }
        
        /// <remarks/>
        public void FnSubmitPlanningWorkPlanLineAsync(string documentNumber, string vendorno, int documentntype, string activitycode, int entryno, decimal totaldonetodate, decimal workstartchainage, decimal workendchainage, string projectid, string unitofmeasure, string formarnid, int lineno, object userState) {
            if ((this.FnSubmitPlanningWorkPlanLineOperationCompleted == null)) {
                this.FnSubmitPlanningWorkPlanLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitPlanningWorkPlanLineOperationCompleted);
            }
            this.InvokeAsync("FnSubmitPlanningWorkPlanLine", new object[] {
                        documentNumber,
                        vendorno,
                        documentntype,
                        activitycode,
                        entryno,
                        totaldonetodate,
                        workstartchainage,
                        workendchainage,
                        projectid,
                        unitofmeasure,
                        formarnid,
                        lineno}, this.FnSubmitPlanningWorkPlanLineOperationCompleted, userState);
        }
        
        private void OnFnSubmitPlanningWorkPlanLineOperationCompleted(object arg) {
            if ((this.FnSubmitPlanningWorkPlanLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitPlanningWorkPlanLineCompleted(this, new FnSubmitPlanningWorkPlanLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitContractorInspection" +
            "Request", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitContractorInspectionRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitContractorInspectionRequest(string documentNumber, string vendorno, string projectid, int requireslabtest, string workplanno, int requiressurveychecks) {
            object[] results = this.Invoke("FnSubmitContractorInspectionRequest", new object[] {
                        documentNumber,
                        vendorno,
                        projectid,
                        requireslabtest,
                        workplanno,
                        requiressurveychecks});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitContractorInspectionRequestAsync(string documentNumber, string vendorno, string projectid, int requireslabtest, string workplanno, int requiressurveychecks) {
            this.FnSubmitContractorInspectionRequestAsync(documentNumber, vendorno, projectid, requireslabtest, workplanno, requiressurveychecks, null);
        }
        
        /// <remarks/>
        public void FnSubmitContractorInspectionRequestAsync(string documentNumber, string vendorno, string projectid, int requireslabtest, string workplanno, int requiressurveychecks, object userState) {
            if ((this.FnSubmitContractorInspectionRequestOperationCompleted == null)) {
                this.FnSubmitContractorInspectionRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitContractorInspectionRequestOperationCompleted);
            }
            this.InvokeAsync("FnSubmitContractorInspectionRequest", new object[] {
                        documentNumber,
                        vendorno,
                        projectid,
                        requireslabtest,
                        workplanno,
                        requiressurveychecks}, this.FnSubmitContractorInspectionRequestOperationCompleted, userState);
        }
        
        private void OnFnSubmitContractorInspectionRequestOperationCompleted(object arg) {
            if ((this.FnSubmitContractorInspectionRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitContractorInspectionRequestCompleted(this, new FnSubmitContractorInspectionRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitContractorInspection" +
            "Activities", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitContractorInspectionActivities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitContractorInspectionActivities(decimal workstartchainage, decimal workendchainage, string testsrequired, int entryno) {
            object[] results = this.Invoke("FnSubmitContractorInspectionActivities", new object[] {
                        workstartchainage,
                        workendchainage,
                        testsrequired,
                        entryno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitContractorInspectionActivitiesAsync(decimal workstartchainage, decimal workendchainage, string testsrequired, int entryno) {
            this.FnSubmitContractorInspectionActivitiesAsync(workstartchainage, workendchainage, testsrequired, entryno, null);
        }
        
        /// <remarks/>
        public void FnSubmitContractorInspectionActivitiesAsync(decimal workstartchainage, decimal workendchainage, string testsrequired, int entryno, object userState) {
            if ((this.FnSubmitContractorInspectionActivitiesOperationCompleted == null)) {
                this.FnSubmitContractorInspectionActivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitContractorInspectionActivitiesOperationCompleted);
            }
            this.InvokeAsync("FnSubmitContractorInspectionActivities", new object[] {
                        workstartchainage,
                        workendchainage,
                        testsrequired,
                        entryno}, this.FnSubmitContractorInspectionActivitiesOperationCompleted, userState);
        }
        
        private void OnFnSubmitContractorInspectionActivitiesOperationCompleted(object arg) {
            if ((this.FnSubmitContractorInspectionActivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitContractorInspectionActivitiesCompleted(this, new FnSubmitContractorInspectionActivitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitTestMaterialRecord", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitTestMaterialRecord_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitTestMaterialRecord(string documentNumber, string vendorno, string projectid) {
            object[] results = this.Invoke("FnSubmitTestMaterialRecord", new object[] {
                        documentNumber,
                        vendorno,
                        projectid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitTestMaterialRecordAsync(string documentNumber, string vendorno, string projectid) {
            this.FnSubmitTestMaterialRecordAsync(documentNumber, vendorno, projectid, null);
        }
        
        /// <remarks/>
        public void FnSubmitTestMaterialRecordAsync(string documentNumber, string vendorno, string projectid, object userState) {
            if ((this.FnSubmitTestMaterialRecordOperationCompleted == null)) {
                this.FnSubmitTestMaterialRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitTestMaterialRecordOperationCompleted);
            }
            this.InvokeAsync("FnSubmitTestMaterialRecord", new object[] {
                        documentNumber,
                        vendorno,
                        projectid}, this.FnSubmitTestMaterialRecordOperationCompleted, userState);
        }
        
        private void OnFnSubmitTestMaterialRecordOperationCompleted(object arg) {
            if ((this.FnSubmitTestMaterialRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitTestMaterialRecordCompleted(this, new FnSubmitTestMaterialRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitMaterialTestLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitMaterialTestLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitMaterialTestLine(string documentNumber, string vendorno, string projectid, string materialid, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime materialdeliverydate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime testingdate, string manufacturer, int entryno, decimal quantity) {
            object[] results = this.Invoke("FnSubmitMaterialTestLine", new object[] {
                        documentNumber,
                        vendorno,
                        projectid,
                        materialid,
                        materialdeliverydate,
                        testingdate,
                        manufacturer,
                        entryno,
                        quantity});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitMaterialTestLineAsync(string documentNumber, string vendorno, string projectid, string materialid, System.DateTime materialdeliverydate, System.DateTime testingdate, string manufacturer, int entryno, decimal quantity) {
            this.FnSubmitMaterialTestLineAsync(documentNumber, vendorno, projectid, materialid, materialdeliverydate, testingdate, manufacturer, entryno, quantity, null);
        }
        
        /// <remarks/>
        public void FnSubmitMaterialTestLineAsync(string documentNumber, string vendorno, string projectid, string materialid, System.DateTime materialdeliverydate, System.DateTime testingdate, string manufacturer, int entryno, decimal quantity, object userState) {
            if ((this.FnSubmitMaterialTestLineOperationCompleted == null)) {
                this.FnSubmitMaterialTestLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitMaterialTestLineOperationCompleted);
            }
            this.InvokeAsync("FnSubmitMaterialTestLine", new object[] {
                        documentNumber,
                        vendorno,
                        projectid,
                        materialid,
                        materialdeliverydate,
                        testingdate,
                        manufacturer,
                        entryno,
                        quantity}, this.FnSubmitMaterialTestLineOperationCompleted, userState);
        }
        
        private void OnFnSubmitMaterialTestLineOperationCompleted(object arg) {
            if ((this.FnSubmitMaterialTestLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitMaterialTestLineCompleted(this, new FnSubmitMaterialTestLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGetMaterialTestTemplate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGetMaterialTestTemplate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnGetMaterialTestTemplate(ref string varAll) {
            object[] results = this.Invoke("FnGetMaterialTestTemplate", new object[] {
                        varAll});
            varAll = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetMaterialTestTemplateAsync(string varAll) {
            this.FnGetMaterialTestTemplateAsync(varAll, null);
        }
        
        /// <remarks/>
        public void FnGetMaterialTestTemplateAsync(string varAll, object userState) {
            if ((this.FnGetMaterialTestTemplateOperationCompleted == null)) {
                this.FnGetMaterialTestTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetMaterialTestTemplateOperationCompleted);
            }
            this.InvokeAsync("FnGetMaterialTestTemplate", new object[] {
                        varAll}, this.FnGetMaterialTestTemplateOperationCompleted, userState);
        }
        
        private void OnFnGetMaterialTestTemplateOperationCompleted(object arg) {
            if ((this.FnGetMaterialTestTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetMaterialTestTemplateCompleted(this, new FnGetMaterialTestTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGetWorkPlanNo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGetWorkPlanNo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnGetWorkPlanNo(ref string varAll, string vendorno, string projectid) {
            object[] results = this.Invoke("FnGetWorkPlanNo", new object[] {
                        varAll,
                        vendorno,
                        projectid});
            varAll = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetWorkPlanNoAsync(string varAll, string vendorno, string projectid) {
            this.FnGetWorkPlanNoAsync(varAll, vendorno, projectid, null);
        }
        
        /// <remarks/>
        public void FnGetWorkPlanNoAsync(string varAll, string vendorno, string projectid, object userState) {
            if ((this.FnGetWorkPlanNoOperationCompleted == null)) {
                this.FnGetWorkPlanNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetWorkPlanNoOperationCompleted);
            }
            this.InvokeAsync("FnGetWorkPlanNo", new object[] {
                        varAll,
                        vendorno,
                        projectid}, this.FnGetWorkPlanNoOperationCompleted, userState);
        }
        
        private void OnFnGetWorkPlanNoOperationCompleted(object arg) {
            if ((this.FnGetWorkPlanNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetWorkPlanNoCompleted(this, new FnGetWorkPlanNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:UploadDocumentMaterialTestRe" +
            "cord", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="UploadDocumentMaterialTestRecord_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UploadDocumentMaterialTestRecord(string applicationNo, string path, string description, string fileName) {
            object[] results = this.Invoke("UploadDocumentMaterialTestRecord", new object[] {
                        applicationNo,
                        path,
                        description,
                        fileName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadDocumentMaterialTestRecordAsync(string applicationNo, string path, string description, string fileName) {
            this.UploadDocumentMaterialTestRecordAsync(applicationNo, path, description, fileName, null);
        }
        
        /// <remarks/>
        public void UploadDocumentMaterialTestRecordAsync(string applicationNo, string path, string description, string fileName, object userState) {
            if ((this.UploadDocumentMaterialTestRecordOperationCompleted == null)) {
                this.UploadDocumentMaterialTestRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadDocumentMaterialTestRecordOperationCompleted);
            }
            this.InvokeAsync("UploadDocumentMaterialTestRecord", new object[] {
                        applicationNo,
                        path,
                        description,
                        fileName}, this.UploadDocumentMaterialTestRecordOperationCompleted, userState);
        }
        
        private void OnUploadDocumentMaterialTestRecordOperationCompleted(object arg) {
            if ((this.UploadDocumentMaterialTestRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadDocumentMaterialTestRecordCompleted(this, new UploadDocumentMaterialTestRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:UploadDocumentWorkPlan", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="UploadDocumentWorkPlan_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UploadDocumentWorkPlan(string applicationNo, string path, string description, string fileName) {
            object[] results = this.Invoke("UploadDocumentWorkPlan", new object[] {
                        applicationNo,
                        path,
                        description,
                        fileName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadDocumentWorkPlanAsync(string applicationNo, string path, string description, string fileName) {
            this.UploadDocumentWorkPlanAsync(applicationNo, path, description, fileName, null);
        }
        
        /// <remarks/>
        public void UploadDocumentWorkPlanAsync(string applicationNo, string path, string description, string fileName, object userState) {
            if ((this.UploadDocumentWorkPlanOperationCompleted == null)) {
                this.UploadDocumentWorkPlanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadDocumentWorkPlanOperationCompleted);
            }
            this.InvokeAsync("UploadDocumentWorkPlan", new object[] {
                        applicationNo,
                        path,
                        description,
                        fileName}, this.UploadDocumentWorkPlanOperationCompleted, userState);
        }
        
        private void OnUploadDocumentWorkPlanOperationCompleted(object arg) {
            if ((this.UploadDocumentWorkPlanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadDocumentWorkPlanCompleted(this, new UploadDocumentWorkPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:UploadDocumentTestRquest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="UploadDocumentTestRquest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UploadDocumentTestRquest(string applicationNo, string path, string description, string fileName) {
            object[] results = this.Invoke("UploadDocumentTestRquest", new object[] {
                        applicationNo,
                        path,
                        description,
                        fileName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadDocumentTestRquestAsync(string applicationNo, string path, string description, string fileName) {
            this.UploadDocumentTestRquestAsync(applicationNo, path, description, fileName, null);
        }
        
        /// <remarks/>
        public void UploadDocumentTestRquestAsync(string applicationNo, string path, string description, string fileName, object userState) {
            if ((this.UploadDocumentTestRquestOperationCompleted == null)) {
                this.UploadDocumentTestRquestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadDocumentTestRquestOperationCompleted);
            }
            this.InvokeAsync("UploadDocumentTestRquest", new object[] {
                        applicationNo,
                        path,
                        description,
                        fileName}, this.UploadDocumentTestRquestOperationCompleted, userState);
        }
        
        private void OnUploadDocumentTestRquestOperationCompleted(object arg) {
            if ((this.UploadDocumentTestRquestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadDocumentTestRquestCompleted(this, new UploadDocumentTestRquestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:UploadDocumentSiteAgent", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="UploadDocumentSiteAgent_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UploadDocumentSiteAgent(string applicationNo, string path, string description, string fileName) {
            object[] results = this.Invoke("UploadDocumentSiteAgent", new object[] {
                        applicationNo,
                        path,
                        description,
                        fileName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadDocumentSiteAgentAsync(string applicationNo, string path, string description, string fileName) {
            this.UploadDocumentSiteAgentAsync(applicationNo, path, description, fileName, null);
        }
        
        /// <remarks/>
        public void UploadDocumentSiteAgentAsync(string applicationNo, string path, string description, string fileName, object userState) {
            if ((this.UploadDocumentSiteAgentOperationCompleted == null)) {
                this.UploadDocumentSiteAgentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadDocumentSiteAgentOperationCompleted);
            }
            this.InvokeAsync("UploadDocumentSiteAgent", new object[] {
                        applicationNo,
                        path,
                        description,
                        fileName}, this.UploadDocumentSiteAgentOperationCompleted, userState);
        }
        
        private void OnUploadDocumentSiteAgentOperationCompleted(object arg) {
            if ((this.UploadDocumentSiteAgentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadDocumentSiteAgentCompleted(this, new UploadDocumentSiteAgentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:UploadDocumentPaymentRequest" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="UploadDocumentPaymentRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UploadDocumentPaymentRequest(string applicationNo, string path, string description, string fileName) {
            object[] results = this.Invoke("UploadDocumentPaymentRequest", new object[] {
                        applicationNo,
                        path,
                        description,
                        fileName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadDocumentPaymentRequestAsync(string applicationNo, string path, string description, string fileName) {
            this.UploadDocumentPaymentRequestAsync(applicationNo, path, description, fileName, null);
        }
        
        /// <remarks/>
        public void UploadDocumentPaymentRequestAsync(string applicationNo, string path, string description, string fileName, object userState) {
            if ((this.UploadDocumentPaymentRequestOperationCompleted == null)) {
                this.UploadDocumentPaymentRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadDocumentPaymentRequestOperationCompleted);
            }
            this.InvokeAsync("UploadDocumentPaymentRequest", new object[] {
                        applicationNo,
                        path,
                        description,
                        fileName}, this.UploadDocumentPaymentRequestOperationCompleted, userState);
        }
        
        private void OnUploadDocumentPaymentRequestOperationCompleted(object arg) {
            if ((this.UploadDocumentPaymentRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadDocumentPaymentRequestCompleted(this, new UploadDocumentPaymentRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:UploadDocumentEOT", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="UploadDocumentEOT_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UploadDocumentEOT(string applicationNo, string path, string description, string fileName) {
            object[] results = this.Invoke("UploadDocumentEOT", new object[] {
                        applicationNo,
                        path,
                        description,
                        fileName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadDocumentEOTAsync(string applicationNo, string path, string description, string fileName) {
            this.UploadDocumentEOTAsync(applicationNo, path, description, fileName, null);
        }
        
        /// <remarks/>
        public void UploadDocumentEOTAsync(string applicationNo, string path, string description, string fileName, object userState) {
            if ((this.UploadDocumentEOTOperationCompleted == null)) {
                this.UploadDocumentEOTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadDocumentEOTOperationCompleted);
            }
            this.InvokeAsync("UploadDocumentEOT", new object[] {
                        applicationNo,
                        path,
                        description,
                        fileName}, this.UploadDocumentEOTOperationCompleted, userState);
        }
        
        private void OnUploadDocumentEOTOperationCompleted(object arg) {
            if ((this.UploadDocumentEOTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadDocumentEOTCompleted(this, new UploadDocumentEOTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:UploadDocumentFinalAccount", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="UploadDocumentFinalAccount_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UploadDocumentFinalAccount(string applicationNo, string path, string description, string fileName) {
            object[] results = this.Invoke("UploadDocumentFinalAccount", new object[] {
                        applicationNo,
                        path,
                        description,
                        fileName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadDocumentFinalAccountAsync(string applicationNo, string path, string description, string fileName) {
            this.UploadDocumentFinalAccountAsync(applicationNo, path, description, fileName, null);
        }
        
        /// <remarks/>
        public void UploadDocumentFinalAccountAsync(string applicationNo, string path, string description, string fileName, object userState) {
            if ((this.UploadDocumentFinalAccountOperationCompleted == null)) {
                this.UploadDocumentFinalAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadDocumentFinalAccountOperationCompleted);
            }
            this.InvokeAsync("UploadDocumentFinalAccount", new object[] {
                        applicationNo,
                        path,
                        description,
                        fileName}, this.UploadDocumentFinalAccountOperationCompleted, userState);
        }
        
        private void OnUploadDocumentFinalAccountOperationCompleted(object arg) {
            if ((this.UploadDocumentFinalAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadDocumentFinalAccountCompleted(this, new UploadDocumentFinalAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:UploadDocumentReportSubmissi" +
            "on", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="UploadDocumentReportSubmission_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UploadDocumentReportSubmission(string applicationNo, string path, string description, string fileName) {
            object[] results = this.Invoke("UploadDocumentReportSubmission", new object[] {
                        applicationNo,
                        path,
                        description,
                        fileName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadDocumentReportSubmissionAsync(string applicationNo, string path, string description, string fileName) {
            this.UploadDocumentReportSubmissionAsync(applicationNo, path, description, fileName, null);
        }
        
        /// <remarks/>
        public void UploadDocumentReportSubmissionAsync(string applicationNo, string path, string description, string fileName, object userState) {
            if ((this.UploadDocumentReportSubmissionOperationCompleted == null)) {
                this.UploadDocumentReportSubmissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadDocumentReportSubmissionOperationCompleted);
            }
            this.InvokeAsync("UploadDocumentReportSubmission", new object[] {
                        applicationNo,
                        path,
                        description,
                        fileName}, this.UploadDocumentReportSubmissionOperationCompleted, userState);
        }
        
        private void OnUploadDocumentReportSubmissionOperationCompleted(object arg) {
            if ((this.UploadDocumentReportSubmissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadDocumentReportSubmissionCompleted(this, new UploadDocumentReportSubmissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnDeleteInspectionActivity", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnDeleteInspectionActivity_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteInspectionActivity(string documentno, string vendorNo, int entryno) {
            object[] results = this.Invoke("FnDeleteInspectionActivity", new object[] {
                        documentno,
                        vendorNo,
                        entryno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteInspectionActivityAsync(string documentno, string vendorNo, int entryno) {
            this.FnDeleteInspectionActivityAsync(documentno, vendorNo, entryno, null);
        }
        
        /// <remarks/>
        public void FnDeleteInspectionActivityAsync(string documentno, string vendorNo, int entryno, object userState) {
            if ((this.FnDeleteInspectionActivityOperationCompleted == null)) {
                this.FnDeleteInspectionActivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteInspectionActivityOperationCompleted);
            }
            this.InvokeAsync("FnDeleteInspectionActivity", new object[] {
                        documentno,
                        vendorNo,
                        entryno}, this.FnDeleteInspectionActivityOperationCompleted, userState);
        }
        
        private void OnFnDeleteInspectionActivityOperationCompleted(object arg) {
            if ((this.FnDeleteInspectionActivityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteInspectionActivityCompleted(this, new FnDeleteInspectionActivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitWorkplanMaterialsonS" +
            "ite", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitWorkplanMaterialsonSite_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitWorkplanMaterialsonSite(string vendornumber, string documentno, string materialid, string activityno, decimal quantity, int lineno, int documenttype, int approved) {
            object[] results = this.Invoke("FnSubmitWorkplanMaterialsonSite", new object[] {
                        vendornumber,
                        documentno,
                        materialid,
                        activityno,
                        quantity,
                        lineno,
                        documenttype,
                        approved});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitWorkplanMaterialsonSiteAsync(string vendornumber, string documentno, string materialid, string activityno, decimal quantity, int lineno, int documenttype, int approved) {
            this.FnSubmitWorkplanMaterialsonSiteAsync(vendornumber, documentno, materialid, activityno, quantity, lineno, documenttype, approved, null);
        }
        
        /// <remarks/>
        public void FnSubmitWorkplanMaterialsonSiteAsync(string vendornumber, string documentno, string materialid, string activityno, decimal quantity, int lineno, int documenttype, int approved, object userState) {
            if ((this.FnSubmitWorkplanMaterialsonSiteOperationCompleted == null)) {
                this.FnSubmitWorkplanMaterialsonSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitWorkplanMaterialsonSiteOperationCompleted);
            }
            this.InvokeAsync("FnSubmitWorkplanMaterialsonSite", new object[] {
                        vendornumber,
                        documentno,
                        materialid,
                        activityno,
                        quantity,
                        lineno,
                        documenttype,
                        approved}, this.FnSubmitWorkplanMaterialsonSiteOperationCompleted, userState);
        }
        
        private void OnFnSubmitWorkplanMaterialsonSiteOperationCompleted(object arg) {
            if ((this.FnSubmitWorkplanMaterialsonSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitWorkplanMaterialsonSiteCompleted(this, new FnSubmitWorkplanMaterialsonSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitWorkPlanEquipment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitWorkPlanEquipment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitWorkPlanEquipment(string vendornumber, string documentno, string projectid, string equipmentno, string activityno, int lineno, int documenttype, decimal quantity) {
            object[] results = this.Invoke("FnSubmitWorkPlanEquipment", new object[] {
                        vendornumber,
                        documentno,
                        projectid,
                        equipmentno,
                        activityno,
                        lineno,
                        documenttype,
                        quantity});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitWorkPlanEquipmentAsync(string vendornumber, string documentno, string projectid, string equipmentno, string activityno, int lineno, int documenttype, decimal quantity) {
            this.FnSubmitWorkPlanEquipmentAsync(vendornumber, documentno, projectid, equipmentno, activityno, lineno, documenttype, quantity, null);
        }
        
        /// <remarks/>
        public void FnSubmitWorkPlanEquipmentAsync(string vendornumber, string documentno, string projectid, string equipmentno, string activityno, int lineno, int documenttype, decimal quantity, object userState) {
            if ((this.FnSubmitWorkPlanEquipmentOperationCompleted == null)) {
                this.FnSubmitWorkPlanEquipmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitWorkPlanEquipmentOperationCompleted);
            }
            this.InvokeAsync("FnSubmitWorkPlanEquipment", new object[] {
                        vendornumber,
                        documentno,
                        projectid,
                        equipmentno,
                        activityno,
                        lineno,
                        documenttype,
                        quantity}, this.FnSubmitWorkPlanEquipmentOperationCompleted, userState);
        }
        
        private void OnFnSubmitWorkPlanEquipmentOperationCompleted(object arg) {
            if ((this.FnSubmitWorkPlanEquipmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitWorkPlanEquipmentCompleted(this, new FnSubmitWorkPlanEquipmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:GenerateTemplate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="GenerateTemplate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GenerateTemplate(string filename, string project_ID, string document_No) {
            this.Invoke("GenerateTemplate", new object[] {
                        filename,
                        project_ID,
                        document_No});
        }
        
        /// <remarks/>
        public void GenerateTemplateAsync(string filename, string project_ID, string document_No) {
            this.GenerateTemplateAsync(filename, project_ID, document_No, null);
        }
        
        /// <remarks/>
        public void GenerateTemplateAsync(string filename, string project_ID, string document_No, object userState) {
            if ((this.GenerateTemplateOperationCompleted == null)) {
                this.GenerateTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateTemplateOperationCompleted);
            }
            this.InvokeAsync("GenerateTemplate", new object[] {
                        filename,
                        project_ID,
                        document_No}, this.GenerateTemplateOperationCompleted, userState);
        }
        
        private void OnGenerateTemplateOperationCompleted(object arg) {
            if ((this.GenerateTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateTemplateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:GenerateTemplateNew", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="GenerateTemplateNew_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GenerateTemplateNew(string filename, string project_ID, string document_No, string mainContractor, decimal contractsum, int period, int ipcnumber, decimal settedamount, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime projectstartdate) {
            this.Invoke("GenerateTemplateNew", new object[] {
                        filename,
                        project_ID,
                        document_No,
                        mainContractor,
                        contractsum,
                        period,
                        ipcnumber,
                        settedamount,
                        projectstartdate});
        }
        
        /// <remarks/>
        public void GenerateTemplateNewAsync(string filename, string project_ID, string document_No, string mainContractor, decimal contractsum, int period, int ipcnumber, decimal settedamount, System.DateTime projectstartdate) {
            this.GenerateTemplateNewAsync(filename, project_ID, document_No, mainContractor, contractsum, period, ipcnumber, settedamount, projectstartdate, null);
        }
        
        /// <remarks/>
        public void GenerateTemplateNewAsync(string filename, string project_ID, string document_No, string mainContractor, decimal contractsum, int period, int ipcnumber, decimal settedamount, System.DateTime projectstartdate, object userState) {
            if ((this.GenerateTemplateNewOperationCompleted == null)) {
                this.GenerateTemplateNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateTemplateNewOperationCompleted);
            }
            this.InvokeAsync("GenerateTemplateNew", new object[] {
                        filename,
                        project_ID,
                        document_No,
                        mainContractor,
                        contractsum,
                        period,
                        ipcnumber,
                        settedamount,
                        projectstartdate}, this.GenerateTemplateNewOperationCompleted, userState);
        }
        
        private void OnGenerateTemplateNewOperationCompleted(object arg) {
            if ((this.GenerateTemplateNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateTemplateNewCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:ImportTemplate_", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="ImportTemplate__Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ImportTemplate_(string filename, string project_ID, string document_No) {
            this.Invoke("ImportTemplate_", new object[] {
                        filename,
                        project_ID,
                        document_No});
        }
        
        /// <remarks/>
        public void ImportTemplate_Async(string filename, string project_ID, string document_No) {
            this.ImportTemplate_Async(filename, project_ID, document_No, null);
        }
        
        /// <remarks/>
        public void ImportTemplate_Async(string filename, string project_ID, string document_No, object userState) {
            if ((this.ImportTemplate_OperationCompleted == null)) {
                this.ImportTemplate_OperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportTemplate_OperationCompleted);
            }
            this.InvokeAsync("ImportTemplate_", new object[] {
                        filename,
                        project_ID,
                        document_No}, this.ImportTemplate_OperationCompleted, userState);
        }
        
        private void OnImportTemplate_OperationCompleted(object arg) {
            if ((this.ImportTemplate_Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportTemplate_Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGeneratePreviousIPC", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGeneratePreviousIPC_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGeneratePreviousIPC(string vendorNumber, string documentno, string projectid, string projectname) {
            object[] results = this.Invoke("FnGeneratePreviousIPC", new object[] {
                        vendorNumber,
                        documentno,
                        projectid,
                        projectname});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGeneratePreviousIPCAsync(string vendorNumber, string documentno, string projectid, string projectname) {
            this.FnGeneratePreviousIPCAsync(vendorNumber, documentno, projectid, projectname, null);
        }
        
        /// <remarks/>
        public void FnGeneratePreviousIPCAsync(string vendorNumber, string documentno, string projectid, string projectname, object userState) {
            if ((this.FnGeneratePreviousIPCOperationCompleted == null)) {
                this.FnGeneratePreviousIPCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGeneratePreviousIPCOperationCompleted);
            }
            this.InvokeAsync("FnGeneratePreviousIPC", new object[] {
                        vendorNumber,
                        documentno,
                        projectid,
                        projectname}, this.FnGeneratePreviousIPCOperationCompleted, userState);
        }
        
        private void OnFnGeneratePreviousIPCOperationCompleted(object arg) {
            if ((this.FnGeneratePreviousIPCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGeneratePreviousIPCCompleted(this, new FnGeneratePreviousIPCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:ImportIPCDocument", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="ImportIPCDocument_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ImportIPCDocument(string applicationNo, string path, string description, string fileName, string vendorno, string projectid, string projectname) {
            object[] results = this.Invoke("ImportIPCDocument", new object[] {
                        applicationNo,
                        path,
                        description,
                        fileName,
                        vendorno,
                        projectid,
                        projectname});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ImportIPCDocumentAsync(string applicationNo, string path, string description, string fileName, string vendorno, string projectid, string projectname) {
            this.ImportIPCDocumentAsync(applicationNo, path, description, fileName, vendorno, projectid, projectname, null);
        }
        
        /// <remarks/>
        public void ImportIPCDocumentAsync(string applicationNo, string path, string description, string fileName, string vendorno, string projectid, string projectname, object userState) {
            if ((this.ImportIPCDocumentOperationCompleted == null)) {
                this.ImportIPCDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportIPCDocumentOperationCompleted);
            }
            this.InvokeAsync("ImportIPCDocument", new object[] {
                        applicationNo,
                        path,
                        description,
                        fileName,
                        vendorno,
                        projectid,
                        projectname}, this.ImportIPCDocumentOperationCompleted, userState);
        }
        
        private void OnImportIPCDocumentOperationCompleted(object arg) {
            if ((this.ImportIPCDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportIPCDocumentCompleted(this, new ImportIPCDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:UploadCPRExportedForImport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="UploadCPRExportedForImport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool UploadCPRExportedForImport(int documentType, string docNo, string docDesc, string tabID, string region, string filepath, string fname) {
            object[] results = this.Invoke("UploadCPRExportedForImport", new object[] {
                        documentType,
                        docNo,
                        docDesc,
                        tabID,
                        region,
                        filepath,
                        fname});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UploadCPRExportedForImportAsync(int documentType, string docNo, string docDesc, string tabID, string region, string filepath, string fname) {
            this.UploadCPRExportedForImportAsync(documentType, docNo, docDesc, tabID, region, filepath, fname, null);
        }
        
        /// <remarks/>
        public void UploadCPRExportedForImportAsync(int documentType, string docNo, string docDesc, string tabID, string region, string filepath, string fname, object userState) {
            if ((this.UploadCPRExportedForImportOperationCompleted == null)) {
                this.UploadCPRExportedForImportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadCPRExportedForImportOperationCompleted);
            }
            this.InvokeAsync("UploadCPRExportedForImport", new object[] {
                        documentType,
                        docNo,
                        docDesc,
                        tabID,
                        region,
                        filepath,
                        fname}, this.UploadCPRExportedForImportOperationCompleted, userState);
        }
        
        private void OnUploadCPRExportedForImportOperationCompleted(object arg) {
            if ((this.UploadCPRExportedForImportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadCPRExportedForImportCompleted(this, new UploadCPRExportedForImportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGetMaximumAdvanceAmount", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGetMaximumAdvanceAmount_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public decimal FnGetMaximumAdvanceAmount(string contractid) {
            object[] results = this.Invoke("FnGetMaximumAdvanceAmount", new object[] {
                        contractid});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetMaximumAdvanceAmountAsync(string contractid) {
            this.FnGetMaximumAdvanceAmountAsync(contractid, null);
        }
        
        /// <remarks/>
        public void FnGetMaximumAdvanceAmountAsync(string contractid, object userState) {
            if ((this.FnGetMaximumAdvanceAmountOperationCompleted == null)) {
                this.FnGetMaximumAdvanceAmountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetMaximumAdvanceAmountOperationCompleted);
            }
            this.InvokeAsync("FnGetMaximumAdvanceAmount", new object[] {
                        contractid}, this.FnGetMaximumAdvanceAmountOperationCompleted, userState);
        }
        
        private void OnFnGetMaximumAdvanceAmountOperationCompleted(object arg) {
            if ((this.FnGetMaximumAdvanceAmountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetMaximumAdvanceAmountCompleted(this, new FnGetMaximumAdvanceAmountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitEquipmentRepair", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitEquipmentRepair_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitEquipmentRepair(string documentNumber, string vendorno, string projectid) {
            object[] results = this.Invoke("FnSubmitEquipmentRepair", new object[] {
                        documentNumber,
                        vendorno,
                        projectid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitEquipmentRepairAsync(string documentNumber, string vendorno, string projectid) {
            this.FnSubmitEquipmentRepairAsync(documentNumber, vendorno, projectid, null);
        }
        
        /// <remarks/>
        public void FnSubmitEquipmentRepairAsync(string documentNumber, string vendorno, string projectid, object userState) {
            if ((this.FnSubmitEquipmentRepairOperationCompleted == null)) {
                this.FnSubmitEquipmentRepairOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitEquipmentRepairOperationCompleted);
            }
            this.InvokeAsync("FnSubmitEquipmentRepair", new object[] {
                        documentNumber,
                        vendorno,
                        projectid}, this.FnSubmitEquipmentRepairOperationCompleted, userState);
        }
        
        private void OnFnSubmitEquipmentRepairOperationCompleted(object arg) {
            if ((this.FnSubmitEquipmentRepairCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitEquipmentRepairCompleted(this, new FnSubmitEquipmentRepairCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitEquipmentRepairLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitEquipmentRepairLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitEquipmentRepairLine(string documentNumber, string vendorno, string equipmentno, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime maintenancedate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime returndate, string additionalremarks, int entryno) {
            object[] results = this.Invoke("FnSubmitEquipmentRepairLine", new object[] {
                        documentNumber,
                        vendorno,
                        equipmentno,
                        maintenancedate,
                        returndate,
                        additionalremarks,
                        entryno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitEquipmentRepairLineAsync(string documentNumber, string vendorno, string equipmentno, System.DateTime maintenancedate, System.DateTime returndate, string additionalremarks, int entryno) {
            this.FnSubmitEquipmentRepairLineAsync(documentNumber, vendorno, equipmentno, maintenancedate, returndate, additionalremarks, entryno, null);
        }
        
        /// <remarks/>
        public void FnSubmitEquipmentRepairLineAsync(string documentNumber, string vendorno, string equipmentno, System.DateTime maintenancedate, System.DateTime returndate, string additionalremarks, int entryno, object userState) {
            if ((this.FnSubmitEquipmentRepairLineOperationCompleted == null)) {
                this.FnSubmitEquipmentRepairLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitEquipmentRepairLineOperationCompleted);
            }
            this.InvokeAsync("FnSubmitEquipmentRepairLine", new object[] {
                        documentNumber,
                        vendorno,
                        equipmentno,
                        maintenancedate,
                        returndate,
                        additionalremarks,
                        entryno}, this.FnSubmitEquipmentRepairLineOperationCompleted, userState);
        }
        
        private void OnFnSubmitEquipmentRepairLineOperationCompleted(object arg) {
            if ((this.FnSubmitEquipmentRepairLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitEquipmentRepairLineCompleted(this, new FnSubmitEquipmentRepairLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGetLoginType", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGetLoginType_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetLoginType(string vendorNo, string authenticationemail) {
            object[] results = this.Invoke("FnGetLoginType", new object[] {
                        vendorNo,
                        authenticationemail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetLoginTypeAsync(string vendorNo, string authenticationemail) {
            this.FnGetLoginTypeAsync(vendorNo, authenticationemail, null);
        }
        
        /// <remarks/>
        public void FnGetLoginTypeAsync(string vendorNo, string authenticationemail, object userState) {
            if ((this.FnGetLoginTypeOperationCompleted == null)) {
                this.FnGetLoginTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetLoginTypeOperationCompleted);
            }
            this.InvokeAsync("FnGetLoginType", new object[] {
                        vendorNo,
                        authenticationemail}, this.FnGetLoginTypeOperationCompleted, userState);
        }
        
        private void OnFnGetLoginTypeOperationCompleted(object arg) {
            if ((this.FnGetLoginTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetLoginTypeCompleted(this, new FnGetLoginTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGetReportSubmissions", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGetReportSubmissions_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnGetReportSubmissions(ref string varAll, string vendorNo, string projectno, int documenttype) {
            object[] results = this.Invoke("FnGetReportSubmissions", new object[] {
                        varAll,
                        vendorNo,
                        projectno,
                        documenttype});
            varAll = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetReportSubmissionsAsync(string varAll, string vendorNo, string projectno, int documenttype) {
            this.FnGetReportSubmissionsAsync(varAll, vendorNo, projectno, documenttype, null);
        }
        
        /// <remarks/>
        public void FnGetReportSubmissionsAsync(string varAll, string vendorNo, string projectno, int documenttype, object userState) {
            if ((this.FnGetReportSubmissionsOperationCompleted == null)) {
                this.FnGetReportSubmissionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetReportSubmissionsOperationCompleted);
            }
            this.InvokeAsync("FnGetReportSubmissions", new object[] {
                        varAll,
                        vendorNo,
                        projectno,
                        documenttype}, this.FnGetReportSubmissionsOperationCompleted, userState);
        }
        
        private void OnFnGetReportSubmissionsOperationCompleted(object arg) {
            if ((this.FnGetReportSubmissionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetReportSubmissionsCompleted(this, new FnGetReportSubmissionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGetReportSubmissionsDetail" +
            "s", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGetReportSubmissionsDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnGetReportSubmissionsDetails(ref string varAll, string vendorNo, string documentno) {
            object[] results = this.Invoke("FnGetReportSubmissionsDetails", new object[] {
                        varAll,
                        vendorNo,
                        documentno});
            varAll = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetReportSubmissionsDetailsAsync(string varAll, string vendorNo, string documentno) {
            this.FnGetReportSubmissionsDetailsAsync(varAll, vendorNo, documentno, null);
        }
        
        /// <remarks/>
        public void FnGetReportSubmissionsDetailsAsync(string varAll, string vendorNo, string documentno, object userState) {
            if ((this.FnGetReportSubmissionsDetailsOperationCompleted == null)) {
                this.FnGetReportSubmissionsDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetReportSubmissionsDetailsOperationCompleted);
            }
            this.InvokeAsync("FnGetReportSubmissionsDetails", new object[] {
                        varAll,
                        vendorNo,
                        documentno}, this.FnGetReportSubmissionsDetailsOperationCompleted, userState);
        }
        
        private void OnFnGetReportSubmissionsDetailsOperationCompleted(object arg) {
            if ((this.FnGetReportSubmissionsDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetReportSubmissionsDetailsCompleted(this, new FnGetReportSubmissionsDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitReportSubmissions", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitReportSubmissions_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitReportSubmissions(string documentNumber, string vendorno, string projectid, string reporttype) {
            object[] results = this.Invoke("FnSubmitReportSubmissions", new object[] {
                        documentNumber,
                        vendorno,
                        projectid,
                        reporttype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitReportSubmissionsAsync(string documentNumber, string vendorno, string projectid, string reporttype) {
            this.FnSubmitReportSubmissionsAsync(documentNumber, vendorno, projectid, reporttype, null);
        }
        
        /// <remarks/>
        public void FnSubmitReportSubmissionsAsync(string documentNumber, string vendorno, string projectid, string reporttype, object userState) {
            if ((this.FnSubmitReportSubmissionsOperationCompleted == null)) {
                this.FnSubmitReportSubmissionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitReportSubmissionsOperationCompleted);
            }
            this.InvokeAsync("FnSubmitReportSubmissions", new object[] {
                        documentNumber,
                        vendorno,
                        projectid,
                        reporttype}, this.FnSubmitReportSubmissionsOperationCompleted, userState);
        }
        
        private void OnFnSubmitReportSubmissionsOperationCompleted(object arg) {
            if ((this.FnSubmitReportSubmissionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitReportSubmissionsCompleted(this, new FnSubmitReportSubmissionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGetReportTypes", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGetReportTypes_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnGetReportTypes(ref string varAll, int projecttype) {
            object[] results = this.Invoke("FnGetReportTypes", new object[] {
                        varAll,
                        projecttype});
            varAll = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetReportTypesAsync(string varAll, int projecttype) {
            this.FnGetReportTypesAsync(varAll, projecttype, null);
        }
        
        /// <remarks/>
        public void FnGetReportTypesAsync(string varAll, int projecttype, object userState) {
            if ((this.FnGetReportTypesOperationCompleted == null)) {
                this.FnGetReportTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetReportTypesOperationCompleted);
            }
            this.InvokeAsync("FnGetReportTypes", new object[] {
                        varAll,
                        projecttype}, this.FnGetReportTypesOperationCompleted, userState);
        }
        
        private void OnFnGetReportTypesOperationCompleted(object arg) {
            if ((this.FnGetReportTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetReportTypesCompleted(this, new FnGetReportTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGetCostClaimLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGetCostClaimLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnGetCostClaimLines(ref string varAll, string vendorNo, string documentno, int documenttype) {
            object[] results = this.Invoke("FnGetCostClaimLines", new object[] {
                        varAll,
                        vendorNo,
                        documentno,
                        documenttype});
            varAll = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetCostClaimLinesAsync(string varAll, string vendorNo, string documentno, int documenttype) {
            this.FnGetCostClaimLinesAsync(varAll, vendorNo, documentno, documenttype, null);
        }
        
        /// <remarks/>
        public void FnGetCostClaimLinesAsync(string varAll, string vendorNo, string documentno, int documenttype, object userState) {
            if ((this.FnGetCostClaimLinesOperationCompleted == null)) {
                this.FnGetCostClaimLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetCostClaimLinesOperationCompleted);
            }
            this.InvokeAsync("FnGetCostClaimLines", new object[] {
                        varAll,
                        vendorNo,
                        documentno,
                        documenttype}, this.FnGetCostClaimLinesOperationCompleted, userState);
        }
        
        private void OnFnGetCostClaimLinesOperationCompleted(object arg) {
            if ((this.FnGetCostClaimLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetCostClaimLinesCompleted(this, new FnGetCostClaimLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGetQualityManagementPlans", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGetQualityManagementPlans_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnGetQualityManagementPlans(ref string varAll, string vendorNo, string projectno, int documenttype) {
            object[] results = this.Invoke("FnGetQualityManagementPlans", new object[] {
                        varAll,
                        vendorNo,
                        projectno,
                        documenttype});
            varAll = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetQualityManagementPlansAsync(string varAll, string vendorNo, string projectno, int documenttype) {
            this.FnGetQualityManagementPlansAsync(varAll, vendorNo, projectno, documenttype, null);
        }
        
        /// <remarks/>
        public void FnGetQualityManagementPlansAsync(string varAll, string vendorNo, string projectno, int documenttype, object userState) {
            if ((this.FnGetQualityManagementPlansOperationCompleted == null)) {
                this.FnGetQualityManagementPlansOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetQualityManagementPlansOperationCompleted);
            }
            this.InvokeAsync("FnGetQualityManagementPlans", new object[] {
                        varAll,
                        vendorNo,
                        projectno,
                        documenttype}, this.FnGetQualityManagementPlansOperationCompleted, userState);
        }
        
        private void OnFnGetQualityManagementPlansOperationCompleted(object arg) {
            if ((this.FnGetQualityManagementPlansCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetQualityManagementPlansCompleted(this, new FnGetQualityManagementPlansCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitQualityManagementPla" +
            "n", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitQualityManagementPlan_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitQualityManagementPlan(string documentNumber, string vendorno, string projectid) {
            object[] results = this.Invoke("FnSubmitQualityManagementPlan", new object[] {
                        documentNumber,
                        vendorno,
                        projectid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitQualityManagementPlanAsync(string documentNumber, string vendorno, string projectid) {
            this.FnSubmitQualityManagementPlanAsync(documentNumber, vendorno, projectid, null);
        }
        
        /// <remarks/>
        public void FnSubmitQualityManagementPlanAsync(string documentNumber, string vendorno, string projectid, object userState) {
            if ((this.FnSubmitQualityManagementPlanOperationCompleted == null)) {
                this.FnSubmitQualityManagementPlanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitQualityManagementPlanOperationCompleted);
            }
            this.InvokeAsync("FnSubmitQualityManagementPlan", new object[] {
                        documentNumber,
                        vendorno,
                        projectid}, this.FnSubmitQualityManagementPlanOperationCompleted, userState);
        }
        
        private void OnFnSubmitQualityManagementPlanOperationCompleted(object arg) {
            if ((this.FnSubmitQualityManagementPlanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitQualityManagementPlanCompleted(this, new FnSubmitQualityManagementPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitInsuranceForNotifica" +
            "tion", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitInsuranceForNotification_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitInsuranceForNotification(string vendornumber, string documentno) {
            object[] results = this.Invoke("FnSubmitInsuranceForNotification", new object[] {
                        vendornumber,
                        documentno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitInsuranceForNotificationAsync(string vendornumber, string documentno) {
            this.FnSubmitInsuranceForNotificationAsync(vendornumber, documentno, null);
        }
        
        /// <remarks/>
        public void FnSubmitInsuranceForNotificationAsync(string vendornumber, string documentno, object userState) {
            if ((this.FnSubmitInsuranceForNotificationOperationCompleted == null)) {
                this.FnSubmitInsuranceForNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitInsuranceForNotificationOperationCompleted);
            }
            this.InvokeAsync("FnSubmitInsuranceForNotification", new object[] {
                        vendornumber,
                        documentno}, this.FnSubmitInsuranceForNotificationOperationCompleted, userState);
        }
        
        private void OnFnSubmitInsuranceForNotificationOperationCompleted(object arg) {
            if ((this.FnSubmitInsuranceForNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitInsuranceForNotificationCompleted(this, new FnSubmitInsuranceForNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitNotificationtoRERequ" +
            "estForTakingOver", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitNotificationtoRERequestForTakingOver_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitNotificationtoRERequestForTakingOver(string vendornumber, string documentno) {
            object[] results = this.Invoke("FnSubmitNotificationtoRERequestForTakingOver", new object[] {
                        vendornumber,
                        documentno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitNotificationtoRERequestForTakingOverAsync(string vendornumber, string documentno) {
            this.FnSubmitNotificationtoRERequestForTakingOverAsync(vendornumber, documentno, null);
        }
        
        /// <remarks/>
        public void FnSubmitNotificationtoRERequestForTakingOverAsync(string vendornumber, string documentno, object userState) {
            if ((this.FnSubmitNotificationtoRERequestForTakingOverOperationCompleted == null)) {
                this.FnSubmitNotificationtoRERequestForTakingOverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitNotificationtoRERequestForTakingOverOperationCompleted);
            }
            this.InvokeAsync("FnSubmitNotificationtoRERequestForTakingOver", new object[] {
                        vendornumber,
                        documentno}, this.FnSubmitNotificationtoRERequestForTakingOverOperationCompleted, userState);
        }
        
        private void OnFnSubmitNotificationtoRERequestForTakingOverOperationCompleted(object arg) {
            if ((this.FnSubmitNotificationtoRERequestForTakingOverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitNotificationtoRERequestForTakingOverCompleted(this, new FnSubmitNotificationtoRERequestForTakingOverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGetTakingOverSections", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGetTakingOverSections_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnGetTakingOverSections(ref string varAll, string vendorNo, string documentno) {
            object[] results = this.Invoke("FnGetTakingOverSections", new object[] {
                        varAll,
                        vendorNo,
                        documentno});
            varAll = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetTakingOverSectionsAsync(string varAll, string vendorNo, string documentno) {
            this.FnGetTakingOverSectionsAsync(varAll, vendorNo, documentno, null);
        }
        
        /// <remarks/>
        public void FnGetTakingOverSectionsAsync(string varAll, string vendorNo, string documentno, object userState) {
            if ((this.FnGetTakingOverSectionsOperationCompleted == null)) {
                this.FnGetTakingOverSectionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetTakingOverSectionsOperationCompleted);
            }
            this.InvokeAsync("FnGetTakingOverSections", new object[] {
                        varAll,
                        vendorNo,
                        documentno}, this.FnGetTakingOverSectionsOperationCompleted, userState);
        }
        
        private void OnFnGetTakingOverSectionsOperationCompleted(object arg) {
            if ((this.FnGetTakingOverSectionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetTakingOverSectionsCompleted(this, new FnGetTakingOverSectionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGetTakingOverSectionsLines" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGetTakingOverSectionsLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnGetTakingOverSectionsLines(ref string varAll, string vendorNo, string documentno, int lineno) {
            object[] results = this.Invoke("FnGetTakingOverSectionsLines", new object[] {
                        varAll,
                        vendorNo,
                        documentno,
                        lineno});
            varAll = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetTakingOverSectionsLinesAsync(string varAll, string vendorNo, string documentno, int lineno) {
            this.FnGetTakingOverSectionsLinesAsync(varAll, vendorNo, documentno, lineno, null);
        }
        
        /// <remarks/>
        public void FnGetTakingOverSectionsLinesAsync(string varAll, string vendorNo, string documentno, int lineno, object userState) {
            if ((this.FnGetTakingOverSectionsLinesOperationCompleted == null)) {
                this.FnGetTakingOverSectionsLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetTakingOverSectionsLinesOperationCompleted);
            }
            this.InvokeAsync("FnGetTakingOverSectionsLines", new object[] {
                        varAll,
                        vendorNo,
                        documentno,
                        lineno}, this.FnGetTakingOverSectionsLinesOperationCompleted, userState);
        }
        
        private void OnFnGetTakingOverSectionsLinesOperationCompleted(object arg) {
            if ((this.FnGetTakingOverSectionsLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetTakingOverSectionsLinesCompleted(this, new FnGetTakingOverSectionsLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitTakingOverSection", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitTakingOverSection_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitTakingOverSection(string documentNumber, int lineno, int entryno, decimal startchainage, decimal endchainage, string comments) {
            object[] results = this.Invoke("FnSubmitTakingOverSection", new object[] {
                        documentNumber,
                        lineno,
                        entryno,
                        startchainage,
                        endchainage,
                        comments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitTakingOverSectionAsync(string documentNumber, int lineno, int entryno, decimal startchainage, decimal endchainage, string comments) {
            this.FnSubmitTakingOverSectionAsync(documentNumber, lineno, entryno, startchainage, endchainage, comments, null);
        }
        
        /// <remarks/>
        public void FnSubmitTakingOverSectionAsync(string documentNumber, int lineno, int entryno, decimal startchainage, decimal endchainage, string comments, object userState) {
            if ((this.FnSubmitTakingOverSectionOperationCompleted == null)) {
                this.FnSubmitTakingOverSectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitTakingOverSectionOperationCompleted);
            }
            this.InvokeAsync("FnSubmitTakingOverSection", new object[] {
                        documentNumber,
                        lineno,
                        entryno,
                        startchainage,
                        endchainage,
                        comments}, this.FnSubmitTakingOverSectionOperationCompleted, userState);
        }
        
        private void OnFnSubmitTakingOverSectionOperationCompleted(object arg) {
            if ((this.FnSubmitTakingOverSectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitTakingOverSectionCompleted(this, new FnSubmitTakingOverSectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGetInspectionSnagList", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGetInspectionSnagList_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnGetInspectionSnagList(ref string varAll, string vendorNo, string documentno) {
            object[] results = this.Invoke("FnGetInspectionSnagList", new object[] {
                        varAll,
                        vendorNo,
                        documentno});
            varAll = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetInspectionSnagListAsync(string varAll, string vendorNo, string documentno) {
            this.FnGetInspectionSnagListAsync(varAll, vendorNo, documentno, null);
        }
        
        /// <remarks/>
        public void FnGetInspectionSnagListAsync(string varAll, string vendorNo, string documentno, object userState) {
            if ((this.FnGetInspectionSnagListOperationCompleted == null)) {
                this.FnGetInspectionSnagListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetInspectionSnagListOperationCompleted);
            }
            this.InvokeAsync("FnGetInspectionSnagList", new object[] {
                        varAll,
                        vendorNo,
                        documentno}, this.FnGetInspectionSnagListOperationCompleted, userState);
        }
        
        private void OnFnGetInspectionSnagListOperationCompleted(object arg) {
            if ((this.FnGetInspectionSnagListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetInspectionSnagListCompleted(this, new FnGetInspectionSnagListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitInspectionSnagList", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitInspectionSnagList_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitInspectionSnagList(string documentNumber, int planlineno, int itemno, string billitemcode, decimal startchainage, decimal endchainage, string contractorcomments, string additionalcomments, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime duedate, string projectid) {
            object[] results = this.Invoke("FnSubmitInspectionSnagList", new object[] {
                        documentNumber,
                        planlineno,
                        itemno,
                        billitemcode,
                        startchainage,
                        endchainage,
                        contractorcomments,
                        additionalcomments,
                        duedate,
                        projectid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitInspectionSnagListAsync(string documentNumber, int planlineno, int itemno, string billitemcode, decimal startchainage, decimal endchainage, string contractorcomments, string additionalcomments, System.DateTime duedate, string projectid) {
            this.FnSubmitInspectionSnagListAsync(documentNumber, planlineno, itemno, billitemcode, startchainage, endchainage, contractorcomments, additionalcomments, duedate, projectid, null);
        }
        
        /// <remarks/>
        public void FnSubmitInspectionSnagListAsync(string documentNumber, int planlineno, int itemno, string billitemcode, decimal startchainage, decimal endchainage, string contractorcomments, string additionalcomments, System.DateTime duedate, string projectid, object userState) {
            if ((this.FnSubmitInspectionSnagListOperationCompleted == null)) {
                this.FnSubmitInspectionSnagListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitInspectionSnagListOperationCompleted);
            }
            this.InvokeAsync("FnSubmitInspectionSnagList", new object[] {
                        documentNumber,
                        planlineno,
                        itemno,
                        billitemcode,
                        startchainage,
                        endchainage,
                        contractorcomments,
                        additionalcomments,
                        duedate,
                        projectid}, this.FnSubmitInspectionSnagListOperationCompleted, userState);
        }
        
        private void OnFnSubmitInspectionSnagListOperationCompleted(object arg) {
            if ((this.FnSubmitInspectionSnagListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitInspectionSnagListCompleted(this, new FnSubmitInspectionSnagListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGetProjectRoadLinks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGetProjectRoadLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnGetProjectRoadLinks(ref string varAll, string vendorNo, string projectid) {
            object[] results = this.Invoke("FnGetProjectRoadLinks", new object[] {
                        varAll,
                        vendorNo,
                        projectid});
            varAll = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetProjectRoadLinksAsync(string varAll, string vendorNo, string projectid) {
            this.FnGetProjectRoadLinksAsync(varAll, vendorNo, projectid, null);
        }
        
        /// <remarks/>
        public void FnGetProjectRoadLinksAsync(string varAll, string vendorNo, string projectid, object userState) {
            if ((this.FnGetProjectRoadLinksOperationCompleted == null)) {
                this.FnGetProjectRoadLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetProjectRoadLinksOperationCompleted);
            }
            this.InvokeAsync("FnGetProjectRoadLinks", new object[] {
                        varAll,
                        vendorNo,
                        projectid}, this.FnGetProjectRoadLinksOperationCompleted, userState);
        }
        
        private void OnFnGetProjectRoadLinksOperationCompleted(object arg) {
            if ((this.FnGetProjectRoadLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetProjectRoadLinksCompleted(this, new FnGetProjectRoadLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSupplierCommunicationDetai" +
            "ls", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSupplierCommunicationDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSupplierCommunicationDetails(string postacode, string countryofOrigin, string poAddress, string postaCity, string webUrl, string telephoneNo, string buildingNo, string floorNo, string plotNo, string streetorRoad, string faxNo, string vendorNo) {
            object[] results = this.Invoke("FnSupplierCommunicationDetails", new object[] {
                        postacode,
                        countryofOrigin,
                        poAddress,
                        postaCity,
                        webUrl,
                        telephoneNo,
                        buildingNo,
                        floorNo,
                        plotNo,
                        streetorRoad,
                        faxNo,
                        vendorNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSupplierCommunicationDetailsAsync(string postacode, string countryofOrigin, string poAddress, string postaCity, string webUrl, string telephoneNo, string buildingNo, string floorNo, string plotNo, string streetorRoad, string faxNo, string vendorNo) {
            this.FnSupplierCommunicationDetailsAsync(postacode, countryofOrigin, poAddress, postaCity, webUrl, telephoneNo, buildingNo, floorNo, plotNo, streetorRoad, faxNo, vendorNo, null);
        }
        
        /// <remarks/>
        public void FnSupplierCommunicationDetailsAsync(string postacode, string countryofOrigin, string poAddress, string postaCity, string webUrl, string telephoneNo, string buildingNo, string floorNo, string plotNo, string streetorRoad, string faxNo, string vendorNo, object userState) {
            if ((this.FnSupplierCommunicationDetailsOperationCompleted == null)) {
                this.FnSupplierCommunicationDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSupplierCommunicationDetailsOperationCompleted);
            }
            this.InvokeAsync("FnSupplierCommunicationDetails", new object[] {
                        postacode,
                        countryofOrigin,
                        poAddress,
                        postaCity,
                        webUrl,
                        telephoneNo,
                        buildingNo,
                        floorNo,
                        plotNo,
                        streetorRoad,
                        faxNo,
                        vendorNo}, this.FnSupplierCommunicationDetailsOperationCompleted, userState);
        }
        
        private void OnFnSupplierCommunicationDetailsOperationCompleted(object arg) {
            if ((this.FnSupplierCommunicationDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSupplierCommunicationDetailsCompleted(this, new FnSupplierCommunicationDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSupplierBusinessProfile", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSupplierBusinessProfile_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSupplierBusinessProfile(string industryGroup, string companysize, decimal nominalCap, string vision, string mission, string locationAddress, decimal maxbizvalue, string mobileNo, string natureofBiz, string vendorNo) {
            object[] results = this.Invoke("FnSupplierBusinessProfile", new object[] {
                        industryGroup,
                        companysize,
                        nominalCap,
                        vision,
                        mission,
                        locationAddress,
                        maxbizvalue,
                        mobileNo,
                        natureofBiz,
                        vendorNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSupplierBusinessProfileAsync(string industryGroup, string companysize, decimal nominalCap, string vision, string mission, string locationAddress, decimal maxbizvalue, string mobileNo, string natureofBiz, string vendorNo) {
            this.FnSupplierBusinessProfileAsync(industryGroup, companysize, nominalCap, vision, mission, locationAddress, maxbizvalue, mobileNo, natureofBiz, vendorNo, null);
        }
        
        /// <remarks/>
        public void FnSupplierBusinessProfileAsync(string industryGroup, string companysize, decimal nominalCap, string vision, string mission, string locationAddress, decimal maxbizvalue, string mobileNo, string natureofBiz, string vendorNo, object userState) {
            if ((this.FnSupplierBusinessProfileOperationCompleted == null)) {
                this.FnSupplierBusinessProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSupplierBusinessProfileOperationCompleted);
            }
            this.InvokeAsync("FnSupplierBusinessProfile", new object[] {
                        industryGroup,
                        companysize,
                        nominalCap,
                        vision,
                        mission,
                        locationAddress,
                        maxbizvalue,
                        mobileNo,
                        natureofBiz,
                        vendorNo}, this.FnSupplierBusinessProfileOperationCompleted, userState);
        }
        
        private void OnFnSupplierBusinessProfileOperationCompleted(object arg) {
            if ((this.FnSupplierBusinessProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSupplierBusinessProfileCompleted(this, new FnSupplierBusinessProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertRFIResponseResponsib" +
            "ilityCenter", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertRFIResponseResponsibilityCenter_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertRFIResponseResponsibilityCenter(string documentNo, string procurementCategory, string vendorNo, string regionCode, string constituencyCode) {
            object[] results = this.Invoke("FnInsertRFIResponseResponsibilityCenter", new object[] {
                        documentNo,
                        procurementCategory,
                        vendorNo,
                        regionCode,
                        constituencyCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertRFIResponseResponsibilityCenterAsync(string documentNo, string procurementCategory, string vendorNo, string regionCode, string constituencyCode) {
            this.FnInsertRFIResponseResponsibilityCenterAsync(documentNo, procurementCategory, vendorNo, regionCode, constituencyCode, null);
        }
        
        /// <remarks/>
        public void FnInsertRFIResponseResponsibilityCenterAsync(string documentNo, string procurementCategory, string vendorNo, string regionCode, string constituencyCode, object userState) {
            if ((this.FnInsertRFIResponseResponsibilityCenterOperationCompleted == null)) {
                this.FnInsertRFIResponseResponsibilityCenterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertRFIResponseResponsibilityCenterOperationCompleted);
            }
            this.InvokeAsync("FnInsertRFIResponseResponsibilityCenter", new object[] {
                        documentNo,
                        procurementCategory,
                        vendorNo,
                        regionCode,
                        constituencyCode}, this.FnInsertRFIResponseResponsibilityCenterOperationCompleted, userState);
        }
        
        private void OnFnInsertRFIResponseResponsibilityCenterOperationCompleted(object arg) {
            if ((this.FnInsertRFIResponseResponsibilityCenterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertRFIResponseResponsibilityCenterCompleted(this, new FnInsertRFIResponseResponsibilityCenterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnDeleteResponsibilityCenter" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnDeleteResponsibilityCenter_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteResponsibilityCenter(string vendorNo, string regionCode) {
            object[] results = this.Invoke("FnDeleteResponsibilityCenter", new object[] {
                        vendorNo,
                        regionCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteResponsibilityCenterAsync(string vendorNo, string regionCode) {
            this.FnDeleteResponsibilityCenterAsync(vendorNo, regionCode, null);
        }
        
        /// <remarks/>
        public void FnDeleteResponsibilityCenterAsync(string vendorNo, string regionCode, object userState) {
            if ((this.FnDeleteResponsibilityCenterOperationCompleted == null)) {
                this.FnDeleteResponsibilityCenterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteResponsibilityCenterOperationCompleted);
            }
            this.InvokeAsync("FnDeleteResponsibilityCenter", new object[] {
                        vendorNo,
                        regionCode}, this.FnDeleteResponsibilityCenterOperationCompleted, userState);
        }
        
        private void OnFnDeleteResponsibilityCenterOperationCompleted(object arg) {
            if ((this.FnDeleteResponsibilityCenterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteResponsibilityCenterCompleted(this, new FnDeleteResponsibilityCenterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertRFregresponseHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertRFregresponseHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertRFregresponseHeader(string vendorNo, string rfiDocumentNo) {
            object[] results = this.Invoke("FnInsertRFregresponseHeader", new object[] {
                        vendorNo,
                        rfiDocumentNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertRFregresponseHeaderAsync(string vendorNo, string rfiDocumentNo) {
            this.FnInsertRFregresponseHeaderAsync(vendorNo, rfiDocumentNo, null);
        }
        
        /// <remarks/>
        public void FnInsertRFregresponseHeaderAsync(string vendorNo, string rfiDocumentNo, object userState) {
            if ((this.FnInsertRFregresponseHeaderOperationCompleted == null)) {
                this.FnInsertRFregresponseHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertRFregresponseHeaderOperationCompleted);
            }
            this.InvokeAsync("FnInsertRFregresponseHeader", new object[] {
                        vendorNo,
                        rfiDocumentNo}, this.FnInsertRFregresponseHeaderOperationCompleted, userState);
        }
        
        private void OnFnInsertRFregresponseHeaderOperationCompleted(object arg) {
            if ((this.FnInsertRFregresponseHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertRFregresponseHeaderCompleted(this, new FnInsertRFregresponseHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnDelDocument", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnDelDocument_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDelDocument(string vendorNo, int entryNo) {
            object[] results = this.Invoke("FnDelDocument", new object[] {
                        vendorNo,
                        entryNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDelDocumentAsync(string vendorNo, int entryNo) {
            this.FnDelDocumentAsync(vendorNo, entryNo, null);
        }
        
        /// <remarks/>
        public void FnDelDocumentAsync(string vendorNo, int entryNo, object userState) {
            if ((this.FnDelDocumentOperationCompleted == null)) {
                this.FnDelDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDelDocumentOperationCompleted);
            }
            this.InvokeAsync("FnDelDocument", new object[] {
                        vendorNo,
                        entryNo}, this.FnDelDocumentOperationCompleted, userState);
        }
        
        private void OnFnDelDocumentOperationCompleted(object arg) {
            if ((this.FnDelDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDelDocumentCompleted(this, new FnDelDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnDelBidRespDocument", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnDelBidRespDocument_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDelBidRespDocument(string vendorNo, int entryNo) {
            object[] results = this.Invoke("FnDelBidRespDocument", new object[] {
                        vendorNo,
                        entryNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDelBidRespDocumentAsync(string vendorNo, int entryNo) {
            this.FnDelBidRespDocumentAsync(vendorNo, entryNo, null);
        }
        
        /// <remarks/>
        public void FnDelBidRespDocumentAsync(string vendorNo, int entryNo, object userState) {
            if ((this.FnDelBidRespDocumentOperationCompleted == null)) {
                this.FnDelBidRespDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDelBidRespDocumentOperationCompleted);
            }
            this.InvokeAsync("FnDelBidRespDocument", new object[] {
                        vendorNo,
                        entryNo}, this.FnDelBidRespDocumentOperationCompleted, userState);
        }
        
        private void OnFnDelBidRespDocumentOperationCompleted(object arg) {
            if ((this.FnDelBidRespDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDelBidRespDocumentCompleted(this, new FnDelBidRespDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnRegisterVendor", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnRegisterVendor_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnRegisterVendor(string vendorName, string supplierCategory, string country, string postAddress, string postCode, string phoneNumber, string emailAddress, string kraPin, string taxCompliance, string password, string confirmPassword) {
            object[] results = this.Invoke("FnRegisterVendor", new object[] {
                        vendorName,
                        supplierCategory,
                        country,
                        postAddress,
                        postCode,
                        phoneNumber,
                        emailAddress,
                        kraPin,
                        taxCompliance,
                        password,
                        confirmPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnRegisterVendorAsync(string vendorName, string supplierCategory, string country, string postAddress, string postCode, string phoneNumber, string emailAddress, string kraPin, string taxCompliance, string password, string confirmPassword) {
            this.FnRegisterVendorAsync(vendorName, supplierCategory, country, postAddress, postCode, phoneNumber, emailAddress, kraPin, taxCompliance, password, confirmPassword, null);
        }
        
        /// <remarks/>
        public void FnRegisterVendorAsync(string vendorName, string supplierCategory, string country, string postAddress, string postCode, string phoneNumber, string emailAddress, string kraPin, string taxCompliance, string password, string confirmPassword, object userState) {
            if ((this.FnRegisterVendorOperationCompleted == null)) {
                this.FnRegisterVendorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnRegisterVendorOperationCompleted);
            }
            this.InvokeAsync("FnRegisterVendor", new object[] {
                        vendorName,
                        supplierCategory,
                        country,
                        postAddress,
                        postCode,
                        phoneNumber,
                        emailAddress,
                        kraPin,
                        taxCompliance,
                        password,
                        confirmPassword}, this.FnRegisterVendorOperationCompleted, userState);
        }
        
        private void OnFnRegisterVendorOperationCompleted(object arg) {
            if ((this.FnRegisterVendorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnRegisterVendorCompleted(this, new FnRegisterVendorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:ResetPass", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="ResetPass_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ResetPass(string emailAddress) {
            object[] results = this.Invoke("ResetPass", new object[] {
                        emailAddress});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ResetPassAsync(string emailAddress) {
            this.ResetPassAsync(emailAddress, null);
        }
        
        /// <remarks/>
        public void ResetPassAsync(string emailAddress, object userState) {
            if ((this.ResetPassOperationCompleted == null)) {
                this.ResetPassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetPassOperationCompleted);
            }
            this.InvokeAsync("ResetPass", new object[] {
                        emailAddress}, this.ResetPassOperationCompleted, userState);
        }
        
        private void OnResetPassOperationCompleted(object arg) {
            if ((this.ResetPassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetPassCompleted(this, new ResetPassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnApplyPreQualification", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnApplyPreQualification_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnApplyPreQualification(string contactNo, string supplierCategory) {
            object[] results = this.Invoke("FnApplyPreQualification", new object[] {
                        contactNo,
                        supplierCategory});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnApplyPreQualificationAsync(string contactNo, string supplierCategory) {
            this.FnApplyPreQualificationAsync(contactNo, supplierCategory, null);
        }
        
        /// <remarks/>
        public void FnApplyPreQualificationAsync(string contactNo, string supplierCategory, object userState) {
            if ((this.FnApplyPreQualificationOperationCompleted == null)) {
                this.FnApplyPreQualificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnApplyPreQualificationOperationCompleted);
            }
            this.InvokeAsync("FnApplyPreQualification", new object[] {
                        contactNo,
                        supplierCategory}, this.FnApplyPreQualificationOperationCompleted, userState);
        }
        
        private void OnFnApplyPreQualificationOperationCompleted(object arg) {
            if ((this.FnApplyPreQualificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnApplyPreQualificationCompleted(this, new FnApplyPreQualificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnApplyPreQualificationsDeta" +
            "ils", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnApplyPreQualificationsDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnApplyPreQualificationsDetails(string contactNo, string supplierCategory) {
            object[] results = this.Invoke("FnApplyPreQualificationsDetails", new object[] {
                        contactNo,
                        supplierCategory});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnApplyPreQualificationsDetailsAsync(string contactNo, string supplierCategory) {
            this.FnApplyPreQualificationsDetailsAsync(contactNo, supplierCategory, null);
        }
        
        /// <remarks/>
        public void FnApplyPreQualificationsDetailsAsync(string contactNo, string supplierCategory, object userState) {
            if ((this.FnApplyPreQualificationsDetailsOperationCompleted == null)) {
                this.FnApplyPreQualificationsDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnApplyPreQualificationsDetailsOperationCompleted);
            }
            this.InvokeAsync("FnApplyPreQualificationsDetails", new object[] {
                        contactNo,
                        supplierCategory}, this.FnApplyPreQualificationsDetailsOperationCompleted, userState);
        }
        
        private void OnFnApplyPreQualificationsDetailsOperationCompleted(object arg) {
            if ((this.FnApplyPreQualificationsDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnApplyPreQualificationsDetailsCompleted(this, new FnApplyPreQualificationsDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:GetCurrentYear", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="GetCurrentYear_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetCurrentYear() {
            object[] results = this.Invoke("GetCurrentYear", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentYearAsync() {
            this.GetCurrentYearAsync(null);
        }
        
        /// <remarks/>
        public void GetCurrentYearAsync(object userState) {
            if ((this.GetCurrentYearOperationCompleted == null)) {
                this.GetCurrentYearOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentYearOperationCompleted);
            }
            this.InvokeAsync("GetCurrentYear", new object[0], this.GetCurrentYearOperationCompleted, userState);
        }
        
        private void OnGetCurrentYearOperationCompleted(object arg) {
            if ((this.GetCurrentYearCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentYearCompleted(this, new GetCurrentYearCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnApplyRFQ", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnApplyRFQ_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnApplyRFQ(string contactNo, decimal quantity, decimal amount, string rfqNo, string email, string vendorNo) {
            object[] results = this.Invoke("FnApplyRFQ", new object[] {
                        contactNo,
                        quantity,
                        amount,
                        rfqNo,
                        email,
                        vendorNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnApplyRFQAsync(string contactNo, decimal quantity, decimal amount, string rfqNo, string email, string vendorNo) {
            this.FnApplyRFQAsync(contactNo, quantity, amount, rfqNo, email, vendorNo, null);
        }
        
        /// <remarks/>
        public void FnApplyRFQAsync(string contactNo, decimal quantity, decimal amount, string rfqNo, string email, string vendorNo, object userState) {
            if ((this.FnApplyRFQOperationCompleted == null)) {
                this.FnApplyRFQOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnApplyRFQOperationCompleted);
            }
            this.InvokeAsync("FnApplyRFQ", new object[] {
                        contactNo,
                        quantity,
                        amount,
                        rfqNo,
                        email,
                        vendorNo}, this.FnApplyRFQOperationCompleted, userState);
        }
        
        private void OnFnApplyRFQOperationCompleted(object arg) {
            if ((this.FnApplyRFQCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnApplyRFQCompleted(this, new FnApplyRFQCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:ApplyRFQOLD", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="ApplyRFQOLD_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ApplyRFQOLD(string contactNo, string password, decimal quantity, decimal amount, string rfqNo) {
            object[] results = this.Invoke("ApplyRFQOLD", new object[] {
                        contactNo,
                        password,
                        quantity,
                        amount,
                        rfqNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApplyRFQOLDAsync(string contactNo, string password, decimal quantity, decimal amount, string rfqNo) {
            this.ApplyRFQOLDAsync(contactNo, password, quantity, amount, rfqNo, null);
        }
        
        /// <remarks/>
        public void ApplyRFQOLDAsync(string contactNo, string password, decimal quantity, decimal amount, string rfqNo, object userState) {
            if ((this.ApplyRFQOLDOperationCompleted == null)) {
                this.ApplyRFQOLDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyRFQOLDOperationCompleted);
            }
            this.InvokeAsync("ApplyRFQOLD", new object[] {
                        contactNo,
                        password,
                        quantity,
                        amount,
                        rfqNo}, this.ApplyRFQOLDOperationCompleted, userState);
        }
        
        private void OnApplyRFQOLDOperationCompleted(object arg) {
            if ((this.ApplyRFQOLDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyRFQOLDCompleted(this, new ApplyRFQOLDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:SendEmail", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="SendEmail_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool SendEmail(string recipient, string title, string message) {
            object[] results = this.Invoke("SendEmail", new object[] {
                        recipient,
                        title,
                        message});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendEmailAsync(string recipient, string title, string message) {
            this.SendEmailAsync(recipient, title, message, null);
        }
        
        /// <remarks/>
        public void SendEmailAsync(string recipient, string title, string message, object userState) {
            if ((this.SendEmailOperationCompleted == null)) {
                this.SendEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendEmailOperationCompleted);
            }
            this.InvokeAsync("SendEmail", new object[] {
                        recipient,
                        title,
                        message}, this.SendEmailOperationCompleted, userState);
        }
        
        private void OnSendEmailOperationCompleted(object arg) {
            if ((this.SendEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendEmailCompleted(this, new SendEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnAddVendorSpecialGroupDetai" +
            "ls", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnAddVendorSpecialGroupDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAddVendorSpecialGroupDetails(string vendorNo, string agpocertno, string registeredspecialgroup, string productservicecategory, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime certeffectivedate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime certexpirydate) {
            object[] results = this.Invoke("FnAddVendorSpecialGroupDetails", new object[] {
                        vendorNo,
                        agpocertno,
                        registeredspecialgroup,
                        productservicecategory,
                        certeffectivedate,
                        certexpirydate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAddVendorSpecialGroupDetailsAsync(string vendorNo, string agpocertno, string registeredspecialgroup, string productservicecategory, System.DateTime certeffectivedate, System.DateTime certexpirydate) {
            this.FnAddVendorSpecialGroupDetailsAsync(vendorNo, agpocertno, registeredspecialgroup, productservicecategory, certeffectivedate, certexpirydate, null);
        }
        
        /// <remarks/>
        public void FnAddVendorSpecialGroupDetailsAsync(string vendorNo, string agpocertno, string registeredspecialgroup, string productservicecategory, System.DateTime certeffectivedate, System.DateTime certexpirydate, object userState) {
            if ((this.FnAddVendorSpecialGroupDetailsOperationCompleted == null)) {
                this.FnAddVendorSpecialGroupDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddVendorSpecialGroupDetailsOperationCompleted);
            }
            this.InvokeAsync("FnAddVendorSpecialGroupDetails", new object[] {
                        vendorNo,
                        agpocertno,
                        registeredspecialgroup,
                        productservicecategory,
                        certeffectivedate,
                        certexpirydate}, this.FnAddVendorSpecialGroupDetailsOperationCompleted, userState);
        }
        
        private void OnFnAddVendorSpecialGroupDetailsOperationCompleted(object arg) {
            if ((this.FnAddVendorSpecialGroupDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddVendorSpecialGroupDetailsCompleted(this, new FnAddVendorSpecialGroupDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:ActivateAccount", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="ActivateAccount_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ActivateAccount(string userCode, string key, string password, string confirmpassword) {
            object[] results = this.Invoke("ActivateAccount", new object[] {
                        userCode,
                        key,
                        password,
                        confirmpassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ActivateAccountAsync(string userCode, string key, string password, string confirmpassword) {
            this.ActivateAccountAsync(userCode, key, password, confirmpassword, null);
        }
        
        /// <remarks/>
        public void ActivateAccountAsync(string userCode, string key, string password, string confirmpassword, object userState) {
            if ((this.ActivateAccountOperationCompleted == null)) {
                this.ActivateAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnActivateAccountOperationCompleted);
            }
            this.InvokeAsync("ActivateAccount", new object[] {
                        userCode,
                        key,
                        password,
                        confirmpassword}, this.ActivateAccountOperationCompleted, userState);
        }
        
        private void OnActivateAccountOperationCompleted(object arg) {
            if ((this.ActivateAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ActivateAccountCompleted(this, new ActivateAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnAddDirectors", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnAddDirectors_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAddDirectors(string contactNo, string directorFullname) {
            object[] results = this.Invoke("FnAddDirectors", new object[] {
                        contactNo,
                        directorFullname});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAddDirectorsAsync(string contactNo, string directorFullname) {
            this.FnAddDirectorsAsync(contactNo, directorFullname, null);
        }
        
        /// <remarks/>
        public void FnAddDirectorsAsync(string contactNo, string directorFullname, object userState) {
            if ((this.FnAddDirectorsOperationCompleted == null)) {
                this.FnAddDirectorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddDirectorsOperationCompleted);
            }
            this.InvokeAsync("FnAddDirectors", new object[] {
                        contactNo,
                        directorFullname}, this.FnAddDirectorsOperationCompleted, userState);
        }
        
        private void OnFnAddDirectorsOperationCompleted(object arg) {
            if ((this.FnAddDirectorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddDirectorsCompleted(this, new FnAddDirectorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnApplyforTender", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnApplyforTender_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnApplyforTender(string tenderNo, string vendorNo, string email) {
            object[] results = this.Invoke("FnApplyforTender", new object[] {
                        tenderNo,
                        vendorNo,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnApplyforTenderAsync(string tenderNo, string vendorNo, string email) {
            this.FnApplyforTenderAsync(tenderNo, vendorNo, email, null);
        }
        
        /// <remarks/>
        public void FnApplyforTenderAsync(string tenderNo, string vendorNo, string email, object userState) {
            if ((this.FnApplyforTenderOperationCompleted == null)) {
                this.FnApplyforTenderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnApplyforTenderOperationCompleted);
            }
            this.InvokeAsync("FnApplyforTender", new object[] {
                        tenderNo,
                        vendorNo,
                        email}, this.FnApplyforTenderOperationCompleted, userState);
        }
        
        private void OnFnApplyforTenderOperationCompleted(object arg) {
            if ((this.FnApplyforTenderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnApplyforTenderCompleted(this, new FnApplyforTenderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnCountOpenTenders", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnCountOpenTenders_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnCountOpenTenders() {
            object[] results = this.Invoke("FnCountOpenTenders", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnCountOpenTendersAsync() {
            this.FnCountOpenTendersAsync(null);
        }
        
        /// <remarks/>
        public void FnCountOpenTendersAsync(object userState) {
            if ((this.FnCountOpenTendersOperationCompleted == null)) {
                this.FnCountOpenTendersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCountOpenTendersOperationCompleted);
            }
            this.InvokeAsync("FnCountOpenTenders", new object[0], this.FnCountOpenTendersOperationCompleted, userState);
        }
        
        private void OnFnCountOpenTendersOperationCompleted(object arg) {
            if ((this.FnCountOpenTendersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCountOpenTendersCompleted(this, new FnCountOpenTendersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnCountAppliedTenders", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnCountAppliedTenders_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnCountAppliedTenders(string vendorNo) {
            object[] results = this.Invoke("FnCountAppliedTenders", new object[] {
                        vendorNo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnCountAppliedTendersAsync(string vendorNo) {
            this.FnCountAppliedTendersAsync(vendorNo, null);
        }
        
        /// <remarks/>
        public void FnCountAppliedTendersAsync(string vendorNo, object userState) {
            if ((this.FnCountAppliedTendersOperationCompleted == null)) {
                this.FnCountAppliedTendersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCountAppliedTendersOperationCompleted);
            }
            this.InvokeAsync("FnCountAppliedTenders", new object[] {
                        vendorNo}, this.FnCountAppliedTendersOperationCompleted, userState);
        }
        
        private void OnFnCountAppliedTendersOperationCompleted(object arg) {
            if ((this.FnCountAppliedTendersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCountAppliedTendersCompleted(this, new FnCountAppliedTendersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnCountTendersAwarded", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnCountTendersAwarded_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnCountTendersAwarded(string vendorNo) {
            object[] results = this.Invoke("FnCountTendersAwarded", new object[] {
                        vendorNo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnCountTendersAwardedAsync(string vendorNo) {
            this.FnCountTendersAwardedAsync(vendorNo, null);
        }
        
        /// <remarks/>
        public void FnCountTendersAwardedAsync(string vendorNo, object userState) {
            if ((this.FnCountTendersAwardedOperationCompleted == null)) {
                this.FnCountTendersAwardedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCountTendersAwardedOperationCompleted);
            }
            this.InvokeAsync("FnCountTendersAwarded", new object[] {
                        vendorNo}, this.FnCountTendersAwardedOperationCompleted, userState);
        }
        
        private void OnFnCountTendersAwardedOperationCompleted(object arg) {
            if ((this.FnCountTendersAwardedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCountTendersAwardedCompleted(this, new FnCountTendersAwardedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnApplyforOpenTender", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnApplyforOpenTender_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnApplyforOpenTender(string tenderNo, decimal amount, string contactNo, string email) {
            object[] results = this.Invoke("FnApplyforOpenTender", new object[] {
                        tenderNo,
                        amount,
                        contactNo,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnApplyforOpenTenderAsync(string tenderNo, decimal amount, string contactNo, string email) {
            this.FnApplyforOpenTenderAsync(tenderNo, amount, contactNo, email, null);
        }
        
        /// <remarks/>
        public void FnApplyforOpenTenderAsync(string tenderNo, decimal amount, string contactNo, string email, object userState) {
            if ((this.FnApplyforOpenTenderOperationCompleted == null)) {
                this.FnApplyforOpenTenderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnApplyforOpenTenderOperationCompleted);
            }
            this.InvokeAsync("FnApplyforOpenTender", new object[] {
                        tenderNo,
                        amount,
                        contactNo,
                        email}, this.FnApplyforOpenTenderOperationCompleted, userState);
        }
        
        private void OnFnApplyforOpenTenderOperationCompleted(object arg) {
            if ((this.FnApplyforOpenTenderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnApplyforOpenTenderCompleted(this, new FnApplyforOpenTenderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertBlog", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertBlog_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertBlog(string blogTitle, string blogBody, string dirNo, string dirName) {
            object[] results = this.Invoke("FnInsertBlog", new object[] {
                        blogTitle,
                        blogBody,
                        dirNo,
                        dirName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertBlogAsync(string blogTitle, string blogBody, string dirNo, string dirName) {
            this.FnInsertBlogAsync(blogTitle, blogBody, dirNo, dirName, null);
        }
        
        /// <remarks/>
        public void FnInsertBlogAsync(string blogTitle, string blogBody, string dirNo, string dirName, object userState) {
            if ((this.FnInsertBlogOperationCompleted == null)) {
                this.FnInsertBlogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertBlogOperationCompleted);
            }
            this.InvokeAsync("FnInsertBlog", new object[] {
                        blogTitle,
                        blogBody,
                        dirNo,
                        dirName}, this.FnInsertBlogOperationCompleted, userState);
        }
        
        private void OnFnInsertBlogOperationCompleted(object arg) {
            if ((this.FnInsertBlogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertBlogCompleted(this, new FnInsertBlogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertBlogReply", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertBlogReply_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertBlogReply(string blogReply, string dirNo, string dirName, int blogId) {
            object[] results = this.Invoke("FnInsertBlogReply", new object[] {
                        blogReply,
                        dirNo,
                        dirName,
                        blogId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertBlogReplyAsync(string blogReply, string dirNo, string dirName, int blogId) {
            this.FnInsertBlogReplyAsync(blogReply, dirNo, dirName, blogId, null);
        }
        
        /// <remarks/>
        public void FnInsertBlogReplyAsync(string blogReply, string dirNo, string dirName, int blogId, object userState) {
            if ((this.FnInsertBlogReplyOperationCompleted == null)) {
                this.FnInsertBlogReplyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertBlogReplyOperationCompleted);
            }
            this.InvokeAsync("FnInsertBlogReply", new object[] {
                        blogReply,
                        dirNo,
                        dirName,
                        blogId}, this.FnInsertBlogReplyOperationCompleted, userState);
        }
        
        private void OnFnInsertBlogReplyOperationCompleted(object arg) {
            if ((this.FnInsertBlogReplyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertBlogReplyCompleted(this, new FnInsertBlogReplyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnChangePassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnChangePassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnChangePassword(string emailaddress, string currentPassword, string newPassword, string confirmNewPassword) {
            object[] results = this.Invoke("FnChangePassword", new object[] {
                        emailaddress,
                        currentPassword,
                        newPassword,
                        confirmNewPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnChangePasswordAsync(string emailaddress, string currentPassword, string newPassword, string confirmNewPassword) {
            this.FnChangePasswordAsync(emailaddress, currentPassword, newPassword, confirmNewPassword, null);
        }
        
        /// <remarks/>
        public void FnChangePasswordAsync(string emailaddress, string currentPassword, string newPassword, string confirmNewPassword, object userState) {
            if ((this.FnChangePasswordOperationCompleted == null)) {
                this.FnChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("FnChangePassword", new object[] {
                        emailaddress,
                        currentPassword,
                        newPassword,
                        confirmNewPassword}, this.FnChangePasswordOperationCompleted, userState);
        }
        
        private void OnFnChangePasswordOperationCompleted(object arg) {
            if ((this.FnChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnChangePasswordCompleted(this, new FnChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnEditProfile", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnEditProfile_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnEditProfile(string email, string fullname, string kraPin, string taxtPin, string phoneNo) {
            object[] results = this.Invoke("FnEditProfile", new object[] {
                        email,
                        fullname,
                        kraPin,
                        taxtPin,
                        phoneNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnEditProfileAsync(string email, string fullname, string kraPin, string taxtPin, string phoneNo) {
            this.FnEditProfileAsync(email, fullname, kraPin, taxtPin, phoneNo, null);
        }
        
        /// <remarks/>
        public void FnEditProfileAsync(string email, string fullname, string kraPin, string taxtPin, string phoneNo, object userState) {
            if ((this.FnEditProfileOperationCompleted == null)) {
                this.FnEditProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEditProfileOperationCompleted);
            }
            this.InvokeAsync("FnEditProfile", new object[] {
                        email,
                        fullname,
                        kraPin,
                        taxtPin,
                        phoneNo}, this.FnEditProfileOperationCompleted, userState);
        }
        
        private void OnFnEditProfileOperationCompleted(object arg) {
            if ((this.FnEditProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEditProfileCompleted(this, new FnEditProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnResetPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnResetPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnResetPassword(string emailaddress) {
            object[] results = this.Invoke("FnResetPassword", new object[] {
                        emailaddress});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnResetPasswordAsync(string emailaddress) {
            this.FnResetPasswordAsync(emailaddress, null);
        }
        
        /// <remarks/>
        public void FnResetPasswordAsync(string emailaddress, object userState) {
            if ((this.FnResetPasswordOperationCompleted == null)) {
                this.FnResetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnResetPasswordOperationCompleted);
            }
            this.InvokeAsync("FnResetPassword", new object[] {
                        emailaddress}, this.FnResetPasswordOperationCompleted, userState);
        }
        
        private void OnFnResetPasswordOperationCompleted(object arg) {
            if ((this.FnResetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnResetPasswordCompleted(this, new FnResetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGenerateVendorstatement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGenerateVendorstatement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateVendorstatement(string vendorNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate) {
            object[] results = this.Invoke("FnGenerateVendorstatement", new object[] {
                        vendorNo,
                        startDate,
                        endDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateVendorstatementAsync(string vendorNo, System.DateTime startDate, System.DateTime endDate) {
            this.FnGenerateVendorstatementAsync(vendorNo, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void FnGenerateVendorstatementAsync(string vendorNo, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.FnGenerateVendorstatementOperationCompleted == null)) {
                this.FnGenerateVendorstatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateVendorstatementOperationCompleted);
            }
            this.InvokeAsync("FnGenerateVendorstatement", new object[] {
                        vendorNo,
                        startDate,
                        endDate}, this.FnGenerateVendorstatementOperationCompleted, userState);
        }
        
        private void OnFnGenerateVendorstatementOperationCompleted(object arg) {
            if ((this.FnGenerateVendorstatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateVendorstatementCompleted(this, new FnGenerateVendorstatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGenerateRfQDocument", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGenerateRfQDocument_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateRfQDocument(string vendorNo, string rfQNo) {
            object[] results = this.Invoke("FnGenerateRfQDocument", new object[] {
                        vendorNo,
                        rfQNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateRfQDocumentAsync(string vendorNo, string rfQNo) {
            this.FnGenerateRfQDocumentAsync(vendorNo, rfQNo, null);
        }
        
        /// <remarks/>
        public void FnGenerateRfQDocumentAsync(string vendorNo, string rfQNo, object userState) {
            if ((this.FnGenerateRfQDocumentOperationCompleted == null)) {
                this.FnGenerateRfQDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateRfQDocumentOperationCompleted);
            }
            this.InvokeAsync("FnGenerateRfQDocument", new object[] {
                        vendorNo,
                        rfQNo}, this.FnGenerateRfQDocumentOperationCompleted, userState);
        }
        
        private void OnFnGenerateRfQDocumentOperationCompleted(object arg) {
            if ((this.FnGenerateRfQDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateRfQDocumentCompleted(this, new FnGenerateRfQDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnAddPurchaseReqLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnAddPurchaseReqLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAddPurchaseReqLine(string reqNo, string itemNo, decimal quantity, decimal unitPrice, string vendorNo, int lineNo, int type) {
            object[] results = this.Invoke("FnAddPurchaseReqLine", new object[] {
                        reqNo,
                        itemNo,
                        quantity,
                        unitPrice,
                        vendorNo,
                        lineNo,
                        type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAddPurchaseReqLineAsync(string reqNo, string itemNo, decimal quantity, decimal unitPrice, string vendorNo, int lineNo, int type) {
            this.FnAddPurchaseReqLineAsync(reqNo, itemNo, quantity, unitPrice, vendorNo, lineNo, type, null);
        }
        
        /// <remarks/>
        public void FnAddPurchaseReqLineAsync(string reqNo, string itemNo, decimal quantity, decimal unitPrice, string vendorNo, int lineNo, int type, object userState) {
            if ((this.FnAddPurchaseReqLineOperationCompleted == null)) {
                this.FnAddPurchaseReqLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddPurchaseReqLineOperationCompleted);
            }
            this.InvokeAsync("FnAddPurchaseReqLine", new object[] {
                        reqNo,
                        itemNo,
                        quantity,
                        unitPrice,
                        vendorNo,
                        lineNo,
                        type}, this.FnAddPurchaseReqLineOperationCompleted, userState);
        }
        
        private void OnFnAddPurchaseReqLineOperationCompleted(object arg) {
            if ((this.FnAddPurchaseReqLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddPurchaseReqLineCompleted(this, new FnAddPurchaseReqLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnReqforRegistration", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnReqforRegistration_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnReqforRegistration(string registeredBusinessName, string phoneNumber, string emailAddress, string taxRegkraPin, string contactName) {
            object[] results = this.Invoke("FnReqforRegistration", new object[] {
                        registeredBusinessName,
                        phoneNumber,
                        emailAddress,
                        taxRegkraPin,
                        contactName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnReqforRegistrationAsync(string registeredBusinessName, string phoneNumber, string emailAddress, string taxRegkraPin, string contactName) {
            this.FnReqforRegistrationAsync(registeredBusinessName, phoneNumber, emailAddress, taxRegkraPin, contactName, null);
        }
        
        /// <remarks/>
        public void FnReqforRegistrationAsync(string registeredBusinessName, string phoneNumber, string emailAddress, string taxRegkraPin, string contactName, object userState) {
            if ((this.FnReqforRegistrationOperationCompleted == null)) {
                this.FnReqforRegistrationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnReqforRegistrationOperationCompleted);
            }
            this.InvokeAsync("FnReqforRegistration", new object[] {
                        registeredBusinessName,
                        phoneNumber,
                        emailAddress,
                        taxRegkraPin,
                        contactName}, this.FnReqforRegistrationOperationCompleted, userState);
        }
        
        private void OnFnReqforRegistrationOperationCompleted(object arg) {
            if ((this.FnReqforRegistrationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnReqforRegistrationCompleted(this, new FnReqforRegistrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnBLOBRfQDocument", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnBLOBRfQDocument_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnBLOBRfQDocument(string vendorname, string rFQNo, ref string bigText) {
            object[] results = this.Invoke("FnBLOBRfQDocument", new object[] {
                        vendorname,
                        rFQNo,
                        bigText});
            bigText = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnBLOBRfQDocumentAsync(string vendorname, string rFQNo, string bigText) {
            this.FnBLOBRfQDocumentAsync(vendorname, rFQNo, bigText, null);
        }
        
        /// <remarks/>
        public void FnBLOBRfQDocumentAsync(string vendorname, string rFQNo, string bigText, object userState) {
            if ((this.FnBLOBRfQDocumentOperationCompleted == null)) {
                this.FnBLOBRfQDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnBLOBRfQDocumentOperationCompleted);
            }
            this.InvokeAsync("FnBLOBRfQDocument", new object[] {
                        vendorname,
                        rFQNo,
                        bigText}, this.FnBLOBRfQDocumentOperationCompleted, userState);
        }
        
        private void OnFnBLOBRfQDocumentOperationCompleted(object arg) {
            if ((this.FnBLOBRfQDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnBLOBRfQDocumentCompleted(this, new FnBLOBRfQDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnDownloadRfQPTDoc", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnDownloadRfQPTDoc_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnDownloadRfQPTDoc() {
            this.Invoke("FnDownloadRfQPTDoc", new object[0]);
        }
        
        /// <remarks/>
        public void FnDownloadRfQPTDocAsync() {
            this.FnDownloadRfQPTDocAsync(null);
        }
        
        /// <remarks/>
        public void FnDownloadRfQPTDocAsync(object userState) {
            if ((this.FnDownloadRfQPTDocOperationCompleted == null)) {
                this.FnDownloadRfQPTDocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDownloadRfQPTDocOperationCompleted);
            }
            this.InvokeAsync("FnDownloadRfQPTDoc", new object[0], this.FnDownloadRfQPTDocOperationCompleted, userState);
        }
        
        private void OnFnDownloadRfQPTDocOperationCompleted(object arg) {
            if ((this.FnDownloadRfQPTDocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDownloadRfQPTDocCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSupplierRegistration", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSupplierRegistration_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSupplierRegistration(string businessType, int vendorType, int ownershipType, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateofIncorporation, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateofOps, string languageCode, string vendorNo, string certofIncopNo, string agpocertno, string registeredspecialgroup, string productservicecategory, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime certeffectivedate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime certexpirydate, bool haveagpo) {
            object[] results = this.Invoke("FnSupplierRegistration", new object[] {
                        businessType,
                        vendorType,
                        ownershipType,
                        dateofIncorporation,
                        dateofOps,
                        languageCode,
                        vendorNo,
                        certofIncopNo,
                        agpocertno,
                        registeredspecialgroup,
                        productservicecategory,
                        certeffectivedate,
                        certexpirydate,
                        haveagpo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSupplierRegistrationAsync(string businessType, int vendorType, int ownershipType, System.DateTime dateofIncorporation, System.DateTime dateofOps, string languageCode, string vendorNo, string certofIncopNo, string agpocertno, string registeredspecialgroup, string productservicecategory, System.DateTime certeffectivedate, System.DateTime certexpirydate, bool haveagpo) {
            this.FnSupplierRegistrationAsync(businessType, vendorType, ownershipType, dateofIncorporation, dateofOps, languageCode, vendorNo, certofIncopNo, agpocertno, registeredspecialgroup, productservicecategory, certeffectivedate, certexpirydate, haveagpo, null);
        }
        
        /// <remarks/>
        public void FnSupplierRegistrationAsync(string businessType, int vendorType, int ownershipType, System.DateTime dateofIncorporation, System.DateTime dateofOps, string languageCode, string vendorNo, string certofIncopNo, string agpocertno, string registeredspecialgroup, string productservicecategory, System.DateTime certeffectivedate, System.DateTime certexpirydate, bool haveagpo, object userState) {
            if ((this.FnSupplierRegistrationOperationCompleted == null)) {
                this.FnSupplierRegistrationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSupplierRegistrationOperationCompleted);
            }
            this.InvokeAsync("FnSupplierRegistration", new object[] {
                        businessType,
                        vendorType,
                        ownershipType,
                        dateofIncorporation,
                        dateofOps,
                        languageCode,
                        vendorNo,
                        certofIncopNo,
                        agpocertno,
                        registeredspecialgroup,
                        productservicecategory,
                        certeffectivedate,
                        certexpirydate,
                        haveagpo}, this.FnSupplierRegistrationOperationCompleted, userState);
        }
        
        private void OnFnSupplierRegistrationOperationCompleted(object arg) {
            if ((this.FnSupplierRegistrationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSupplierRegistrationCompleted(this, new FnSupplierRegistrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSupplierGeneralDetailsRegi" +
            "stration", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSupplierGeneralDetailsRegistration_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSupplierGeneralDetailsRegistration(string businessname, string vatregistration, int ownershipType, int vendortype, string businesstype, string certificatenumber, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateofIncorporation, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateofoperation, string languageCode, string vision, string mision, string vendorNo) {
            object[] results = this.Invoke("FnSupplierGeneralDetailsRegistration", new object[] {
                        businessname,
                        vatregistration,
                        ownershipType,
                        vendortype,
                        businesstype,
                        certificatenumber,
                        dateofIncorporation,
                        dateofoperation,
                        languageCode,
                        vision,
                        mision,
                        vendorNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSupplierGeneralDetailsRegistrationAsync(string businessname, string vatregistration, int ownershipType, int vendortype, string businesstype, string certificatenumber, System.DateTime dateofIncorporation, System.DateTime dateofoperation, string languageCode, string vision, string mision, string vendorNo) {
            this.FnSupplierGeneralDetailsRegistrationAsync(businessname, vatregistration, ownershipType, vendortype, businesstype, certificatenumber, dateofIncorporation, dateofoperation, languageCode, vision, mision, vendorNo, null);
        }
        
        /// <remarks/>
        public void FnSupplierGeneralDetailsRegistrationAsync(string businessname, string vatregistration, int ownershipType, int vendortype, string businesstype, string certificatenumber, System.DateTime dateofIncorporation, System.DateTime dateofoperation, string languageCode, string vision, string mision, string vendorNo, object userState) {
            if ((this.FnSupplierGeneralDetailsRegistrationOperationCompleted == null)) {
                this.FnSupplierGeneralDetailsRegistrationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSupplierGeneralDetailsRegistrationOperationCompleted);
            }
            this.InvokeAsync("FnSupplierGeneralDetailsRegistration", new object[] {
                        businessname,
                        vatregistration,
                        ownershipType,
                        vendortype,
                        businesstype,
                        certificatenumber,
                        dateofIncorporation,
                        dateofoperation,
                        languageCode,
                        vision,
                        mision,
                        vendorNo}, this.FnSupplierGeneralDetailsRegistrationOperationCompleted, userState);
        }
        
        private void OnFnSupplierGeneralDetailsRegistrationOperationCompleted(object arg) {
            if ((this.FnSupplierGeneralDetailsRegistrationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSupplierGeneralDetailsRegistrationCompleted(this, new FnSupplierGeneralDetailsRegistrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertBank", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertBank_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertBank(string vendorNo, string bankCode, string bankName, string currencyCode, string bankAccountNo) {
            object[] results = this.Invoke("FnInsertBank", new object[] {
                        vendorNo,
                        bankCode,
                        bankName,
                        currencyCode,
                        bankAccountNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertBankAsync(string vendorNo, string bankCode, string bankName, string currencyCode, string bankAccountNo) {
            this.FnInsertBankAsync(vendorNo, bankCode, bankName, currencyCode, bankAccountNo, null);
        }
        
        /// <remarks/>
        public void FnInsertBankAsync(string vendorNo, string bankCode, string bankName, string currencyCode, string bankAccountNo, object userState) {
            if ((this.FnInsertBankOperationCompleted == null)) {
                this.FnInsertBankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertBankOperationCompleted);
            }
            this.InvokeAsync("FnInsertBank", new object[] {
                        vendorNo,
                        bankCode,
                        bankName,
                        currencyCode,
                        bankAccountNo}, this.FnInsertBankOperationCompleted, userState);
        }
        
        private void OnFnInsertBankOperationCompleted(object arg) {
            if ((this.FnInsertBankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertBankCompleted(this, new FnInsertBankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertBankDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertBankDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertBankDetails(string vendorNo, string bankCode, string bankName, string currencyCode, string bankAccountNo, string bankbranchno, string phonenumber, string country, string postcode) {
            object[] results = this.Invoke("FnInsertBankDetails", new object[] {
                        vendorNo,
                        bankCode,
                        bankName,
                        currencyCode,
                        bankAccountNo,
                        bankbranchno,
                        phonenumber,
                        country,
                        postcode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertBankDetailsAsync(string vendorNo, string bankCode, string bankName, string currencyCode, string bankAccountNo, string bankbranchno, string phonenumber, string country, string postcode) {
            this.FnInsertBankDetailsAsync(vendorNo, bankCode, bankName, currencyCode, bankAccountNo, bankbranchno, phonenumber, country, postcode, null);
        }
        
        /// <remarks/>
        public void FnInsertBankDetailsAsync(string vendorNo, string bankCode, string bankName, string currencyCode, string bankAccountNo, string bankbranchno, string phonenumber, string country, string postcode, object userState) {
            if ((this.FnInsertBankDetailsOperationCompleted == null)) {
                this.FnInsertBankDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertBankDetailsOperationCompleted);
            }
            this.InvokeAsync("FnInsertBankDetails", new object[] {
                        vendorNo,
                        bankCode,
                        bankName,
                        currencyCode,
                        bankAccountNo,
                        bankbranchno,
                        phonenumber,
                        country,
                        postcode}, this.FnInsertBankDetailsOperationCompleted, userState);
        }
        
        private void OnFnInsertBankDetailsOperationCompleted(object arg) {
            if ((this.FnInsertBankDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertBankDetailsCompleted(this, new FnInsertBankDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnDeleteBank", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnDeleteBank_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteBank(string vendorNo, string bankCode) {
            object[] results = this.Invoke("FnDeleteBank", new object[] {
                        vendorNo,
                        bankCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteBankAsync(string vendorNo, string bankCode) {
            this.FnDeleteBankAsync(vendorNo, bankCode, null);
        }
        
        /// <remarks/>
        public void FnDeleteBankAsync(string vendorNo, string bankCode, object userState) {
            if ((this.FnDeleteBankOperationCompleted == null)) {
                this.FnDeleteBankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteBankOperationCompleted);
            }
            this.InvokeAsync("FnDeleteBank", new object[] {
                        vendorNo,
                        bankCode}, this.FnDeleteBankOperationCompleted, userState);
        }
        
        private void OnFnDeleteBankOperationCompleted(object arg) {
            if ((this.FnDeleteBankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteBankCompleted(this, new FnDeleteBankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertDirector", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertDirector_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertDirector(string vendorNo, string phoneNo, decimal ownershippercentage, string country, string email, string address, string directorFullname, string idNumber, int citizenType) {
            object[] results = this.Invoke("FnInsertDirector", new object[] {
                        vendorNo,
                        phoneNo,
                        ownershippercentage,
                        country,
                        email,
                        address,
                        directorFullname,
                        idNumber,
                        citizenType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertDirectorAsync(string vendorNo, string phoneNo, decimal ownershippercentage, string country, string email, string address, string directorFullname, string idNumber, int citizenType) {
            this.FnInsertDirectorAsync(vendorNo, phoneNo, ownershippercentage, country, email, address, directorFullname, idNumber, citizenType, null);
        }
        
        /// <remarks/>
        public void FnInsertDirectorAsync(string vendorNo, string phoneNo, decimal ownershippercentage, string country, string email, string address, string directorFullname, string idNumber, int citizenType, object userState) {
            if ((this.FnInsertDirectorOperationCompleted == null)) {
                this.FnInsertDirectorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertDirectorOperationCompleted);
            }
            this.InvokeAsync("FnInsertDirector", new object[] {
                        vendorNo,
                        phoneNo,
                        ownershippercentage,
                        country,
                        email,
                        address,
                        directorFullname,
                        idNumber,
                        citizenType}, this.FnInsertDirectorOperationCompleted, userState);
        }
        
        private void OnFnInsertDirectorOperationCompleted(object arg) {
            if ((this.FnInsertDirectorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertDirectorCompleted(this, new FnInsertDirectorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertDirectorDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertDirectorDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertDirectorDetails(string vendorNo, string directorname, string idnumber, int citizenship, decimal ownershippercent, string phonenumber, string address, string email, string nationalityId, int type, string registrationNumber, string kraPin, string entityType, int supplierType) {
            object[] results = this.Invoke("FnInsertDirectorDetails", new object[] {
                        vendorNo,
                        directorname,
                        idnumber,
                        citizenship,
                        ownershippercent,
                        phonenumber,
                        address,
                        email,
                        nationalityId,
                        type,
                        registrationNumber,
                        kraPin,
                        entityType,
                        supplierType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertDirectorDetailsAsync(string vendorNo, string directorname, string idnumber, int citizenship, decimal ownershippercent, string phonenumber, string address, string email, string nationalityId, int type, string registrationNumber, string kraPin, string entityType, int supplierType) {
            this.FnInsertDirectorDetailsAsync(vendorNo, directorname, idnumber, citizenship, ownershippercent, phonenumber, address, email, nationalityId, type, registrationNumber, kraPin, entityType, supplierType, null);
        }
        
        /// <remarks/>
        public void FnInsertDirectorDetailsAsync(string vendorNo, string directorname, string idnumber, int citizenship, decimal ownershippercent, string phonenumber, string address, string email, string nationalityId, int type, string registrationNumber, string kraPin, string entityType, int supplierType, object userState) {
            if ((this.FnInsertDirectorDetailsOperationCompleted == null)) {
                this.FnInsertDirectorDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertDirectorDetailsOperationCompleted);
            }
            this.InvokeAsync("FnInsertDirectorDetails", new object[] {
                        vendorNo,
                        directorname,
                        idnumber,
                        citizenship,
                        ownershippercent,
                        phonenumber,
                        address,
                        email,
                        nationalityId,
                        type,
                        registrationNumber,
                        kraPin,
                        entityType,
                        supplierType}, this.FnInsertDirectorDetailsOperationCompleted, userState);
        }
        
        private void OnFnInsertDirectorDetailsOperationCompleted(object arg) {
            if ((this.FnInsertDirectorDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertDirectorDetailsCompleted(this, new FnInsertDirectorDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnDeleteBeneficiary", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnDeleteBeneficiary_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteBeneficiary(string vendorNo, int beneficiaryCode) {
            object[] results = this.Invoke("FnDeleteBeneficiary", new object[] {
                        vendorNo,
                        beneficiaryCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteBeneficiaryAsync(string vendorNo, int beneficiaryCode) {
            this.FnDeleteBeneficiaryAsync(vendorNo, beneficiaryCode, null);
        }
        
        /// <remarks/>
        public void FnDeleteBeneficiaryAsync(string vendorNo, int beneficiaryCode, object userState) {
            if ((this.FnDeleteBeneficiaryOperationCompleted == null)) {
                this.FnDeleteBeneficiaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteBeneficiaryOperationCompleted);
            }
            this.InvokeAsync("FnDeleteBeneficiary", new object[] {
                        vendorNo,
                        beneficiaryCode}, this.FnDeleteBeneficiaryOperationCompleted, userState);
        }
        
        private void OnFnDeleteBeneficiaryOperationCompleted(object arg) {
            if ((this.FnDeleteBeneficiaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteBeneficiaryCompleted(this, new FnDeleteBeneficiaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnDeleteShareholder", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnDeleteShareholder_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteShareholder(string vendorNo, int shareholdercode) {
            object[] results = this.Invoke("FnDeleteShareholder", new object[] {
                        vendorNo,
                        shareholdercode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteShareholderAsync(string vendorNo, int shareholdercode) {
            this.FnDeleteShareholderAsync(vendorNo, shareholdercode, null);
        }
        
        /// <remarks/>
        public void FnDeleteShareholderAsync(string vendorNo, int shareholdercode, object userState) {
            if ((this.FnDeleteShareholderOperationCompleted == null)) {
                this.FnDeleteShareholderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteShareholderOperationCompleted);
            }
            this.InvokeAsync("FnDeleteShareholder", new object[] {
                        vendorNo,
                        shareholdercode}, this.FnDeleteShareholderOperationCompleted, userState);
        }
        
        private void OnFnDeleteShareholderOperationCompleted(object arg) {
            if ((this.FnDeleteShareholderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteShareholderCompleted(this, new FnDeleteShareholderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertBidResponseSecurityD" +
            "etails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertBidResponseSecurityDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertBidResponseSecurityDetails(string vendorNo, string bidnumber, string ifsnumber, string formofbidesecurity, int issuertype, int securitytype, string gaurantorname, string issueroffices, string description, decimal securityamount, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime bidsecurityeffectivedate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime bidsecurityexpirydate) {
            object[] results = this.Invoke("FnInsertBidResponseSecurityDetails", new object[] {
                        vendorNo,
                        bidnumber,
                        ifsnumber,
                        formofbidesecurity,
                        issuertype,
                        securitytype,
                        gaurantorname,
                        issueroffices,
                        description,
                        securityamount,
                        bidsecurityeffectivedate,
                        bidsecurityexpirydate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertBidResponseSecurityDetailsAsync(string vendorNo, string bidnumber, string ifsnumber, string formofbidesecurity, int issuertype, int securitytype, string gaurantorname, string issueroffices, string description, decimal securityamount, System.DateTime bidsecurityeffectivedate, System.DateTime bidsecurityexpirydate) {
            this.FnInsertBidResponseSecurityDetailsAsync(vendorNo, bidnumber, ifsnumber, formofbidesecurity, issuertype, securitytype, gaurantorname, issueroffices, description, securityamount, bidsecurityeffectivedate, bidsecurityexpirydate, null);
        }
        
        /// <remarks/>
        public void FnInsertBidResponseSecurityDetailsAsync(string vendorNo, string bidnumber, string ifsnumber, string formofbidesecurity, int issuertype, int securitytype, string gaurantorname, string issueroffices, string description, decimal securityamount, System.DateTime bidsecurityeffectivedate, System.DateTime bidsecurityexpirydate, object userState) {
            if ((this.FnInsertBidResponseSecurityDetailsOperationCompleted == null)) {
                this.FnInsertBidResponseSecurityDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertBidResponseSecurityDetailsOperationCompleted);
            }
            this.InvokeAsync("FnInsertBidResponseSecurityDetails", new object[] {
                        vendorNo,
                        bidnumber,
                        ifsnumber,
                        formofbidesecurity,
                        issuertype,
                        securitytype,
                        gaurantorname,
                        issueroffices,
                        description,
                        securityamount,
                        bidsecurityeffectivedate,
                        bidsecurityexpirydate}, this.FnInsertBidResponseSecurityDetailsOperationCompleted, userState);
        }
        
        private void OnFnInsertBidResponseSecurityDetailsOperationCompleted(object arg) {
            if ((this.FnInsertBidResponseSecurityDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertBidResponseSecurityDetailsCompleted(this, new FnInsertBidResponseSecurityDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertLitigationH", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertLitigationH_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertLitigationH(string vendorNo, string disputeDescription, int categoryofDispute, string year, string theotherDisputeparty, decimal disputeAmount, int awardType) {
            object[] results = this.Invoke("FnInsertLitigationH", new object[] {
                        vendorNo,
                        disputeDescription,
                        categoryofDispute,
                        year,
                        theotherDisputeparty,
                        disputeAmount,
                        awardType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertLitigationHAsync(string vendorNo, string disputeDescription, int categoryofDispute, string year, string theotherDisputeparty, decimal disputeAmount, int awardType) {
            this.FnInsertLitigationHAsync(vendorNo, disputeDescription, categoryofDispute, year, theotherDisputeparty, disputeAmount, awardType, null);
        }
        
        /// <remarks/>
        public void FnInsertLitigationHAsync(string vendorNo, string disputeDescription, int categoryofDispute, string year, string theotherDisputeparty, decimal disputeAmount, int awardType, object userState) {
            if ((this.FnInsertLitigationHOperationCompleted == null)) {
                this.FnInsertLitigationHOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertLitigationHOperationCompleted);
            }
            this.InvokeAsync("FnInsertLitigationH", new object[] {
                        vendorNo,
                        disputeDescription,
                        categoryofDispute,
                        year,
                        theotherDisputeparty,
                        disputeAmount,
                        awardType}, this.FnInsertLitigationHOperationCompleted, userState);
        }
        
        private void OnFnInsertLitigationHOperationCompleted(object arg) {
            if ((this.FnInsertLitigationHCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertLitigationHCompleted(this, new FnInsertLitigationHCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertLitigationHistoryDet" +
            "ails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertLitigationHistoryDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertLitigationHistoryDetails(string vendorNo, string disputeDescription, int categoryofDispute, string year, string theotherDisputeparty, decimal disputeAmount, int awardType) {
            object[] results = this.Invoke("FnInsertLitigationHistoryDetails", new object[] {
                        vendorNo,
                        disputeDescription,
                        categoryofDispute,
                        year,
                        theotherDisputeparty,
                        disputeAmount,
                        awardType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertLitigationHistoryDetailsAsync(string vendorNo, string disputeDescription, int categoryofDispute, string year, string theotherDisputeparty, decimal disputeAmount, int awardType) {
            this.FnInsertLitigationHistoryDetailsAsync(vendorNo, disputeDescription, categoryofDispute, year, theotherDisputeparty, disputeAmount, awardType, null);
        }
        
        /// <remarks/>
        public void FnInsertLitigationHistoryDetailsAsync(string vendorNo, string disputeDescription, int categoryofDispute, string year, string theotherDisputeparty, decimal disputeAmount, int awardType, object userState) {
            if ((this.FnInsertLitigationHistoryDetailsOperationCompleted == null)) {
                this.FnInsertLitigationHistoryDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertLitigationHistoryDetailsOperationCompleted);
            }
            this.InvokeAsync("FnInsertLitigationHistoryDetails", new object[] {
                        vendorNo,
                        disputeDescription,
                        categoryofDispute,
                        year,
                        theotherDisputeparty,
                        disputeAmount,
                        awardType}, this.FnInsertLitigationHistoryDetailsOperationCompleted, userState);
        }
        
        private void OnFnInsertLitigationHistoryDetailsOperationCompleted(object arg) {
            if ((this.FnInsertLitigationHistoryDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertLitigationHistoryDetailsCompleted(this, new FnInsertLitigationHistoryDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnDeleteLitigationHistoryDet" +
            "ails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnDeleteLitigationHistoryDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteLitigationHistoryDetails(string vendorNo, int litigationCode) {
            object[] results = this.Invoke("FnDeleteLitigationHistoryDetails", new object[] {
                        vendorNo,
                        litigationCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteLitigationHistoryDetailsAsync(string vendorNo, int litigationCode) {
            this.FnDeleteLitigationHistoryDetailsAsync(vendorNo, litigationCode, null);
        }
        
        /// <remarks/>
        public void FnDeleteLitigationHistoryDetailsAsync(string vendorNo, int litigationCode, object userState) {
            if ((this.FnDeleteLitigationHistoryDetailsOperationCompleted == null)) {
                this.FnDeleteLitigationHistoryDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteLitigationHistoryDetailsOperationCompleted);
            }
            this.InvokeAsync("FnDeleteLitigationHistoryDetails", new object[] {
                        vendorNo,
                        litigationCode}, this.FnDeleteLitigationHistoryDetailsOperationCompleted, userState);
        }
        
        private void OnFnDeleteLitigationHistoryDetailsOperationCompleted(object arg) {
            if ((this.FnDeleteLitigationHistoryDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteLitigationHistoryDetailsCompleted(this, new FnDeleteLitigationHistoryDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertSpecialGrp", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertSpecialGrp_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertSpecialGrp(string vendoNo, string specialGrpcatg, string certficateNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime certeffectiveDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime certXpiryDate, string prodservCategory) {
            object[] results = this.Invoke("FnInsertSpecialGrp", new object[] {
                        vendoNo,
                        specialGrpcatg,
                        certficateNo,
                        certeffectiveDate,
                        certXpiryDate,
                        prodservCategory});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertSpecialGrpAsync(string vendoNo, string specialGrpcatg, string certficateNo, System.DateTime certeffectiveDate, System.DateTime certXpiryDate, string prodservCategory) {
            this.FnInsertSpecialGrpAsync(vendoNo, specialGrpcatg, certficateNo, certeffectiveDate, certXpiryDate, prodservCategory, null);
        }
        
        /// <remarks/>
        public void FnInsertSpecialGrpAsync(string vendoNo, string specialGrpcatg, string certficateNo, System.DateTime certeffectiveDate, System.DateTime certXpiryDate, string prodservCategory, object userState) {
            if ((this.FnInsertSpecialGrpOperationCompleted == null)) {
                this.FnInsertSpecialGrpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertSpecialGrpOperationCompleted);
            }
            this.InvokeAsync("FnInsertSpecialGrp", new object[] {
                        vendoNo,
                        specialGrpcatg,
                        certficateNo,
                        certeffectiveDate,
                        certXpiryDate,
                        prodservCategory}, this.FnInsertSpecialGrpOperationCompleted, userState);
        }
        
        private void OnFnInsertSpecialGrpOperationCompleted(object arg) {
            if ((this.FnInsertSpecialGrpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertSpecialGrpCompleted(this, new FnInsertSpecialGrpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertPurchaseLinesDetails" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertPurchaseLinesDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertPurchaseLinesDetails(string vendorNo, string bidresponseNumber, int itemlinenumber, string itemnumber, decimal costexlvat, decimal quantity) {
            object[] results = this.Invoke("FnInsertPurchaseLinesDetails", new object[] {
                        vendorNo,
                        bidresponseNumber,
                        itemlinenumber,
                        itemnumber,
                        costexlvat,
                        quantity});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertPurchaseLinesDetailsAsync(string vendorNo, string bidresponseNumber, int itemlinenumber, string itemnumber, decimal costexlvat, decimal quantity) {
            this.FnInsertPurchaseLinesDetailsAsync(vendorNo, bidresponseNumber, itemlinenumber, itemnumber, costexlvat, quantity, null);
        }
        
        /// <remarks/>
        public void FnInsertPurchaseLinesDetailsAsync(string vendorNo, string bidresponseNumber, int itemlinenumber, string itemnumber, decimal costexlvat, decimal quantity, object userState) {
            if ((this.FnInsertPurchaseLinesDetailsOperationCompleted == null)) {
                this.FnInsertPurchaseLinesDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertPurchaseLinesDetailsOperationCompleted);
            }
            this.InvokeAsync("FnInsertPurchaseLinesDetails", new object[] {
                        vendorNo,
                        bidresponseNumber,
                        itemlinenumber,
                        itemnumber,
                        costexlvat,
                        quantity}, this.FnInsertPurchaseLinesDetailsOperationCompleted, userState);
        }
        
        private void OnFnInsertPurchaseLinesDetailsOperationCompleted(object arg) {
            if ((this.FnInsertPurchaseLinesDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertPurchaseLinesDetailsCompleted(this, new FnInsertPurchaseLinesDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertPurchaseLinesRespons" +
            "eDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertPurchaseLinesResponseDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertPurchaseLinesResponseDetails(string vendorNo, string bidresponseNumber, string itemnumber, decimal quantity, decimal costexlvat) {
            object[] results = this.Invoke("FnInsertPurchaseLinesResponseDetails", new object[] {
                        vendorNo,
                        bidresponseNumber,
                        itemnumber,
                        quantity,
                        costexlvat});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertPurchaseLinesResponseDetailsAsync(string vendorNo, string bidresponseNumber, string itemnumber, decimal quantity, decimal costexlvat) {
            this.FnInsertPurchaseLinesResponseDetailsAsync(vendorNo, bidresponseNumber, itemnumber, quantity, costexlvat, null);
        }
        
        /// <remarks/>
        public void FnInsertPurchaseLinesResponseDetailsAsync(string vendorNo, string bidresponseNumber, string itemnumber, decimal quantity, decimal costexlvat, object userState) {
            if ((this.FnInsertPurchaseLinesResponseDetailsOperationCompleted == null)) {
                this.FnInsertPurchaseLinesResponseDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertPurchaseLinesResponseDetailsOperationCompleted);
            }
            this.InvokeAsync("FnInsertPurchaseLinesResponseDetails", new object[] {
                        vendorNo,
                        bidresponseNumber,
                        itemnumber,
                        quantity,
                        costexlvat}, this.FnInsertPurchaseLinesResponseDetailsOperationCompleted, userState);
        }
        
        private void OnFnInsertPurchaseLinesResponseDetailsOperationCompleted(object arg) {
            if ((this.FnInsertPurchaseLinesResponseDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertPurchaseLinesResponseDetailsCompleted(this, new FnInsertPurchaseLinesResponseDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertPurchaseLinesRespons" +
            "eRFQDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertPurchaseLinesResponseRFQDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertPurchaseLinesResponseRFQDetails(string vendorNo, string bidresponseNumber, string itemnumber, decimal costexlvat) {
            object[] results = this.Invoke("FnInsertPurchaseLinesResponseRFQDetails", new object[] {
                        vendorNo,
                        bidresponseNumber,
                        itemnumber,
                        costexlvat});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertPurchaseLinesResponseRFQDetailsAsync(string vendorNo, string bidresponseNumber, string itemnumber, decimal costexlvat) {
            this.FnInsertPurchaseLinesResponseRFQDetailsAsync(vendorNo, bidresponseNumber, itemnumber, costexlvat, null);
        }
        
        /// <remarks/>
        public void FnInsertPurchaseLinesResponseRFQDetailsAsync(string vendorNo, string bidresponseNumber, string itemnumber, decimal costexlvat, object userState) {
            if ((this.FnInsertPurchaseLinesResponseRFQDetailsOperationCompleted == null)) {
                this.FnInsertPurchaseLinesResponseRFQDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertPurchaseLinesResponseRFQDetailsOperationCompleted);
            }
            this.InvokeAsync("FnInsertPurchaseLinesResponseRFQDetails", new object[] {
                        vendorNo,
                        bidresponseNumber,
                        itemnumber,
                        costexlvat}, this.FnInsertPurchaseLinesResponseRFQDetailsOperationCompleted, userState);
        }
        
        private void OnFnInsertPurchaseLinesResponseRFQDetailsOperationCompleted(object arg) {
            if ((this.FnInsertPurchaseLinesResponseRFQDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertPurchaseLinesResponseRFQDetailsCompleted(this, new FnInsertPurchaseLinesResponseRFQDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertPastXep", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertPastXep_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertPastXep(string vendorNo, string clientName, string address, string assignmentProject, string projectScope, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime projectStartDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime projectEndDate, decimal projectValue) {
            object[] results = this.Invoke("FnInsertPastXep", new object[] {
                        vendorNo,
                        clientName,
                        address,
                        assignmentProject,
                        projectScope,
                        projectStartDate,
                        projectEndDate,
                        projectValue});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertPastXepAsync(string vendorNo, string clientName, string address, string assignmentProject, string projectScope, System.DateTime projectStartDate, System.DateTime projectEndDate, decimal projectValue) {
            this.FnInsertPastXepAsync(vendorNo, clientName, address, assignmentProject, projectScope, projectStartDate, projectEndDate, projectValue, null);
        }
        
        /// <remarks/>
        public void FnInsertPastXepAsync(string vendorNo, string clientName, string address, string assignmentProject, string projectScope, System.DateTime projectStartDate, System.DateTime projectEndDate, decimal projectValue, object userState) {
            if ((this.FnInsertPastXepOperationCompleted == null)) {
                this.FnInsertPastXepOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertPastXepOperationCompleted);
            }
            this.InvokeAsync("FnInsertPastXep", new object[] {
                        vendorNo,
                        clientName,
                        address,
                        assignmentProject,
                        projectScope,
                        projectStartDate,
                        projectEndDate,
                        projectValue}, this.FnInsertPastXepOperationCompleted, userState);
        }
        
        private void OnFnInsertPastXepOperationCompleted(object arg) {
            if ((this.FnInsertPastXepCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertPastXepCompleted(this, new FnInsertPastXepCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertPastExperienceDetail" +
            "s", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertPastExperienceDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertPastExperienceDetails(string vendorNo, string clientName, string address, string assignmentProject, string projectScope, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime projectStartDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime projectEndDate, decimal projectValue) {
            object[] results = this.Invoke("FnInsertPastExperienceDetails", new object[] {
                        vendorNo,
                        clientName,
                        address,
                        assignmentProject,
                        projectScope,
                        projectStartDate,
                        projectEndDate,
                        projectValue});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertPastExperienceDetailsAsync(string vendorNo, string clientName, string address, string assignmentProject, string projectScope, System.DateTime projectStartDate, System.DateTime projectEndDate, decimal projectValue) {
            this.FnInsertPastExperienceDetailsAsync(vendorNo, clientName, address, assignmentProject, projectScope, projectStartDate, projectEndDate, projectValue, null);
        }
        
        /// <remarks/>
        public void FnInsertPastExperienceDetailsAsync(string vendorNo, string clientName, string address, string assignmentProject, string projectScope, System.DateTime projectStartDate, System.DateTime projectEndDate, decimal projectValue, object userState) {
            if ((this.FnInsertPastExperienceDetailsOperationCompleted == null)) {
                this.FnInsertPastExperienceDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertPastExperienceDetailsOperationCompleted);
            }
            this.InvokeAsync("FnInsertPastExperienceDetails", new object[] {
                        vendorNo,
                        clientName,
                        address,
                        assignmentProject,
                        projectScope,
                        projectStartDate,
                        projectEndDate,
                        projectValue}, this.FnInsertPastExperienceDetailsOperationCompleted, userState);
        }
        
        private void OnFnInsertPastExperienceDetailsOperationCompleted(object arg) {
            if ((this.FnInsertPastExperienceDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertPastExperienceDetailsCompleted(this, new FnInsertPastExperienceDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnDeletePastExperienceDetail" +
            "s", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnDeletePastExperienceDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeletePastExperienceDetails(string vendorNo, int experienceCode) {
            object[] results = this.Invoke("FnDeletePastExperienceDetails", new object[] {
                        vendorNo,
                        experienceCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeletePastExperienceDetailsAsync(string vendorNo, int experienceCode) {
            this.FnDeletePastExperienceDetailsAsync(vendorNo, experienceCode, null);
        }
        
        /// <remarks/>
        public void FnDeletePastExperienceDetailsAsync(string vendorNo, int experienceCode, object userState) {
            if ((this.FnDeletePastExperienceDetailsOperationCompleted == null)) {
                this.FnDeletePastExperienceDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeletePastExperienceDetailsOperationCompleted);
            }
            this.InvokeAsync("FnDeletePastExperienceDetails", new object[] {
                        vendorNo,
                        experienceCode}, this.FnDeletePastExperienceDetailsOperationCompleted, userState);
        }
        
        private void OnFnDeletePastExperienceDetailsOperationCompleted(object arg) {
            if ((this.FnDeletePastExperienceDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeletePastExperienceDetailsCompleted(this, new FnDeletePastExperienceDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnDeleteStaffExperience", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnDeleteStaffExperience_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteStaffExperience(string vendorNo, string staffCode) {
            object[] results = this.Invoke("FnDeleteStaffExperience", new object[] {
                        vendorNo,
                        staffCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteStaffExperienceAsync(string vendorNo, string staffCode) {
            this.FnDeleteStaffExperienceAsync(vendorNo, staffCode, null);
        }
        
        /// <remarks/>
        public void FnDeleteStaffExperienceAsync(string vendorNo, string staffCode, object userState) {
            if ((this.FnDeleteStaffExperienceOperationCompleted == null)) {
                this.FnDeleteStaffExperienceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteStaffExperienceOperationCompleted);
            }
            this.InvokeAsync("FnDeleteStaffExperience", new object[] {
                        vendorNo,
                        staffCode}, this.FnDeleteStaffExperienceOperationCompleted, userState);
        }
        
        private void OnFnDeleteStaffExperienceOperationCompleted(object arg) {
            if ((this.FnDeleteStaffExperienceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteStaffExperienceCompleted(this, new FnDeleteStaffExperienceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnDeleteBidResponsePersonel", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnDeleteBidResponsePersonel_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteBidResponsePersonel(string vendorNo, int staffno) {
            object[] results = this.Invoke("FnDeleteBidResponsePersonel", new object[] {
                        vendorNo,
                        staffno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteBidResponsePersonelAsync(string vendorNo, int staffno) {
            this.FnDeleteBidResponsePersonelAsync(vendorNo, staffno, null);
        }
        
        /// <remarks/>
        public void FnDeleteBidResponsePersonelAsync(string vendorNo, int staffno, object userState) {
            if ((this.FnDeleteBidResponsePersonelOperationCompleted == null)) {
                this.FnDeleteBidResponsePersonelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteBidResponsePersonelOperationCompleted);
            }
            this.InvokeAsync("FnDeleteBidResponsePersonel", new object[] {
                        vendorNo,
                        staffno}, this.FnDeleteBidResponsePersonelOperationCompleted, userState);
        }
        
        private void OnFnDeleteBidResponsePersonelOperationCompleted(object arg) {
            if ((this.FnDeleteBidResponsePersonelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteBidResponsePersonelCompleted(this, new FnDeleteBidResponsePersonelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnDeleteBidResponseEquipment" +
            "Details", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnDeleteBidResponseEquipmentDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteBidResponseEquipmentDetails(string vendorNo, string serialno) {
            object[] results = this.Invoke("FnDeleteBidResponseEquipmentDetails", new object[] {
                        vendorNo,
                        serialno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteBidResponseEquipmentDetailsAsync(string vendorNo, string serialno) {
            this.FnDeleteBidResponseEquipmentDetailsAsync(vendorNo, serialno, null);
        }
        
        /// <remarks/>
        public void FnDeleteBidResponseEquipmentDetailsAsync(string vendorNo, string serialno, object userState) {
            if ((this.FnDeleteBidResponseEquipmentDetailsOperationCompleted == null)) {
                this.FnDeleteBidResponseEquipmentDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteBidResponseEquipmentDetailsOperationCompleted);
            }
            this.InvokeAsync("FnDeleteBidResponseEquipmentDetails", new object[] {
                        vendorNo,
                        serialno}, this.FnDeleteBidResponseEquipmentDetailsOperationCompleted, userState);
        }
        
        private void OnFnDeleteBidResponseEquipmentDetailsOperationCompleted(object arg) {
            if ((this.FnDeleteBidResponseEquipmentDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteBidResponseEquipmentDetailsCompleted(this, new FnDeleteBidResponseEquipmentDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertBalanceSheet", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertBalanceSheet_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertBalanceSheet(string yearCode, decimal totalCurrentAssets, decimal totalFixedAssets, decimal totalCurrentLiability, decimal totalLongtermliabilty, decimal totalOwnersequity, string vendorNo) {
            object[] results = this.Invoke("FnInsertBalanceSheet", new object[] {
                        yearCode,
                        totalCurrentAssets,
                        totalFixedAssets,
                        totalCurrentLiability,
                        totalLongtermliabilty,
                        totalOwnersequity,
                        vendorNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertBalanceSheetAsync(string yearCode, decimal totalCurrentAssets, decimal totalFixedAssets, decimal totalCurrentLiability, decimal totalLongtermliabilty, decimal totalOwnersequity, string vendorNo) {
            this.FnInsertBalanceSheetAsync(yearCode, totalCurrentAssets, totalFixedAssets, totalCurrentLiability, totalLongtermliabilty, totalOwnersequity, vendorNo, null);
        }
        
        /// <remarks/>
        public void FnInsertBalanceSheetAsync(string yearCode, decimal totalCurrentAssets, decimal totalFixedAssets, decimal totalCurrentLiability, decimal totalLongtermliabilty, decimal totalOwnersequity, string vendorNo, object userState) {
            if ((this.FnInsertBalanceSheetOperationCompleted == null)) {
                this.FnInsertBalanceSheetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertBalanceSheetOperationCompleted);
            }
            this.InvokeAsync("FnInsertBalanceSheet", new object[] {
                        yearCode,
                        totalCurrentAssets,
                        totalFixedAssets,
                        totalCurrentLiability,
                        totalLongtermliabilty,
                        totalOwnersequity,
                        vendorNo}, this.FnInsertBalanceSheetOperationCompleted, userState);
        }
        
        private void OnFnInsertBalanceSheetOperationCompleted(object arg) {
            if ((this.FnInsertBalanceSheetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertBalanceSheetCompleted(this, new FnInsertBalanceSheetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnBidResponseInsertBalanceSh" +
            "eet", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnBidResponseInsertBalanceSheet_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnBidResponseInsertBalanceSheet(string bidresponseNumber, string yearCode, decimal totalCurrentAssets, decimal totalFixedAssets, decimal totalCurrentLiability, decimal totalLongtermliabilty, decimal totalOwnersequity, string vendorNo) {
            object[] results = this.Invoke("FnBidResponseInsertBalanceSheet", new object[] {
                        bidresponseNumber,
                        yearCode,
                        totalCurrentAssets,
                        totalFixedAssets,
                        totalCurrentLiability,
                        totalLongtermliabilty,
                        totalOwnersequity,
                        vendorNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnBidResponseInsertBalanceSheetAsync(string bidresponseNumber, string yearCode, decimal totalCurrentAssets, decimal totalFixedAssets, decimal totalCurrentLiability, decimal totalLongtermliabilty, decimal totalOwnersequity, string vendorNo) {
            this.FnBidResponseInsertBalanceSheetAsync(bidresponseNumber, yearCode, totalCurrentAssets, totalFixedAssets, totalCurrentLiability, totalLongtermliabilty, totalOwnersequity, vendorNo, null);
        }
        
        /// <remarks/>
        public void FnBidResponseInsertBalanceSheetAsync(string bidresponseNumber, string yearCode, decimal totalCurrentAssets, decimal totalFixedAssets, decimal totalCurrentLiability, decimal totalLongtermliabilty, decimal totalOwnersequity, string vendorNo, object userState) {
            if ((this.FnBidResponseInsertBalanceSheetOperationCompleted == null)) {
                this.FnBidResponseInsertBalanceSheetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnBidResponseInsertBalanceSheetOperationCompleted);
            }
            this.InvokeAsync("FnBidResponseInsertBalanceSheet", new object[] {
                        bidresponseNumber,
                        yearCode,
                        totalCurrentAssets,
                        totalFixedAssets,
                        totalCurrentLiability,
                        totalLongtermliabilty,
                        totalOwnersequity,
                        vendorNo}, this.FnBidResponseInsertBalanceSheetOperationCompleted, userState);
        }
        
        private void OnFnBidResponseInsertBalanceSheetOperationCompleted(object arg) {
            if ((this.FnBidResponseInsertBalanceSheetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnBidResponseInsertBalanceSheetCompleted(this, new FnBidResponseInsertBalanceSheetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnDeleteBalanceSheetDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnDeleteBalanceSheetDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteBalanceSheetDetails(string vendorNo, string yearcode) {
            object[] results = this.Invoke("FnDeleteBalanceSheetDetails", new object[] {
                        vendorNo,
                        yearcode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteBalanceSheetDetailsAsync(string vendorNo, string yearcode) {
            this.FnDeleteBalanceSheetDetailsAsync(vendorNo, yearcode, null);
        }
        
        /// <remarks/>
        public void FnDeleteBalanceSheetDetailsAsync(string vendorNo, string yearcode, object userState) {
            if ((this.FnDeleteBalanceSheetDetailsOperationCompleted == null)) {
                this.FnDeleteBalanceSheetDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteBalanceSheetDetailsOperationCompleted);
            }
            this.InvokeAsync("FnDeleteBalanceSheetDetails", new object[] {
                        vendorNo,
                        yearcode}, this.FnDeleteBalanceSheetDetailsOperationCompleted, userState);
        }
        
        private void OnFnDeleteBalanceSheetDetailsOperationCompleted(object arg) {
            if ((this.FnDeleteBalanceSheetDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteBalanceSheetDetailsCompleted(this, new FnDeleteBalanceSheetDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnEditBidResponseInsertBalan" +
            "ceSheet", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnEditBidResponseInsertBalanceSheet_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnEditBidResponseInsertBalanceSheet(string bidresponseNumber, string yearCode, decimal totalCurrentAssets, decimal totalFixedAssets, decimal totalCurrentLiability, decimal totalLongtermliabilty, decimal totalOwnersequity, string vendorNo) {
            object[] results = this.Invoke("FnEditBidResponseInsertBalanceSheet", new object[] {
                        bidresponseNumber,
                        yearCode,
                        totalCurrentAssets,
                        totalFixedAssets,
                        totalCurrentLiability,
                        totalLongtermliabilty,
                        totalOwnersequity,
                        vendorNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnEditBidResponseInsertBalanceSheetAsync(string bidresponseNumber, string yearCode, decimal totalCurrentAssets, decimal totalFixedAssets, decimal totalCurrentLiability, decimal totalLongtermliabilty, decimal totalOwnersequity, string vendorNo) {
            this.FnEditBidResponseInsertBalanceSheetAsync(bidresponseNumber, yearCode, totalCurrentAssets, totalFixedAssets, totalCurrentLiability, totalLongtermliabilty, totalOwnersequity, vendorNo, null);
        }
        
        /// <remarks/>
        public void FnEditBidResponseInsertBalanceSheetAsync(string bidresponseNumber, string yearCode, decimal totalCurrentAssets, decimal totalFixedAssets, decimal totalCurrentLiability, decimal totalLongtermliabilty, decimal totalOwnersequity, string vendorNo, object userState) {
            if ((this.FnEditBidResponseInsertBalanceSheetOperationCompleted == null)) {
                this.FnEditBidResponseInsertBalanceSheetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEditBidResponseInsertBalanceSheetOperationCompleted);
            }
            this.InvokeAsync("FnEditBidResponseInsertBalanceSheet", new object[] {
                        bidresponseNumber,
                        yearCode,
                        totalCurrentAssets,
                        totalFixedAssets,
                        totalCurrentLiability,
                        totalLongtermliabilty,
                        totalOwnersequity,
                        vendorNo}, this.FnEditBidResponseInsertBalanceSheetOperationCompleted, userState);
        }
        
        private void OnFnEditBidResponseInsertBalanceSheetOperationCompleted(object arg) {
            if ((this.FnEditBidResponseInsertBalanceSheetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEditBidResponseInsertBalanceSheetCompleted(this, new FnEditBidResponseInsertBalanceSheetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertIncomestatement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertIncomestatement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertIncomestatement(string yearCode, decimal totalRevenue, decimal totaCostofsoldgoods, decimal totaOperatingexpenses, decimal othernoneOperevenue, decimal interestExpense, string vendorNo) {
            object[] results = this.Invoke("FnInsertIncomestatement", new object[] {
                        yearCode,
                        totalRevenue,
                        totaCostofsoldgoods,
                        totaOperatingexpenses,
                        othernoneOperevenue,
                        interestExpense,
                        vendorNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertIncomestatementAsync(string yearCode, decimal totalRevenue, decimal totaCostofsoldgoods, decimal totaOperatingexpenses, decimal othernoneOperevenue, decimal interestExpense, string vendorNo) {
            this.FnInsertIncomestatementAsync(yearCode, totalRevenue, totaCostofsoldgoods, totaOperatingexpenses, othernoneOperevenue, interestExpense, vendorNo, null);
        }
        
        /// <remarks/>
        public void FnInsertIncomestatementAsync(string yearCode, decimal totalRevenue, decimal totaCostofsoldgoods, decimal totaOperatingexpenses, decimal othernoneOperevenue, decimal interestExpense, string vendorNo, object userState) {
            if ((this.FnInsertIncomestatementOperationCompleted == null)) {
                this.FnInsertIncomestatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertIncomestatementOperationCompleted);
            }
            this.InvokeAsync("FnInsertIncomestatement", new object[] {
                        yearCode,
                        totalRevenue,
                        totaCostofsoldgoods,
                        totaOperatingexpenses,
                        othernoneOperevenue,
                        interestExpense,
                        vendorNo}, this.FnInsertIncomestatementOperationCompleted, userState);
        }
        
        private void OnFnInsertIncomestatementOperationCompleted(object arg) {
            if ((this.FnInsertIncomestatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertIncomestatementCompleted(this, new FnInsertIncomestatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnDeleteIncomeStatementDetai" +
            "ls", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnDeleteIncomeStatementDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteIncomeStatementDetails(string vendorNo, string yearcode) {
            object[] results = this.Invoke("FnDeleteIncomeStatementDetails", new object[] {
                        vendorNo,
                        yearcode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteIncomeStatementDetailsAsync(string vendorNo, string yearcode) {
            this.FnDeleteIncomeStatementDetailsAsync(vendorNo, yearcode, null);
        }
        
        /// <remarks/>
        public void FnDeleteIncomeStatementDetailsAsync(string vendorNo, string yearcode, object userState) {
            if ((this.FnDeleteIncomeStatementDetailsOperationCompleted == null)) {
                this.FnDeleteIncomeStatementDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteIncomeStatementDetailsOperationCompleted);
            }
            this.InvokeAsync("FnDeleteIncomeStatementDetails", new object[] {
                        vendorNo,
                        yearcode}, this.FnDeleteIncomeStatementDetailsOperationCompleted, userState);
        }
        
        private void OnFnDeleteIncomeStatementDetailsOperationCompleted(object arg) {
            if ((this.FnDeleteIncomeStatementDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteIncomeStatementDetailsCompleted(this, new FnDeleteIncomeStatementDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnEditInsertIncomestatementD" +
            "etails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnEditInsertIncomestatementDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnEditInsertIncomestatementDetails(string bidresponsenumber, string yearCode, decimal totalRevenue, decimal totaCostofsoldgoods, decimal totaOperatingexpenses, decimal othernoneOperevenue, decimal interestExpense, string vendorNo) {
            object[] results = this.Invoke("FnEditInsertIncomestatementDetails", new object[] {
                        bidresponsenumber,
                        yearCode,
                        totalRevenue,
                        totaCostofsoldgoods,
                        totaOperatingexpenses,
                        othernoneOperevenue,
                        interestExpense,
                        vendorNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnEditInsertIncomestatementDetailsAsync(string bidresponsenumber, string yearCode, decimal totalRevenue, decimal totaCostofsoldgoods, decimal totaOperatingexpenses, decimal othernoneOperevenue, decimal interestExpense, string vendorNo) {
            this.FnEditInsertIncomestatementDetailsAsync(bidresponsenumber, yearCode, totalRevenue, totaCostofsoldgoods, totaOperatingexpenses, othernoneOperevenue, interestExpense, vendorNo, null);
        }
        
        /// <remarks/>
        public void FnEditInsertIncomestatementDetailsAsync(string bidresponsenumber, string yearCode, decimal totalRevenue, decimal totaCostofsoldgoods, decimal totaOperatingexpenses, decimal othernoneOperevenue, decimal interestExpense, string vendorNo, object userState) {
            if ((this.FnEditInsertIncomestatementDetailsOperationCompleted == null)) {
                this.FnEditInsertIncomestatementDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEditInsertIncomestatementDetailsOperationCompleted);
            }
            this.InvokeAsync("FnEditInsertIncomestatementDetails", new object[] {
                        bidresponsenumber,
                        yearCode,
                        totalRevenue,
                        totaCostofsoldgoods,
                        totaOperatingexpenses,
                        othernoneOperevenue,
                        interestExpense,
                        vendorNo}, this.FnEditInsertIncomestatementDetailsOperationCompleted, userState);
        }
        
        private void OnFnEditInsertIncomestatementDetailsOperationCompleted(object arg) {
            if ((this.FnEditInsertIncomestatementDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEditInsertIncomestatementDetailsCompleted(this, new FnEditInsertIncomestatementDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnBidResponseInsertIncomesta" +
            "tement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnBidResponseInsertIncomestatement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnBidResponseInsertIncomestatement(string bidresponseNumber, string yearCode, decimal totalRevenue, decimal totaCostofsoldgoods, decimal totaOperatingexpenses, decimal othernoneOperevenue, decimal interestExpense, string vendorNo) {
            object[] results = this.Invoke("FnBidResponseInsertIncomestatement", new object[] {
                        bidresponseNumber,
                        yearCode,
                        totalRevenue,
                        totaCostofsoldgoods,
                        totaOperatingexpenses,
                        othernoneOperevenue,
                        interestExpense,
                        vendorNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnBidResponseInsertIncomestatementAsync(string bidresponseNumber, string yearCode, decimal totalRevenue, decimal totaCostofsoldgoods, decimal totaOperatingexpenses, decimal othernoneOperevenue, decimal interestExpense, string vendorNo) {
            this.FnBidResponseInsertIncomestatementAsync(bidresponseNumber, yearCode, totalRevenue, totaCostofsoldgoods, totaOperatingexpenses, othernoneOperevenue, interestExpense, vendorNo, null);
        }
        
        /// <remarks/>
        public void FnBidResponseInsertIncomestatementAsync(string bidresponseNumber, string yearCode, decimal totalRevenue, decimal totaCostofsoldgoods, decimal totaOperatingexpenses, decimal othernoneOperevenue, decimal interestExpense, string vendorNo, object userState) {
            if ((this.FnBidResponseInsertIncomestatementOperationCompleted == null)) {
                this.FnBidResponseInsertIncomestatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnBidResponseInsertIncomestatementOperationCompleted);
            }
            this.InvokeAsync("FnBidResponseInsertIncomestatement", new object[] {
                        bidresponseNumber,
                        yearCode,
                        totalRevenue,
                        totaCostofsoldgoods,
                        totaOperatingexpenses,
                        othernoneOperevenue,
                        interestExpense,
                        vendorNo}, this.FnBidResponseInsertIncomestatementOperationCompleted, userState);
        }
        
        private void OnFnBidResponseInsertIncomestatementOperationCompleted(object arg) {
            if ((this.FnBidResponseInsertIncomestatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnBidResponseInsertIncomestatementCompleted(this, new FnBidResponseInsertIncomestatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnDeleteBidResponsIncomeStat" +
            "amentDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnDeleteBidResponsIncomeStatamentDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteBidResponsIncomeStatamentDetails(string vendorNo, string yearcode, string responsenumber) {
            object[] results = this.Invoke("FnDeleteBidResponsIncomeStatamentDetails", new object[] {
                        vendorNo,
                        yearcode,
                        responsenumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteBidResponsIncomeStatamentDetailsAsync(string vendorNo, string yearcode, string responsenumber) {
            this.FnDeleteBidResponsIncomeStatamentDetailsAsync(vendorNo, yearcode, responsenumber, null);
        }
        
        /// <remarks/>
        public void FnDeleteBidResponsIncomeStatamentDetailsAsync(string vendorNo, string yearcode, string responsenumber, object userState) {
            if ((this.FnDeleteBidResponsIncomeStatamentDetailsOperationCompleted == null)) {
                this.FnDeleteBidResponsIncomeStatamentDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteBidResponsIncomeStatamentDetailsOperationCompleted);
            }
            this.InvokeAsync("FnDeleteBidResponsIncomeStatamentDetails", new object[] {
                        vendorNo,
                        yearcode,
                        responsenumber}, this.FnDeleteBidResponsIncomeStatamentDetailsOperationCompleted, userState);
        }
        
        private void OnFnDeleteBidResponsIncomeStatamentDetailsOperationCompleted(object arg) {
            if ((this.FnDeleteBidResponsIncomeStatamentDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteBidResponsIncomeStatamentDetailsCompleted(this, new FnDeleteBidResponsIncomeStatamentDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnDeleteBidResponsBalanceShe" +
            "etDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnDeleteBidResponsBalanceSheetDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteBidResponsBalanceSheetDetails(string vendorNo, string yearcode, string responsenumber) {
            object[] results = this.Invoke("FnDeleteBidResponsBalanceSheetDetails", new object[] {
                        vendorNo,
                        yearcode,
                        responsenumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteBidResponsBalanceSheetDetailsAsync(string vendorNo, string yearcode, string responsenumber) {
            this.FnDeleteBidResponsBalanceSheetDetailsAsync(vendorNo, yearcode, responsenumber, null);
        }
        
        /// <remarks/>
        public void FnDeleteBidResponsBalanceSheetDetailsAsync(string vendorNo, string yearcode, string responsenumber, object userState) {
            if ((this.FnDeleteBidResponsBalanceSheetDetailsOperationCompleted == null)) {
                this.FnDeleteBidResponsBalanceSheetDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteBidResponsBalanceSheetDetailsOperationCompleted);
            }
            this.InvokeAsync("FnDeleteBidResponsBalanceSheetDetails", new object[] {
                        vendorNo,
                        yearcode,
                        responsenumber}, this.FnDeleteBidResponsBalanceSheetDetailsOperationCompleted, userState);
        }
        
        private void OnFnDeleteBidResponsBalanceSheetDetailsOperationCompleted(object arg) {
            if ((this.FnDeleteBidResponsBalanceSheetDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteBidResponsBalanceSheetDetailsCompleted(this, new FnDeleteBidResponsBalanceSheetDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnDeleteBidResponsPastExperi" +
            "enceDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnDeleteBidResponsPastExperienceDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteBidResponsPastExperienceDetails(string vendorNo, string responsenumber) {
            object[] results = this.Invoke("FnDeleteBidResponsPastExperienceDetails", new object[] {
                        vendorNo,
                        responsenumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteBidResponsPastExperienceDetailsAsync(string vendorNo, string responsenumber) {
            this.FnDeleteBidResponsPastExperienceDetailsAsync(vendorNo, responsenumber, null);
        }
        
        /// <remarks/>
        public void FnDeleteBidResponsPastExperienceDetailsAsync(string vendorNo, string responsenumber, object userState) {
            if ((this.FnDeleteBidResponsPastExperienceDetailsOperationCompleted == null)) {
                this.FnDeleteBidResponsPastExperienceDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteBidResponsPastExperienceDetailsOperationCompleted);
            }
            this.InvokeAsync("FnDeleteBidResponsPastExperienceDetails", new object[] {
                        vendorNo,
                        responsenumber}, this.FnDeleteBidResponsPastExperienceDetailsOperationCompleted, userState);
        }
        
        private void OnFnDeleteBidResponsPastExperienceDetailsOperationCompleted(object arg) {
            if ((this.FnDeleteBidResponsPastExperienceDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteBidResponsPastExperienceDetailsCompleted(this, new FnDeleteBidResponsPastExperienceDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnDeleteBidResponTenderSecur" +
            "ity", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnDeleteBidResponTenderSecurity_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteBidResponTenderSecurity(string vendorNo, string responsenumber, int securityid) {
            object[] results = this.Invoke("FnDeleteBidResponTenderSecurity", new object[] {
                        vendorNo,
                        responsenumber,
                        securityid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteBidResponTenderSecurityAsync(string vendorNo, string responsenumber, int securityid) {
            this.FnDeleteBidResponTenderSecurityAsync(vendorNo, responsenumber, securityid, null);
        }
        
        /// <remarks/>
        public void FnDeleteBidResponTenderSecurityAsync(string vendorNo, string responsenumber, int securityid, object userState) {
            if ((this.FnDeleteBidResponTenderSecurityOperationCompleted == null)) {
                this.FnDeleteBidResponTenderSecurityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteBidResponTenderSecurityOperationCompleted);
            }
            this.InvokeAsync("FnDeleteBidResponTenderSecurity", new object[] {
                        vendorNo,
                        responsenumber,
                        securityid}, this.FnDeleteBidResponTenderSecurityOperationCompleted, userState);
        }
        
        private void OnFnDeleteBidResponTenderSecurityOperationCompleted(object arg) {
            if ((this.FnDeleteBidResponTenderSecurityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteBidResponTenderSecurityCompleted(this, new FnDeleteBidResponTenderSecurityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertFiledetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertFiledetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertFiledetails(string vendorNo, string procDoctype, string docdescription, string certNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime issuedDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime expiryDate, string fileName, string sharepointlink) {
            object[] results = this.Invoke("FnInsertFiledetails", new object[] {
                        vendorNo,
                        procDoctype,
                        docdescription,
                        certNo,
                        issuedDate,
                        expiryDate,
                        fileName,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertFiledetailsAsync(string vendorNo, string procDoctype, string docdescription, string certNo, System.DateTime issuedDate, System.DateTime expiryDate, string fileName, string sharepointlink) {
            this.FnInsertFiledetailsAsync(vendorNo, procDoctype, docdescription, certNo, issuedDate, expiryDate, fileName, sharepointlink, null);
        }
        
        /// <remarks/>
        public void FnInsertFiledetailsAsync(string vendorNo, string procDoctype, string docdescription, string certNo, System.DateTime issuedDate, System.DateTime expiryDate, string fileName, string sharepointlink, object userState) {
            if ((this.FnInsertFiledetailsOperationCompleted == null)) {
                this.FnInsertFiledetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertFiledetailsOperationCompleted);
            }
            this.InvokeAsync("FnInsertFiledetails", new object[] {
                        vendorNo,
                        procDoctype,
                        docdescription,
                        certNo,
                        issuedDate,
                        expiryDate,
                        fileName,
                        sharepointlink}, this.FnInsertFiledetailsOperationCompleted, userState);
        }
        
        private void OnFnInsertFiledetailsOperationCompleted(object arg) {
            if ((this.FnInsertFiledetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertFiledetailsCompleted(this, new FnInsertFiledetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnBidResponsePastExperience", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnBidResponsePastExperience_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnBidResponsePastExperience(string bidresponseNumber, string clientname, string clientaddresss, string phonenumber, string county, string email, string projectscope, string projectname, string contractref, decimal assignmentvalue, int assignmentstatus, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime assignmentstartdate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime assignmentenddate, string vendorNo) {
            object[] results = this.Invoke("FnBidResponsePastExperience", new object[] {
                        bidresponseNumber,
                        clientname,
                        clientaddresss,
                        phonenumber,
                        county,
                        email,
                        projectscope,
                        projectname,
                        contractref,
                        assignmentvalue,
                        assignmentstatus,
                        assignmentstartdate,
                        assignmentenddate,
                        vendorNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnBidResponsePastExperienceAsync(string bidresponseNumber, string clientname, string clientaddresss, string phonenumber, string county, string email, string projectscope, string projectname, string contractref, decimal assignmentvalue, int assignmentstatus, System.DateTime assignmentstartdate, System.DateTime assignmentenddate, string vendorNo) {
            this.FnBidResponsePastExperienceAsync(bidresponseNumber, clientname, clientaddresss, phonenumber, county, email, projectscope, projectname, contractref, assignmentvalue, assignmentstatus, assignmentstartdate, assignmentenddate, vendorNo, null);
        }
        
        /// <remarks/>
        public void FnBidResponsePastExperienceAsync(string bidresponseNumber, string clientname, string clientaddresss, string phonenumber, string county, string email, string projectscope, string projectname, string contractref, decimal assignmentvalue, int assignmentstatus, System.DateTime assignmentstartdate, System.DateTime assignmentenddate, string vendorNo, object userState) {
            if ((this.FnBidResponsePastExperienceOperationCompleted == null)) {
                this.FnBidResponsePastExperienceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnBidResponsePastExperienceOperationCompleted);
            }
            this.InvokeAsync("FnBidResponsePastExperience", new object[] {
                        bidresponseNumber,
                        clientname,
                        clientaddresss,
                        phonenumber,
                        county,
                        email,
                        projectscope,
                        projectname,
                        contractref,
                        assignmentvalue,
                        assignmentstatus,
                        assignmentstartdate,
                        assignmentenddate,
                        vendorNo}, this.FnBidResponsePastExperienceOperationCompleted, userState);
        }
        
        private void OnFnBidResponsePastExperienceOperationCompleted(object arg) {
            if ((this.FnBidResponsePastExperienceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnBidResponsePastExperienceCompleted(this, new FnBidResponsePastExperienceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertStaffEntry", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertStaffEntry_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertStaffEntry(string vendorNo, string staffName, string profession, string designation, string phoneNumber, string nationality, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateofBirth, string email, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime joiningDate, decimal yearsWithFirm, string staffNumber, int emplymentType) {
            object[] results = this.Invoke("FnInsertStaffEntry", new object[] {
                        vendorNo,
                        staffName,
                        profession,
                        designation,
                        phoneNumber,
                        nationality,
                        dateofBirth,
                        email,
                        joiningDate,
                        yearsWithFirm,
                        staffNumber,
                        emplymentType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertStaffEntryAsync(string vendorNo, string staffName, string profession, string designation, string phoneNumber, string nationality, System.DateTime dateofBirth, string email, System.DateTime joiningDate, decimal yearsWithFirm, string staffNumber, int emplymentType) {
            this.FnInsertStaffEntryAsync(vendorNo, staffName, profession, designation, phoneNumber, nationality, dateofBirth, email, joiningDate, yearsWithFirm, staffNumber, emplymentType, null);
        }
        
        /// <remarks/>
        public void FnInsertStaffEntryAsync(string vendorNo, string staffName, string profession, string designation, string phoneNumber, string nationality, System.DateTime dateofBirth, string email, System.DateTime joiningDate, decimal yearsWithFirm, string staffNumber, int emplymentType, object userState) {
            if ((this.FnInsertStaffEntryOperationCompleted == null)) {
                this.FnInsertStaffEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertStaffEntryOperationCompleted);
            }
            this.InvokeAsync("FnInsertStaffEntry", new object[] {
                        vendorNo,
                        staffName,
                        profession,
                        designation,
                        phoneNumber,
                        nationality,
                        dateofBirth,
                        email,
                        joiningDate,
                        yearsWithFirm,
                        staffNumber,
                        emplymentType}, this.FnInsertStaffEntryOperationCompleted, userState);
        }
        
        private void OnFnInsertStaffEntryOperationCompleted(object arg) {
            if ((this.FnInsertStaffEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertStaffEntryCompleted(this, new FnInsertStaffEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertStaffQlfEntry", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertStaffQlfEntry_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertStaffQlfEntry(string vendorNo, string staffNIDorNumber, int qualifCategory, string qualifcName, string institution, string startYear, string endYear, string outstandingAchievement) {
            object[] results = this.Invoke("FnInsertStaffQlfEntry", new object[] {
                        vendorNo,
                        staffNIDorNumber,
                        qualifCategory,
                        qualifcName,
                        institution,
                        startYear,
                        endYear,
                        outstandingAchievement});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertStaffQlfEntryAsync(string vendorNo, string staffNIDorNumber, int qualifCategory, string qualifcName, string institution, string startYear, string endYear, string outstandingAchievement) {
            this.FnInsertStaffQlfEntryAsync(vendorNo, staffNIDorNumber, qualifCategory, qualifcName, institution, startYear, endYear, outstandingAchievement, null);
        }
        
        /// <remarks/>
        public void FnInsertStaffQlfEntryAsync(string vendorNo, string staffNIDorNumber, int qualifCategory, string qualifcName, string institution, string startYear, string endYear, string outstandingAchievement, object userState) {
            if ((this.FnInsertStaffQlfEntryOperationCompleted == null)) {
                this.FnInsertStaffQlfEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertStaffQlfEntryOperationCompleted);
            }
            this.InvokeAsync("FnInsertStaffQlfEntry", new object[] {
                        vendorNo,
                        staffNIDorNumber,
                        qualifCategory,
                        qualifcName,
                        institution,
                        startYear,
                        endYear,
                        outstandingAchievement}, this.FnInsertStaffQlfEntryOperationCompleted, userState);
        }
        
        private void OnFnInsertStaffQlfEntryOperationCompleted(object arg) {
            if ((this.FnInsertStaffQlfEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertStaffQlfEntryCompleted(this, new FnInsertStaffQlfEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertStaffXPrEntry", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertStaffXPrEntry_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertStaffXPrEntry(string vendorNo, string staffNIDorNumber, int xPrCategory, string xPrSummarry, string assignmentDescription, string startYear, string endYear, decimal yrsofXpr) {
            object[] results = this.Invoke("FnInsertStaffXPrEntry", new object[] {
                        vendorNo,
                        staffNIDorNumber,
                        xPrCategory,
                        xPrSummarry,
                        assignmentDescription,
                        startYear,
                        endYear,
                        yrsofXpr});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertStaffXPrEntryAsync(string vendorNo, string staffNIDorNumber, int xPrCategory, string xPrSummarry, string assignmentDescription, string startYear, string endYear, decimal yrsofXpr) {
            this.FnInsertStaffXPrEntryAsync(vendorNo, staffNIDorNumber, xPrCategory, xPrSummarry, assignmentDescription, startYear, endYear, yrsofXpr, null);
        }
        
        /// <remarks/>
        public void FnInsertStaffXPrEntryAsync(string vendorNo, string staffNIDorNumber, int xPrCategory, string xPrSummarry, string assignmentDescription, string startYear, string endYear, decimal yrsofXpr, object userState) {
            if ((this.FnInsertStaffXPrEntryOperationCompleted == null)) {
                this.FnInsertStaffXPrEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertStaffXPrEntryOperationCompleted);
            }
            this.InvokeAsync("FnInsertStaffXPrEntry", new object[] {
                        vendorNo,
                        staffNIDorNumber,
                        xPrCategory,
                        xPrSummarry,
                        assignmentDescription,
                        startYear,
                        endYear,
                        yrsofXpr}, this.FnInsertStaffXPrEntryOperationCompleted, userState);
        }
        
        private void OnFnInsertStaffXPrEntryOperationCompleted(object arg) {
            if ((this.FnInsertStaffXPrEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertStaffXPrEntryCompleted(this, new FnInsertStaffXPrEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnCompleteSupplierReg", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnCompleteSupplierReg_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCompleteSupplierReg(string vendorNo) {
            object[] results = this.Invoke("FnCompleteSupplierReg", new object[] {
                        vendorNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCompleteSupplierRegAsync(string vendorNo) {
            this.FnCompleteSupplierRegAsync(vendorNo, null);
        }
        
        /// <remarks/>
        public void FnCompleteSupplierRegAsync(string vendorNo, object userState) {
            if ((this.FnCompleteSupplierRegOperationCompleted == null)) {
                this.FnCompleteSupplierRegOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCompleteSupplierRegOperationCompleted);
            }
            this.InvokeAsync("FnCompleteSupplierReg", new object[] {
                        vendorNo}, this.FnCompleteSupplierRegOperationCompleted, userState);
        }
        
        private void OnFnCompleteSupplierRegOperationCompleted(object arg) {
            if ((this.FnCompleteSupplierRegCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCompleteSupplierRegCompleted(this, new FnCompleteSupplierRegCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGetOwnerPercentage", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGetOwnerPercentage_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetOwnerPercentage(string vendorNo) {
            object[] results = this.Invoke("FnGetOwnerPercentage", new object[] {
                        vendorNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetOwnerPercentageAsync(string vendorNo) {
            this.FnGetOwnerPercentageAsync(vendorNo, null);
        }
        
        /// <remarks/>
        public void FnGetOwnerPercentageAsync(string vendorNo, object userState) {
            if ((this.FnGetOwnerPercentageOperationCompleted == null)) {
                this.FnGetOwnerPercentageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetOwnerPercentageOperationCompleted);
            }
            this.InvokeAsync("FnGetOwnerPercentage", new object[] {
                        vendorNo}, this.FnGetOwnerPercentageOperationCompleted, userState);
        }
        
        private void OnFnGetOwnerPercentageOperationCompleted(object arg) {
            if ((this.FnGetOwnerPercentageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetOwnerPercentageCompleted(this, new FnGetOwnerPercentageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertRFIresponseHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertRFIresponseHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertRFIresponseHeader(string vendorNo, string rfiDocumentNo) {
            object[] results = this.Invoke("FnInsertRFIresponseHeader", new object[] {
                        vendorNo,
                        rfiDocumentNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertRFIresponseHeaderAsync(string vendorNo, string rfiDocumentNo) {
            this.FnInsertRFIresponseHeaderAsync(vendorNo, rfiDocumentNo, null);
        }
        
        /// <remarks/>
        public void FnInsertRFIresponseHeaderAsync(string vendorNo, string rfiDocumentNo, object userState) {
            if ((this.FnInsertRFIresponseHeaderOperationCompleted == null)) {
                this.FnInsertRFIresponseHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertRFIresponseHeaderOperationCompleted);
            }
            this.InvokeAsync("FnInsertRFIresponseHeader", new object[] {
                        vendorNo,
                        rfiDocumentNo}, this.FnInsertRFIresponseHeaderOperationCompleted, userState);
        }
        
        private void OnFnInsertRFIresponseHeaderOperationCompleted(object arg) {
            if ((this.FnInsertRFIresponseHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertRFIresponseHeaderCompleted(this, new FnInsertRFIresponseHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGetLastDocumentNoRegistrat" +
            "ion", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGetLastDocumentNoRegistration_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetLastDocumentNoRegistration(string vendorNo, string rfiDocumentNo) {
            object[] results = this.Invoke("FnGetLastDocumentNoRegistration", new object[] {
                        vendorNo,
                        rfiDocumentNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetLastDocumentNoRegistrationAsync(string vendorNo, string rfiDocumentNo) {
            this.FnGetLastDocumentNoRegistrationAsync(vendorNo, rfiDocumentNo, null);
        }
        
        /// <remarks/>
        public void FnGetLastDocumentNoRegistrationAsync(string vendorNo, string rfiDocumentNo, object userState) {
            if ((this.FnGetLastDocumentNoRegistrationOperationCompleted == null)) {
                this.FnGetLastDocumentNoRegistrationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetLastDocumentNoRegistrationOperationCompleted);
            }
            this.InvokeAsync("FnGetLastDocumentNoRegistration", new object[] {
                        vendorNo,
                        rfiDocumentNo}, this.FnGetLastDocumentNoRegistrationOperationCompleted, userState);
        }
        
        private void OnFnGetLastDocumentNoRegistrationOperationCompleted(object arg) {
            if ((this.FnGetLastDocumentNoRegistrationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetLastDocumentNoRegistrationCompleted(this, new FnGetLastDocumentNoRegistrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGetLastDocumentNo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGetLastDocumentNo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetLastDocumentNo(string vendorNo, string rfiDocumentNo) {
            object[] results = this.Invoke("FnGetLastDocumentNo", new object[] {
                        vendorNo,
                        rfiDocumentNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetLastDocumentNoAsync(string vendorNo, string rfiDocumentNo) {
            this.FnGetLastDocumentNoAsync(vendorNo, rfiDocumentNo, null);
        }
        
        /// <remarks/>
        public void FnGetLastDocumentNoAsync(string vendorNo, string rfiDocumentNo, object userState) {
            if ((this.FnGetLastDocumentNoOperationCompleted == null)) {
                this.FnGetLastDocumentNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetLastDocumentNoOperationCompleted);
            }
            this.InvokeAsync("FnGetLastDocumentNo", new object[] {
                        vendorNo,
                        rfiDocumentNo}, this.FnGetLastDocumentNoOperationCompleted, userState);
        }
        
        private void OnFnGetLastDocumentNoOperationCompleted(object arg) {
            if ((this.FnGetLastDocumentNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetLastDocumentNoCompleted(this, new FnGetLastDocumentNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertIFRResponseLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertIFRResponseLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertIFRResponseLines(string documentNo, string procurementCategory, string rfiDocumentNo, string vendorNo, string regionCode, string constituencyCode, int evalutionDecision) {
            object[] results = this.Invoke("FnInsertIFRResponseLines", new object[] {
                        documentNo,
                        procurementCategory,
                        rfiDocumentNo,
                        vendorNo,
                        regionCode,
                        constituencyCode,
                        evalutionDecision});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertIFRResponseLinesAsync(string documentNo, string procurementCategory, string rfiDocumentNo, string vendorNo, string regionCode, string constituencyCode, int evalutionDecision) {
            this.FnInsertIFRResponseLinesAsync(documentNo, procurementCategory, rfiDocumentNo, vendorNo, regionCode, constituencyCode, evalutionDecision, null);
        }
        
        /// <remarks/>
        public void FnInsertIFRResponseLinesAsync(string documentNo, string procurementCategory, string rfiDocumentNo, string vendorNo, string regionCode, string constituencyCode, int evalutionDecision, object userState) {
            if ((this.FnInsertIFRResponseLinesOperationCompleted == null)) {
                this.FnInsertIFRResponseLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertIFRResponseLinesOperationCompleted);
            }
            this.InvokeAsync("FnInsertIFRResponseLines", new object[] {
                        documentNo,
                        procurementCategory,
                        rfiDocumentNo,
                        vendorNo,
                        regionCode,
                        constituencyCode,
                        evalutionDecision}, this.FnInsertIFRResponseLinesOperationCompleted, userState);
        }
        
        private void OnFnInsertIFRResponseLinesOperationCompleted(object arg) {
            if ((this.FnInsertIFRResponseLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertIFRResponseLinesCompleted(this, new FnInsertIFRResponseLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertRFIResponseLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertRFIResponseLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertRFIResponseLines(string documentNo, string procurementCategory, string rfiDocumentNo, string vendorNo, string regionCode, string constituencyCode, int evalutionDecision) {
            object[] results = this.Invoke("FnInsertRFIResponseLines", new object[] {
                        documentNo,
                        procurementCategory,
                        rfiDocumentNo,
                        vendorNo,
                        regionCode,
                        constituencyCode,
                        evalutionDecision});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertRFIResponseLinesAsync(string documentNo, string procurementCategory, string rfiDocumentNo, string vendorNo, string regionCode, string constituencyCode, int evalutionDecision) {
            this.FnInsertRFIResponseLinesAsync(documentNo, procurementCategory, rfiDocumentNo, vendorNo, regionCode, constituencyCode, evalutionDecision, null);
        }
        
        /// <remarks/>
        public void FnInsertRFIResponseLinesAsync(string documentNo, string procurementCategory, string rfiDocumentNo, string vendorNo, string regionCode, string constituencyCode, int evalutionDecision, object userState) {
            if ((this.FnInsertRFIResponseLinesOperationCompleted == null)) {
                this.FnInsertRFIResponseLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertRFIResponseLinesOperationCompleted);
            }
            this.InvokeAsync("FnInsertRFIResponseLines", new object[] {
                        documentNo,
                        procurementCategory,
                        rfiDocumentNo,
                        vendorNo,
                        regionCode,
                        constituencyCode,
                        evalutionDecision}, this.FnInsertRFIResponseLinesOperationCompleted, userState);
        }
        
        private void OnFnInsertRFIResponseLinesOperationCompleted(object arg) {
            if ((this.FnInsertRFIResponseLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertRFIResponseLinesCompleted(this, new FnInsertRFIResponseLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertRFIResponseLinesDeta" +
            "ils", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertRFIResponseLinesDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertRFIResponseLinesDetails(string documentNo, string procurementCategory, string rfiDocumentNo, string vendorNo) {
            object[] results = this.Invoke("FnInsertRFIResponseLinesDetails", new object[] {
                        documentNo,
                        procurementCategory,
                        rfiDocumentNo,
                        vendorNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertRFIResponseLinesDetailsAsync(string documentNo, string procurementCategory, string rfiDocumentNo, string vendorNo) {
            this.FnInsertRFIResponseLinesDetailsAsync(documentNo, procurementCategory, rfiDocumentNo, vendorNo, null);
        }
        
        /// <remarks/>
        public void FnInsertRFIResponseLinesDetailsAsync(string documentNo, string procurementCategory, string rfiDocumentNo, string vendorNo, object userState) {
            if ((this.FnInsertRFIResponseLinesDetailsOperationCompleted == null)) {
                this.FnInsertRFIResponseLinesDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertRFIResponseLinesDetailsOperationCompleted);
            }
            this.InvokeAsync("FnInsertRFIResponseLinesDetails", new object[] {
                        documentNo,
                        procurementCategory,
                        rfiDocumentNo,
                        vendorNo}, this.FnInsertRFIResponseLinesDetailsOperationCompleted, userState);
        }
        
        private void OnFnInsertRFIResponseLinesDetailsOperationCompleted(object arg) {
            if ((this.FnInsertRFIResponseLinesDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertRFIResponseLinesDetailsCompleted(this, new FnInsertRFIResponseLinesDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitResponseFinal", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitResponseFinal_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitResponseFinal(string vendorNo, string rfiDocumentNo, string repFullname, string repDesignation, string rfiApplNo) {
            object[] results = this.Invoke("FnSubmitResponseFinal", new object[] {
                        vendorNo,
                        rfiDocumentNo,
                        repFullname,
                        repDesignation,
                        rfiApplNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitResponseFinalAsync(string vendorNo, string rfiDocumentNo, string repFullname, string repDesignation, string rfiApplNo) {
            this.FnSubmitResponseFinalAsync(vendorNo, rfiDocumentNo, repFullname, repDesignation, rfiApplNo, null);
        }
        
        /// <remarks/>
        public void FnSubmitResponseFinalAsync(string vendorNo, string rfiDocumentNo, string repFullname, string repDesignation, string rfiApplNo, object userState) {
            if ((this.FnSubmitResponseFinalOperationCompleted == null)) {
                this.FnSubmitResponseFinalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitResponseFinalOperationCompleted);
            }
            this.InvokeAsync("FnSubmitResponseFinal", new object[] {
                        vendorNo,
                        rfiDocumentNo,
                        repFullname,
                        repDesignation,
                        rfiApplNo}, this.FnSubmitResponseFinalOperationCompleted, userState);
        }
        
        private void OnFnSubmitResponseFinalOperationCompleted(object arg) {
            if ((this.FnSubmitResponseFinalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitResponseFinalCompleted(this, new FnSubmitResponseFinalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnPrequalificationResponseDe" +
            "tails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnPrequalificationResponseDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnPrequalificationResponseDetails(string vendorNo, string rfiDocumentNo, string repFullname, string repDesignation, string rfiAppliNo, string region, string constituency, string registrationPeriod) {
            object[] results = this.Invoke("FnPrequalificationResponseDetails", new object[] {
                        vendorNo,
                        rfiDocumentNo,
                        repFullname,
                        repDesignation,
                        rfiAppliNo,
                        region,
                        constituency,
                        registrationPeriod});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnPrequalificationResponseDetailsAsync(string vendorNo, string rfiDocumentNo, string repFullname, string repDesignation, string rfiAppliNo, string region, string constituency, string registrationPeriod) {
            this.FnPrequalificationResponseDetailsAsync(vendorNo, rfiDocumentNo, repFullname, repDesignation, rfiAppliNo, region, constituency, registrationPeriod, null);
        }
        
        /// <remarks/>
        public void FnPrequalificationResponseDetailsAsync(string vendorNo, string rfiDocumentNo, string repFullname, string repDesignation, string rfiAppliNo, string region, string constituency, string registrationPeriod, object userState) {
            if ((this.FnPrequalificationResponseDetailsOperationCompleted == null)) {
                this.FnPrequalificationResponseDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnPrequalificationResponseDetailsOperationCompleted);
            }
            this.InvokeAsync("FnPrequalificationResponseDetails", new object[] {
                        vendorNo,
                        rfiDocumentNo,
                        repFullname,
                        repDesignation,
                        rfiAppliNo,
                        region,
                        constituency,
                        registrationPeriod}, this.FnPrequalificationResponseDetailsOperationCompleted, userState);
        }
        
        private void OnFnPrequalificationResponseDetailsOperationCompleted(object arg) {
            if ((this.FnPrequalificationResponseDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnPrequalificationResponseDetailsCompleted(this, new FnPrequalificationResponseDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertFiledetails_Rfi", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertFiledetails_Rfi_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertFiledetails_Rfi(string vendorNo, string procDoctype, string docdescription, string certNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime issuedDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime expiryDate, string fileName, string documentNo) {
            object[] results = this.Invoke("FnInsertFiledetails_Rfi", new object[] {
                        vendorNo,
                        procDoctype,
                        docdescription,
                        certNo,
                        issuedDate,
                        expiryDate,
                        fileName,
                        documentNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertFiledetails_RfiAsync(string vendorNo, string procDoctype, string docdescription, string certNo, System.DateTime issuedDate, System.DateTime expiryDate, string fileName, string documentNo) {
            this.FnInsertFiledetails_RfiAsync(vendorNo, procDoctype, docdescription, certNo, issuedDate, expiryDate, fileName, documentNo, null);
        }
        
        /// <remarks/>
        public void FnInsertFiledetails_RfiAsync(string vendorNo, string procDoctype, string docdescription, string certNo, System.DateTime issuedDate, System.DateTime expiryDate, string fileName, string documentNo, object userState) {
            if ((this.FnInsertFiledetails_RfiOperationCompleted == null)) {
                this.FnInsertFiledetails_RfiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertFiledetails_RfiOperationCompleted);
            }
            this.InvokeAsync("FnInsertFiledetails_Rfi", new object[] {
                        vendorNo,
                        procDoctype,
                        docdescription,
                        certNo,
                        issuedDate,
                        expiryDate,
                        fileName,
                        documentNo}, this.FnInsertFiledetails_RfiOperationCompleted, userState);
        }
        
        private void OnFnInsertFiledetails_RfiOperationCompleted(object arg) {
            if ((this.FnInsertFiledetails_RfiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertFiledetails_RfiCompleted(this, new FnInsertFiledetails_RfiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertPrequalificatinDocum" +
            "ents", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertPrequalificatinDocuments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertPrequalificatinDocuments(string vendorNo, string procDoctype, string docdescription, string certNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime issuedDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime expiryDate, string fileName, string documentNo, string sharepointLink) {
            object[] results = this.Invoke("FnInsertPrequalificatinDocuments", new object[] {
                        vendorNo,
                        procDoctype,
                        docdescription,
                        certNo,
                        issuedDate,
                        expiryDate,
                        fileName,
                        documentNo,
                        sharepointLink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertPrequalificatinDocumentsAsync(string vendorNo, string procDoctype, string docdescription, string certNo, System.DateTime issuedDate, System.DateTime expiryDate, string fileName, string documentNo, string sharepointLink) {
            this.FnInsertPrequalificatinDocumentsAsync(vendorNo, procDoctype, docdescription, certNo, issuedDate, expiryDate, fileName, documentNo, sharepointLink, null);
        }
        
        /// <remarks/>
        public void FnInsertPrequalificatinDocumentsAsync(string vendorNo, string procDoctype, string docdescription, string certNo, System.DateTime issuedDate, System.DateTime expiryDate, string fileName, string documentNo, string sharepointLink, object userState) {
            if ((this.FnInsertPrequalificatinDocumentsOperationCompleted == null)) {
                this.FnInsertPrequalificatinDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertPrequalificatinDocumentsOperationCompleted);
            }
            this.InvokeAsync("FnInsertPrequalificatinDocuments", new object[] {
                        vendorNo,
                        procDoctype,
                        docdescription,
                        certNo,
                        issuedDate,
                        expiryDate,
                        fileName,
                        documentNo,
                        sharepointLink}, this.FnInsertPrequalificatinDocumentsOperationCompleted, userState);
        }
        
        private void OnFnInsertPrequalificatinDocumentsOperationCompleted(object arg) {
            if ((this.FnInsertPrequalificatinDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertPrequalificatinDocumentsCompleted(this, new FnInsertPrequalificatinDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertBidReponseDocuments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertBidReponseDocuments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertBidReponseDocuments(string vendorNo, string procDoctype, string docdescription, string certNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime issuedDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime expiryDate, string fileName, string documentNo, string sharepointLink) {
            object[] results = this.Invoke("FnInsertBidReponseDocuments", new object[] {
                        vendorNo,
                        procDoctype,
                        docdescription,
                        certNo,
                        issuedDate,
                        expiryDate,
                        fileName,
                        documentNo,
                        sharepointLink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertBidReponseDocumentsAsync(string vendorNo, string procDoctype, string docdescription, string certNo, System.DateTime issuedDate, System.DateTime expiryDate, string fileName, string documentNo, string sharepointLink) {
            this.FnInsertBidReponseDocumentsAsync(vendorNo, procDoctype, docdescription, certNo, issuedDate, expiryDate, fileName, documentNo, sharepointLink, null);
        }
        
        /// <remarks/>
        public void FnInsertBidReponseDocumentsAsync(string vendorNo, string procDoctype, string docdescription, string certNo, System.DateTime issuedDate, System.DateTime expiryDate, string fileName, string documentNo, string sharepointLink, object userState) {
            if ((this.FnInsertBidReponseDocumentsOperationCompleted == null)) {
                this.FnInsertBidReponseDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertBidReponseDocumentsOperationCompleted);
            }
            this.InvokeAsync("FnInsertBidReponseDocuments", new object[] {
                        vendorNo,
                        procDoctype,
                        docdescription,
                        certNo,
                        issuedDate,
                        expiryDate,
                        fileName,
                        documentNo,
                        sharepointLink}, this.FnInsertBidReponseDocumentsOperationCompleted, userState);
        }
        
        private void OnFnInsertBidReponseDocumentsOperationCompleted(object arg) {
            if ((this.FnInsertBidReponseDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertBidReponseDocumentsCompleted(this, new FnInsertBidReponseDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmisionResponseStatus", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmisionResponseStatus_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmisionResponseStatus(string rfiDocumentNo) {
            object[] results = this.Invoke("FnSubmisionResponseStatus", new object[] {
                        rfiDocumentNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmisionResponseStatusAsync(string rfiDocumentNo) {
            this.FnSubmisionResponseStatusAsync(rfiDocumentNo, null);
        }
        
        /// <remarks/>
        public void FnSubmisionResponseStatusAsync(string rfiDocumentNo, object userState) {
            if ((this.FnSubmisionResponseStatusOperationCompleted == null)) {
                this.FnSubmisionResponseStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmisionResponseStatusOperationCompleted);
            }
            this.InvokeAsync("FnSubmisionResponseStatus", new object[] {
                        rfiDocumentNo}, this.FnSubmisionResponseStatusOperationCompleted, userState);
        }
        
        private void OnFnSubmisionResponseStatusOperationCompleted(object arg) {
            if ((this.FnSubmisionResponseStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmisionResponseStatusCompleted(this, new FnSubmisionResponseStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGetEvalCritScores", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGetEvalCritScores_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public decimal FnGetEvalCritScores(string templateID, int evaluationType) {
            object[] results = this.Invoke("FnGetEvalCritScores", new object[] {
                        templateID,
                        evaluationType});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetEvalCritScoresAsync(string templateID, int evaluationType) {
            this.FnGetEvalCritScoresAsync(templateID, evaluationType, null);
        }
        
        /// <remarks/>
        public void FnGetEvalCritScoresAsync(string templateID, int evaluationType, object userState) {
            if ((this.FnGetEvalCritScoresOperationCompleted == null)) {
                this.FnGetEvalCritScoresOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetEvalCritScoresOperationCompleted);
            }
            this.InvokeAsync("FnGetEvalCritScores", new object[] {
                        templateID,
                        evaluationType}, this.FnGetEvalCritScoresOperationCompleted, userState);
        }
        
        private void OnFnGetEvalCritScoresOperationCompleted(object arg) {
            if ((this.FnGetEvalCritScoresCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetEvalCritScoresCompleted(this, new FnGetEvalCritScoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnrfiResponsetLinks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnrfiResponsetLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnrfiResponsetLinks(string rfnumber, string filename, string sharepointlink) {
            object[] results = this.Invoke("FnrfiResponsetLinks", new object[] {
                        rfnumber,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnrfiResponsetLinksAsync(string rfnumber, string filename, string sharepointlink) {
            this.FnrfiResponsetLinksAsync(rfnumber, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void FnrfiResponsetLinksAsync(string rfnumber, string filename, string sharepointlink, object userState) {
            if ((this.FnrfiResponsetLinksOperationCompleted == null)) {
                this.FnrfiResponsetLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnrfiResponsetLinksOperationCompleted);
            }
            this.InvokeAsync("FnrfiResponsetLinks", new object[] {
                        rfnumber,
                        filename,
                        sharepointlink}, this.FnrfiResponsetLinksOperationCompleted, userState);
        }
        
        private void OnFnrfiResponsetLinksOperationCompleted(object arg) {
            if ((this.FnrfiResponsetLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnrfiResponsetLinksCompleted(this, new FnrfiResponsetLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSupplierRegistrationLinks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSupplierRegistrationLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSupplierRegistrationLinks(string vendorNumber, string filename, string sharepointlink) {
            object[] results = this.Invoke("FnSupplierRegistrationLinks", new object[] {
                        vendorNumber,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSupplierRegistrationLinksAsync(string vendorNumber, string filename, string sharepointlink) {
            this.FnSupplierRegistrationLinksAsync(vendorNumber, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void FnSupplierRegistrationLinksAsync(string vendorNumber, string filename, string sharepointlink, object userState) {
            if ((this.FnSupplierRegistrationLinksOperationCompleted == null)) {
                this.FnSupplierRegistrationLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSupplierRegistrationLinksOperationCompleted);
            }
            this.InvokeAsync("FnSupplierRegistrationLinks", new object[] {
                        vendorNumber,
                        filename,
                        sharepointlink}, this.FnSupplierRegistrationLinksOperationCompleted, userState);
        }
        
        private void OnFnSupplierRegistrationLinksOperationCompleted(object arg) {
            if ((this.FnSupplierRegistrationLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSupplierRegistrationLinksCompleted(this, new FnSupplierRegistrationLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitTenderResponse", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitTenderResponse_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitTenderResponse(string vendornumber, string invitationnumber) {
            object[] results = this.Invoke("FnSubmitTenderResponse", new object[] {
                        vendornumber,
                        invitationnumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitTenderResponseAsync(string vendornumber, string invitationnumber) {
            this.FnSubmitTenderResponseAsync(vendornumber, invitationnumber, null);
        }
        
        /// <remarks/>
        public void FnSubmitTenderResponseAsync(string vendornumber, string invitationnumber, object userState) {
            if ((this.FnSubmitTenderResponseOperationCompleted == null)) {
                this.FnSubmitTenderResponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitTenderResponseOperationCompleted);
            }
            this.InvokeAsync("FnSubmitTenderResponse", new object[] {
                        vendornumber,
                        invitationnumber}, this.FnSubmitTenderResponseOperationCompleted, userState);
        }
        
        private void OnFnSubmitTenderResponseOperationCompleted(object arg) {
            if ((this.FnSubmitTenderResponseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitTenderResponseCompleted(this, new FnSubmitTenderResponseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FngetBidResponseNumber", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FngetBidResponseNumber_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetBidResponseNumber(string invitationNumber, string vendorNumber) {
            object[] results = this.Invoke("FngetBidResponseNumber", new object[] {
                        invitationNumber,
                        vendorNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetBidResponseNumberAsync(string invitationNumber, string vendorNumber) {
            this.FngetBidResponseNumberAsync(invitationNumber, vendorNumber, null);
        }
        
        /// <remarks/>
        public void FngetBidResponseNumberAsync(string invitationNumber, string vendorNumber, object userState) {
            if ((this.FngetBidResponseNumberOperationCompleted == null)) {
                this.FngetBidResponseNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetBidResponseNumberOperationCompleted);
            }
            this.InvokeAsync("FngetBidResponseNumber", new object[] {
                        invitationNumber,
                        vendorNumber}, this.FngetBidResponseNumberOperationCompleted, userState);
        }
        
        private void OnFngetBidResponseNumberOperationCompleted(object arg) {
            if ((this.FngetBidResponseNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetBidResponseNumberCompleted(this, new FngetBidResponseNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInserBidInfoTab1", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInserBidInfoTab1_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInserBidInfoTab1(string vendorNo, string ittNumber, string bidderRepName, string bidderRepDesignation, string bidderRepAddr, string bidderWitnessName, string bidderWitnessDesignation, string bidderWitnessAddr) {
            object[] results = this.Invoke("FnInserBidInfoTab1", new object[] {
                        vendorNo,
                        ittNumber,
                        bidderRepName,
                        bidderRepDesignation,
                        bidderRepAddr,
                        bidderWitnessName,
                        bidderWitnessDesignation,
                        bidderWitnessAddr});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInserBidInfoTab1Async(string vendorNo, string ittNumber, string bidderRepName, string bidderRepDesignation, string bidderRepAddr, string bidderWitnessName, string bidderWitnessDesignation, string bidderWitnessAddr) {
            this.FnInserBidInfoTab1Async(vendorNo, ittNumber, bidderRepName, bidderRepDesignation, bidderRepAddr, bidderWitnessName, bidderWitnessDesignation, bidderWitnessAddr, null);
        }
        
        /// <remarks/>
        public void FnInserBidInfoTab1Async(string vendorNo, string ittNumber, string bidderRepName, string bidderRepDesignation, string bidderRepAddr, string bidderWitnessName, string bidderWitnessDesignation, string bidderWitnessAddr, object userState) {
            if ((this.FnInserBidInfoTab1OperationCompleted == null)) {
                this.FnInserBidInfoTab1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInserBidInfoTab1OperationCompleted);
            }
            this.InvokeAsync("FnInserBidInfoTab1", new object[] {
                        vendorNo,
                        ittNumber,
                        bidderRepName,
                        bidderRepDesignation,
                        bidderRepAddr,
                        bidderWitnessName,
                        bidderWitnessDesignation,
                        bidderWitnessAddr}, this.FnInserBidInfoTab1OperationCompleted, userState);
        }
        
        private void OnFnInserBidInfoTab1OperationCompleted(object arg) {
            if ((this.FnInserBidInfoTab1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInserBidInfoTab1Completed(this, new FnInserBidInfoTab1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInserBidGeneralDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInserBidGeneralDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInserBidGeneralDetails(string vendorNo, string ittNumber, string bidderRepName, string bidderRepDesignation, string bidderRepAddr, string bidderWitnessName, string bidderWitnessDesignation, string bidderWitnessAddr, string bidderpaymentrefrence, int biddertype, string bidderdocumentssource, string bidderjointventure) {
            object[] results = this.Invoke("FnInserBidGeneralDetails", new object[] {
                        vendorNo,
                        ittNumber,
                        bidderRepName,
                        bidderRepDesignation,
                        bidderRepAddr,
                        bidderWitnessName,
                        bidderWitnessDesignation,
                        bidderWitnessAddr,
                        bidderpaymentrefrence,
                        biddertype,
                        bidderdocumentssource,
                        bidderjointventure});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInserBidGeneralDetailsAsync(string vendorNo, string ittNumber, string bidderRepName, string bidderRepDesignation, string bidderRepAddr, string bidderWitnessName, string bidderWitnessDesignation, string bidderWitnessAddr, string bidderpaymentrefrence, int biddertype, string bidderdocumentssource, string bidderjointventure) {
            this.FnInserBidGeneralDetailsAsync(vendorNo, ittNumber, bidderRepName, bidderRepDesignation, bidderRepAddr, bidderWitnessName, bidderWitnessDesignation, bidderWitnessAddr, bidderpaymentrefrence, biddertype, bidderdocumentssource, bidderjointventure, null);
        }
        
        /// <remarks/>
        public void FnInserBidGeneralDetailsAsync(string vendorNo, string ittNumber, string bidderRepName, string bidderRepDesignation, string bidderRepAddr, string bidderWitnessName, string bidderWitnessDesignation, string bidderWitnessAddr, string bidderpaymentrefrence, int biddertype, string bidderdocumentssource, string bidderjointventure, object userState) {
            if ((this.FnInserBidGeneralDetailsOperationCompleted == null)) {
                this.FnInserBidGeneralDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInserBidGeneralDetailsOperationCompleted);
            }
            this.InvokeAsync("FnInserBidGeneralDetails", new object[] {
                        vendorNo,
                        ittNumber,
                        bidderRepName,
                        bidderRepDesignation,
                        bidderRepAddr,
                        bidderWitnessName,
                        bidderWitnessDesignation,
                        bidderWitnessAddr,
                        bidderpaymentrefrence,
                        biddertype,
                        bidderdocumentssource,
                        bidderjointventure}, this.FnInserBidGeneralDetailsOperationCompleted, userState);
        }
        
        private void OnFnInserBidGeneralDetailsOperationCompleted(object arg) {
            if ((this.FnInserBidGeneralDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInserBidGeneralDetailsCompleted(this, new FnInserBidGeneralDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertBidPersonnelDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertBidPersonnelDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertBidPersonnelDetails(string vendorNo, string biddernumber, string staffName, int staffcategory, int emplymentType, string emailAddress, string profession, string projectRoleCode, string requiredProjectRole) {
            object[] results = this.Invoke("FnInsertBidPersonnelDetails", new object[] {
                        vendorNo,
                        biddernumber,
                        staffName,
                        staffcategory,
                        emplymentType,
                        emailAddress,
                        profession,
                        projectRoleCode,
                        requiredProjectRole});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertBidPersonnelDetailsAsync(string vendorNo, string biddernumber, string staffName, int staffcategory, int emplymentType, string emailAddress, string profession, string projectRoleCode, string requiredProjectRole) {
            this.FnInsertBidPersonnelDetailsAsync(vendorNo, biddernumber, staffName, staffcategory, emplymentType, emailAddress, profession, projectRoleCode, requiredProjectRole, null);
        }
        
        /// <remarks/>
        public void FnInsertBidPersonnelDetailsAsync(string vendorNo, string biddernumber, string staffName, int staffcategory, int emplymentType, string emailAddress, string profession, string projectRoleCode, string requiredProjectRole, object userState) {
            if ((this.FnInsertBidPersonnelDetailsOperationCompleted == null)) {
                this.FnInsertBidPersonnelDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertBidPersonnelDetailsOperationCompleted);
            }
            this.InvokeAsync("FnInsertBidPersonnelDetails", new object[] {
                        vendorNo,
                        biddernumber,
                        staffName,
                        staffcategory,
                        emplymentType,
                        emailAddress,
                        profession,
                        projectRoleCode,
                        requiredProjectRole}, this.FnInsertBidPersonnelDetailsOperationCompleted, userState);
        }
        
        private void OnFnInsertBidPersonnelDetailsOperationCompleted(object arg) {
            if ((this.FnInsertBidPersonnelDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertBidPersonnelDetailsCompleted(this, new FnInsertBidPersonnelDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertBidEquipmentsDetails" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertBidEquipmentsDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertBidEquipmentsDetails(string vendorNo, string biddernumber, string equipmentcategory, int ownershiptypes, decimal equipmentyearsused, int equipmentcondition, int equipmentusabilitycode, string equipmentserialnumber, decimal equipmentsQuantity) {
            object[] results = this.Invoke("FnInsertBidEquipmentsDetails", new object[] {
                        vendorNo,
                        biddernumber,
                        equipmentcategory,
                        ownershiptypes,
                        equipmentyearsused,
                        equipmentcondition,
                        equipmentusabilitycode,
                        equipmentserialnumber,
                        equipmentsQuantity});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertBidEquipmentsDetailsAsync(string vendorNo, string biddernumber, string equipmentcategory, int ownershiptypes, decimal equipmentyearsused, int equipmentcondition, int equipmentusabilitycode, string equipmentserialnumber, decimal equipmentsQuantity) {
            this.FnInsertBidEquipmentsDetailsAsync(vendorNo, biddernumber, equipmentcategory, ownershiptypes, equipmentyearsused, equipmentcondition, equipmentusabilitycode, equipmentserialnumber, equipmentsQuantity, null);
        }
        
        /// <remarks/>
        public void FnInsertBidEquipmentsDetailsAsync(string vendorNo, string biddernumber, string equipmentcategory, int ownershiptypes, decimal equipmentyearsused, int equipmentcondition, int equipmentusabilitycode, string equipmentserialnumber, decimal equipmentsQuantity, object userState) {
            if ((this.FnInsertBidEquipmentsDetailsOperationCompleted == null)) {
                this.FnInsertBidEquipmentsDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertBidEquipmentsDetailsOperationCompleted);
            }
            this.InvokeAsync("FnInsertBidEquipmentsDetails", new object[] {
                        vendorNo,
                        biddernumber,
                        equipmentcategory,
                        ownershiptypes,
                        equipmentyearsused,
                        equipmentcondition,
                        equipmentusabilitycode,
                        equipmentserialnumber,
                        equipmentsQuantity}, this.FnInsertBidEquipmentsDetailsOperationCompleted, userState);
        }
        
        private void OnFnInsertBidEquipmentsDetailsOperationCompleted(object arg) {
            if ((this.FnInsertBidEquipmentsDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertBidEquipmentsDetailsCompleted(this, new FnInsertBidEquipmentsDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnAddBidPrefr", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnAddBidPrefr_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAddBidPrefr(string agpoCertNo, string vendornumber, string invitationnumber, string registeredSpecialgrpe, string productorserviceCategory, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime certEffectiveDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime certXpiryDate) {
            object[] results = this.Invoke("FnAddBidPrefr", new object[] {
                        agpoCertNo,
                        vendornumber,
                        invitationnumber,
                        registeredSpecialgrpe,
                        productorserviceCategory,
                        certEffectiveDate,
                        certXpiryDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAddBidPrefrAsync(string agpoCertNo, string vendornumber, string invitationnumber, string registeredSpecialgrpe, string productorserviceCategory, System.DateTime certEffectiveDate, System.DateTime certXpiryDate) {
            this.FnAddBidPrefrAsync(agpoCertNo, vendornumber, invitationnumber, registeredSpecialgrpe, productorserviceCategory, certEffectiveDate, certXpiryDate, null);
        }
        
        /// <remarks/>
        public void FnAddBidPrefrAsync(string agpoCertNo, string vendornumber, string invitationnumber, string registeredSpecialgrpe, string productorserviceCategory, System.DateTime certEffectiveDate, System.DateTime certXpiryDate, object userState) {
            if ((this.FnAddBidPrefrOperationCompleted == null)) {
                this.FnAddBidPrefrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddBidPrefrOperationCompleted);
            }
            this.InvokeAsync("FnAddBidPrefr", new object[] {
                        agpoCertNo,
                        vendornumber,
                        invitationnumber,
                        registeredSpecialgrpe,
                        productorserviceCategory,
                        certEffectiveDate,
                        certXpiryDate}, this.FnAddBidPrefrOperationCompleted, userState);
        }
        
        private void OnFnAddBidPrefrOperationCompleted(object arg) {
            if ((this.FnAddBidPrefrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddBidPrefrCompleted(this, new FnAddBidPrefrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnDeleteBidAuditedBalsheet", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnDeleteBidAuditedBalsheet_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteBidAuditedBalsheet(string auditYearCode, string vendorNo, string responseNo) {
            object[] results = this.Invoke("FnDeleteBidAuditedBalsheet", new object[] {
                        auditYearCode,
                        vendorNo,
                        responseNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteBidAuditedBalsheetAsync(string auditYearCode, string vendorNo, string responseNo) {
            this.FnDeleteBidAuditedBalsheetAsync(auditYearCode, vendorNo, responseNo, null);
        }
        
        /// <remarks/>
        public void FnDeleteBidAuditedBalsheetAsync(string auditYearCode, string vendorNo, string responseNo, object userState) {
            if ((this.FnDeleteBidAuditedBalsheetOperationCompleted == null)) {
                this.FnDeleteBidAuditedBalsheetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteBidAuditedBalsheetOperationCompleted);
            }
            this.InvokeAsync("FnDeleteBidAuditedBalsheet", new object[] {
                        auditYearCode,
                        vendorNo,
                        responseNo}, this.FnDeleteBidAuditedBalsheetOperationCompleted, userState);
        }
        
        private void OnFnDeleteBidAuditedBalsheetOperationCompleted(object arg) {
            if ((this.FnDeleteBidAuditedBalsheetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteBidAuditedBalsheetCompleted(this, new FnDeleteBidAuditedBalsheetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:ResetSendEmail", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="ResetSendEmail_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ResetSendEmail(string emailaddress) {
            this.Invoke("ResetSendEmail", new object[] {
                        emailaddress});
        }
        
        /// <remarks/>
        public void ResetSendEmailAsync(string emailaddress) {
            this.ResetSendEmailAsync(emailaddress, null);
        }
        
        /// <remarks/>
        public void ResetSendEmailAsync(string emailaddress, object userState) {
            if ((this.ResetSendEmailOperationCompleted == null)) {
                this.ResetSendEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetSendEmailOperationCompleted);
            }
            this.InvokeAsync("ResetSendEmail", new object[] {
                        emailaddress}, this.ResetSendEmailOperationCompleted, userState);
        }
        
        private void OnResetSendEmailOperationCompleted(object arg) {
            if ((this.ResetSendEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetSendEmailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitRFQResponse", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitRFQResponse_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitRFQResponse(string vendornumber, string invitationnumber) {
            object[] results = this.Invoke("FnSubmitRFQResponse", new object[] {
                        vendornumber,
                        invitationnumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitRFQResponseAsync(string vendornumber, string invitationnumber) {
            this.FnSubmitRFQResponseAsync(vendornumber, invitationnumber, null);
        }
        
        /// <remarks/>
        public void FnSubmitRFQResponseAsync(string vendornumber, string invitationnumber, object userState) {
            if ((this.FnSubmitRFQResponseOperationCompleted == null)) {
                this.FnSubmitRFQResponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitRFQResponseOperationCompleted);
            }
            this.InvokeAsync("FnSubmitRFQResponse", new object[] {
                        vendornumber,
                        invitationnumber}, this.FnSubmitRFQResponseOperationCompleted, userState);
        }
        
        private void OnFnSubmitRFQResponseOperationCompleted(object arg) {
            if ((this.FnSubmitRFQResponseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitRFQResponseCompleted(this, new FnSubmitRFQResponseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInserRFQBidGeneralDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInserRFQBidGeneralDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInserRFQBidGeneralDetails(string vendorNo, string ittNumber, string bidderRepName, string bidderRepDesignation, string bidderRepAddr) {
            object[] results = this.Invoke("FnInserRFQBidGeneralDetails", new object[] {
                        vendorNo,
                        ittNumber,
                        bidderRepName,
                        bidderRepDesignation,
                        bidderRepAddr});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInserRFQBidGeneralDetailsAsync(string vendorNo, string ittNumber, string bidderRepName, string bidderRepDesignation, string bidderRepAddr) {
            this.FnInserRFQBidGeneralDetailsAsync(vendorNo, ittNumber, bidderRepName, bidderRepDesignation, bidderRepAddr, null);
        }
        
        /// <remarks/>
        public void FnInserRFQBidGeneralDetailsAsync(string vendorNo, string ittNumber, string bidderRepName, string bidderRepDesignation, string bidderRepAddr, object userState) {
            if ((this.FnInserRFQBidGeneralDetailsOperationCompleted == null)) {
                this.FnInserRFQBidGeneralDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInserRFQBidGeneralDetailsOperationCompleted);
            }
            this.InvokeAsync("FnInserRFQBidGeneralDetails", new object[] {
                        vendorNo,
                        ittNumber,
                        bidderRepName,
                        bidderRepDesignation,
                        bidderRepAddr}, this.FnInserRFQBidGeneralDetailsOperationCompleted, userState);
        }
        
        private void OnFnInserRFQBidGeneralDetailsOperationCompleted(object arg) {
            if ((this.FnInserRFQBidGeneralDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInserRFQBidGeneralDetailsCompleted(this, new FnInserRFQBidGeneralDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGenerateRFQPreviewReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGenerateRFQPreviewReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateRFQPreviewReport(string vendorNumber, string bidrsponseNumber) {
            object[] results = this.Invoke("FnGenerateRFQPreviewReport", new object[] {
                        vendorNumber,
                        bidrsponseNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateRFQPreviewReportAsync(string vendorNumber, string bidrsponseNumber) {
            this.FnGenerateRFQPreviewReportAsync(vendorNumber, bidrsponseNumber, null);
        }
        
        /// <remarks/>
        public void FnGenerateRFQPreviewReportAsync(string vendorNumber, string bidrsponseNumber, object userState) {
            if ((this.FnGenerateRFQPreviewReportOperationCompleted == null)) {
                this.FnGenerateRFQPreviewReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateRFQPreviewReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateRFQPreviewReport", new object[] {
                        vendorNumber,
                        bidrsponseNumber}, this.FnGenerateRFQPreviewReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateRFQPreviewReportOperationCompleted(object arg) {
            if ((this.FnGenerateRFQPreviewReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateRFQPreviewReportCompleted(this, new FnGenerateRFQPreviewReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGeneratePrequalificationPr" +
            "eviewReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGeneratePrequalificationPreviewReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGeneratePrequalificationPreviewReport(string vendorNumber, string prequalificationNumber) {
            object[] results = this.Invoke("FnGeneratePrequalificationPreviewReport", new object[] {
                        vendorNumber,
                        prequalificationNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGeneratePrequalificationPreviewReportAsync(string vendorNumber, string prequalificationNumber) {
            this.FnGeneratePrequalificationPreviewReportAsync(vendorNumber, prequalificationNumber, null);
        }
        
        /// <remarks/>
        public void FnGeneratePrequalificationPreviewReportAsync(string vendorNumber, string prequalificationNumber, object userState) {
            if ((this.FnGeneratePrequalificationPreviewReportOperationCompleted == null)) {
                this.FnGeneratePrequalificationPreviewReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGeneratePrequalificationPreviewReportOperationCompleted);
            }
            this.InvokeAsync("FnGeneratePrequalificationPreviewReport", new object[] {
                        vendorNumber,
                        prequalificationNumber}, this.FnGeneratePrequalificationPreviewReportOperationCompleted, userState);
        }
        
        private void OnFnGeneratePrequalificationPreviewReportOperationCompleted(object arg) {
            if ((this.FnGeneratePrequalificationPreviewReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGeneratePrequalificationPreviewReportCompleted(this, new FnGeneratePrequalificationPreviewReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGenerateRegistrationPrevie" +
            "wReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGenerateRegistrationPreviewReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateRegistrationPreviewReport(string vendorNumber, string prequalificationNumber) {
            object[] results = this.Invoke("FnGenerateRegistrationPreviewReport", new object[] {
                        vendorNumber,
                        prequalificationNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateRegistrationPreviewReportAsync(string vendorNumber, string prequalificationNumber) {
            this.FnGenerateRegistrationPreviewReportAsync(vendorNumber, prequalificationNumber, null);
        }
        
        /// <remarks/>
        public void FnGenerateRegistrationPreviewReportAsync(string vendorNumber, string prequalificationNumber, object userState) {
            if ((this.FnGenerateRegistrationPreviewReportOperationCompleted == null)) {
                this.FnGenerateRegistrationPreviewReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateRegistrationPreviewReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateRegistrationPreviewReport", new object[] {
                        vendorNumber,
                        prequalificationNumber}, this.FnGenerateRegistrationPreviewReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateRegistrationPreviewReportOperationCompleted(object arg) {
            if ((this.FnGenerateRegistrationPreviewReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateRegistrationPreviewReportCompleted(this, new FnGenerateRegistrationPreviewReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnDeletePrequalificatinDocum" +
            "ents", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnDeletePrequalificatinDocuments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeletePrequalificatinDocuments(string vendorNo, string fileName, string documentNo) {
            object[] results = this.Invoke("FnDeletePrequalificatinDocuments", new object[] {
                        vendorNo,
                        fileName,
                        documentNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeletePrequalificatinDocumentsAsync(string vendorNo, string fileName, string documentNo) {
            this.FnDeletePrequalificatinDocumentsAsync(vendorNo, fileName, documentNo, null);
        }
        
        /// <remarks/>
        public void FnDeletePrequalificatinDocumentsAsync(string vendorNo, string fileName, string documentNo, object userState) {
            if ((this.FnDeletePrequalificatinDocumentsOperationCompleted == null)) {
                this.FnDeletePrequalificatinDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeletePrequalificatinDocumentsOperationCompleted);
            }
            this.InvokeAsync("FnDeletePrequalificatinDocuments", new object[] {
                        vendorNo,
                        fileName,
                        documentNo}, this.FnDeletePrequalificatinDocumentsOperationCompleted, userState);
        }
        
        private void OnFnDeletePrequalificatinDocumentsOperationCompleted(object arg) {
            if ((this.FnDeletePrequalificatinDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeletePrequalificatinDocumentsCompleted(this, new FnDeletePrequalificatinDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertBeneficiaries", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertBeneficiaries_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertBeneficiaries(string vendorNo, string name, int type, int idType, string idPassportNumber, int phoneNumber, string email, decimal allocatedShares) {
            object[] results = this.Invoke("FnInsertBeneficiaries", new object[] {
                        vendorNo,
                        name,
                        type,
                        idType,
                        idPassportNumber,
                        phoneNumber,
                        email,
                        allocatedShares});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertBeneficiariesAsync(string vendorNo, string name, int type, int idType, string idPassportNumber, int phoneNumber, string email, decimal allocatedShares) {
            this.FnInsertBeneficiariesAsync(vendorNo, name, type, idType, idPassportNumber, phoneNumber, email, allocatedShares, null);
        }
        
        /// <remarks/>
        public void FnInsertBeneficiariesAsync(string vendorNo, string name, int type, int idType, string idPassportNumber, int phoneNumber, string email, decimal allocatedShares, object userState) {
            if ((this.FnInsertBeneficiariesOperationCompleted == null)) {
                this.FnInsertBeneficiariesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertBeneficiariesOperationCompleted);
            }
            this.InvokeAsync("FnInsertBeneficiaries", new object[] {
                        vendorNo,
                        name,
                        type,
                        idType,
                        idPassportNumber,
                        phoneNumber,
                        email,
                        allocatedShares}, this.FnInsertBeneficiariesOperationCompleted, userState);
        }
        
        private void OnFnInsertBeneficiariesOperationCompleted(object arg) {
            if ((this.FnInsertBeneficiariesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertBeneficiariesCompleted(this, new FnInsertBeneficiariesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitPrequalificationResp" +
            "onse", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitPrequalificationResponse_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitPrequalificationResponse(string vendorNumber, string prequalificationNumber) {
            object[] results = this.Invoke("FnSubmitPrequalificationResponse", new object[] {
                        vendorNumber,
                        prequalificationNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitPrequalificationResponseAsync(string vendorNumber, string prequalificationNumber) {
            this.FnSubmitPrequalificationResponseAsync(vendorNumber, prequalificationNumber, null);
        }
        
        /// <remarks/>
        public void FnSubmitPrequalificationResponseAsync(string vendorNumber, string prequalificationNumber, object userState) {
            if ((this.FnSubmitPrequalificationResponseOperationCompleted == null)) {
                this.FnSubmitPrequalificationResponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitPrequalificationResponseOperationCompleted);
            }
            this.InvokeAsync("FnSubmitPrequalificationResponse", new object[] {
                        vendorNumber,
                        prequalificationNumber}, this.FnSubmitPrequalificationResponseOperationCompleted, userState);
        }
        
        private void OnFnSubmitPrequalificationResponseOperationCompleted(object arg) {
            if ((this.FnSubmitPrequalificationResponseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitPrequalificationResponseCompleted(this, new FnSubmitPrequalificationResponseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGetRegisteredCategories", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGetRegisteredCategories_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnGetRegisteredCategories(ref string varAll, string vendorNo) {
            object[] results = this.Invoke("FnGetRegisteredCategories", new object[] {
                        varAll,
                        vendorNo});
            varAll = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetRegisteredCategoriesAsync(string varAll, string vendorNo) {
            this.FnGetRegisteredCategoriesAsync(varAll, vendorNo, null);
        }
        
        /// <remarks/>
        public void FnGetRegisteredCategoriesAsync(string varAll, string vendorNo, object userState) {
            if ((this.FnGetRegisteredCategoriesOperationCompleted == null)) {
                this.FnGetRegisteredCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetRegisteredCategoriesOperationCompleted);
            }
            this.InvokeAsync("FnGetRegisteredCategories", new object[] {
                        varAll,
                        vendorNo}, this.FnGetRegisteredCategoriesOperationCompleted, userState);
        }
        
        private void OnFnGetRegisteredCategoriesOperationCompleted(object arg) {
            if ((this.FnGetRegisteredCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetRegisteredCategoriesCompleted(this, new FnGetRegisteredCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnCreatNewWorkExecutionPlan", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnCreatNewWorkExecutionPlan_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCreatNewWorkExecutionPlan(string vendornumber, string contractno, string region, string projecttitle, string roadclass, string fundingsource, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startdate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime enddate, string projectaccountant, string residentengineer) {
            object[] results = this.Invoke("FnCreatNewWorkExecutionPlan", new object[] {
                        vendornumber,
                        contractno,
                        region,
                        projecttitle,
                        roadclass,
                        fundingsource,
                        startdate,
                        enddate,
                        projectaccountant,
                        residentengineer});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreatNewWorkExecutionPlanAsync(string vendornumber, string contractno, string region, string projecttitle, string roadclass, string fundingsource, System.DateTime startdate, System.DateTime enddate, string projectaccountant, string residentengineer) {
            this.FnCreatNewWorkExecutionPlanAsync(vendornumber, contractno, region, projecttitle, roadclass, fundingsource, startdate, enddate, projectaccountant, residentengineer, null);
        }
        
        /// <remarks/>
        public void FnCreatNewWorkExecutionPlanAsync(string vendornumber, string contractno, string region, string projecttitle, string roadclass, string fundingsource, System.DateTime startdate, System.DateTime enddate, string projectaccountant, string residentengineer, object userState) {
            if ((this.FnCreatNewWorkExecutionPlanOperationCompleted == null)) {
                this.FnCreatNewWorkExecutionPlanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreatNewWorkExecutionPlanOperationCompleted);
            }
            this.InvokeAsync("FnCreatNewWorkExecutionPlan", new object[] {
                        vendornumber,
                        contractno,
                        region,
                        projecttitle,
                        roadclass,
                        fundingsource,
                        startdate,
                        enddate,
                        projectaccountant,
                        residentengineer}, this.FnCreatNewWorkExecutionPlanOperationCompleted, userState);
        }
        
        private void OnFnCreatNewWorkExecutionPlanOperationCompleted(object arg) {
            if ((this.FnCreatNewWorkExecutionPlanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreatNewWorkExecutionPlanCompleted(this, new FnCreatNewWorkExecutionPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnCreatNewWorkExecutionPlanD" +
            "etails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnCreatNewWorkExecutionPlanDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCreatNewWorkExecutionPlanDetails(string vendornumber, string commencementOrderNo, string projectNo, string contractNo) {
            object[] results = this.Invoke("FnCreatNewWorkExecutionPlanDetails", new object[] {
                        vendornumber,
                        commencementOrderNo,
                        projectNo,
                        contractNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreatNewWorkExecutionPlanDetailsAsync(string vendornumber, string commencementOrderNo, string projectNo, string contractNo) {
            this.FnCreatNewWorkExecutionPlanDetailsAsync(vendornumber, commencementOrderNo, projectNo, contractNo, null);
        }
        
        /// <remarks/>
        public void FnCreatNewWorkExecutionPlanDetailsAsync(string vendornumber, string commencementOrderNo, string projectNo, string contractNo, object userState) {
            if ((this.FnCreatNewWorkExecutionPlanDetailsOperationCompleted == null)) {
                this.FnCreatNewWorkExecutionPlanDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreatNewWorkExecutionPlanDetailsOperationCompleted);
            }
            this.InvokeAsync("FnCreatNewWorkExecutionPlanDetails", new object[] {
                        vendornumber,
                        commencementOrderNo,
                        projectNo,
                        contractNo}, this.FnCreatNewWorkExecutionPlanDetailsOperationCompleted, userState);
        }
        
        private void OnFnCreatNewWorkExecutionPlanDetailsOperationCompleted(object arg) {
            if ((this.FnCreatNewWorkExecutionPlanDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreatNewWorkExecutionPlanDetailsCompleted(this, new FnCreatNewWorkExecutionPlanDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnCreatWorkExecutionSchedule" +
            "Details", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnCreatWorkExecutionScheduleDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCreatWorkExecutionScheduleDetails(string vendornumber, string commencementOrderNo) {
            object[] results = this.Invoke("FnCreatWorkExecutionScheduleDetails", new object[] {
                        vendornumber,
                        commencementOrderNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreatWorkExecutionScheduleDetailsAsync(string vendornumber, string commencementOrderNo) {
            this.FnCreatWorkExecutionScheduleDetailsAsync(vendornumber, commencementOrderNo, null);
        }
        
        /// <remarks/>
        public void FnCreatWorkExecutionScheduleDetailsAsync(string vendornumber, string commencementOrderNo, object userState) {
            if ((this.FnCreatWorkExecutionScheduleDetailsOperationCompleted == null)) {
                this.FnCreatWorkExecutionScheduleDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreatWorkExecutionScheduleDetailsOperationCompleted);
            }
            this.InvokeAsync("FnCreatWorkExecutionScheduleDetails", new object[] {
                        vendornumber,
                        commencementOrderNo}, this.FnCreatWorkExecutionScheduleDetailsOperationCompleted, userState);
        }
        
        private void OnFnCreatWorkExecutionScheduleDetailsOperationCompleted(object arg) {
            if ((this.FnCreatWorkExecutionScheduleDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreatWorkExecutionScheduleDetailsCompleted(this, new FnCreatWorkExecutionScheduleDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FngetWorkExecutionPlanNumber" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FngetWorkExecutionPlanNumber_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetWorkExecutionPlanNumber(string vendorNumber, string commencementOrderNumber) {
            object[] results = this.Invoke("FngetWorkExecutionPlanNumber", new object[] {
                        vendorNumber,
                        commencementOrderNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetWorkExecutionPlanNumberAsync(string vendorNumber, string commencementOrderNumber) {
            this.FngetWorkExecutionPlanNumberAsync(vendorNumber, commencementOrderNumber, null);
        }
        
        /// <remarks/>
        public void FngetWorkExecutionPlanNumberAsync(string vendorNumber, string commencementOrderNumber, object userState) {
            if ((this.FngetWorkExecutionPlanNumberOperationCompleted == null)) {
                this.FngetWorkExecutionPlanNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetWorkExecutionPlanNumberOperationCompleted);
            }
            this.InvokeAsync("FngetWorkExecutionPlanNumber", new object[] {
                        vendorNumber,
                        commencementOrderNumber}, this.FngetWorkExecutionPlanNumberOperationCompleted, userState);
        }
        
        private void OnFngetWorkExecutionPlanNumberOperationCompleted(object arg) {
            if ((this.FngetWorkExecutionPlanNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetWorkExecutionPlanNumberCompleted(this, new FngetWorkExecutionPlanNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FngetWorkExecutionPlanProjec" +
            "tNumber", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FngetWorkExecutionPlanProjectNumber_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetWorkExecutionPlanProjectNumber(string vendorNumber, string commencementOrderNumber) {
            object[] results = this.Invoke("FngetWorkExecutionPlanProjectNumber", new object[] {
                        vendorNumber,
                        commencementOrderNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetWorkExecutionPlanProjectNumberAsync(string vendorNumber, string commencementOrderNumber) {
            this.FngetWorkExecutionPlanProjectNumberAsync(vendorNumber, commencementOrderNumber, null);
        }
        
        /// <remarks/>
        public void FngetWorkExecutionPlanProjectNumberAsync(string vendorNumber, string commencementOrderNumber, object userState) {
            if ((this.FngetWorkExecutionPlanProjectNumberOperationCompleted == null)) {
                this.FngetWorkExecutionPlanProjectNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetWorkExecutionPlanProjectNumberOperationCompleted);
            }
            this.InvokeAsync("FngetWorkExecutionPlanProjectNumber", new object[] {
                        vendorNumber,
                        commencementOrderNumber}, this.FngetWorkExecutionPlanProjectNumberOperationCompleted, userState);
        }
        
        private void OnFngetWorkExecutionPlanProjectNumberOperationCompleted(object arg) {
            if ((this.FngetWorkExecutionPlanProjectNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetWorkExecutionPlanProjectNumberCompleted(this, new FngetWorkExecutionPlanProjectNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FngetContractNo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FngetContractNo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetContractNo(string documentno) {
            object[] results = this.Invoke("FngetContractNo", new object[] {
                        documentno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetContractNoAsync(string documentno) {
            this.FngetContractNoAsync(documentno, null);
        }
        
        /// <remarks/>
        public void FngetContractNoAsync(string documentno, object userState) {
            if ((this.FngetContractNoOperationCompleted == null)) {
                this.FngetContractNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetContractNoOperationCompleted);
            }
            this.InvokeAsync("FngetContractNo", new object[] {
                        documentno}, this.FngetContractNoOperationCompleted, userState);
        }
        
        private void OnFngetContractNoOperationCompleted(object arg) {
            if ((this.FngetContractNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetContractNoCompleted(this, new FngetContractNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitWorkExecutionPlanSch" +
            "eduleDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitWorkExecutionPlanScheduleDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitWorkExecutionPlanScheduleDetails(string documentNumber, string projectNumber, string taskNumber, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startdate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime enddate) {
            object[] results = this.Invoke("FnSubmitWorkExecutionPlanScheduleDetails", new object[] {
                        documentNumber,
                        projectNumber,
                        taskNumber,
                        startdate,
                        enddate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitWorkExecutionPlanScheduleDetailsAsync(string documentNumber, string projectNumber, string taskNumber, System.DateTime startdate, System.DateTime enddate) {
            this.FnSubmitWorkExecutionPlanScheduleDetailsAsync(documentNumber, projectNumber, taskNumber, startdate, enddate, null);
        }
        
        /// <remarks/>
        public void FnSubmitWorkExecutionPlanScheduleDetailsAsync(string documentNumber, string projectNumber, string taskNumber, System.DateTime startdate, System.DateTime enddate, object userState) {
            if ((this.FnSubmitWorkExecutionPlanScheduleDetailsOperationCompleted == null)) {
                this.FnSubmitWorkExecutionPlanScheduleDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitWorkExecutionPlanScheduleDetailsOperationCompleted);
            }
            this.InvokeAsync("FnSubmitWorkExecutionPlanScheduleDetails", new object[] {
                        documentNumber,
                        projectNumber,
                        taskNumber,
                        startdate,
                        enddate}, this.FnSubmitWorkExecutionPlanScheduleDetailsOperationCompleted, userState);
        }
        
        private void OnFnSubmitWorkExecutionPlanScheduleDetailsOperationCompleted(object arg) {
            if ((this.FnSubmitWorkExecutionPlanScheduleDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitWorkExecutionPlanScheduleDetailsCompleted(this, new FnSubmitWorkExecutionPlanScheduleDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitWorkExecutionPlanCon" +
            "tractorTeam", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitWorkExecutionPlanContractorTeam_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitWorkExecutionPlanContractorTeam(string documentNumber, string contractor, string staffnumber, string staffname, string emailaddress, string address, string address2, string city, string country, string postcode, string mobilephonenumber, string designation, int staffcategory, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startdate, string idno) {
            object[] results = this.Invoke("FnSubmitWorkExecutionPlanContractorTeam", new object[] {
                        documentNumber,
                        contractor,
                        staffnumber,
                        staffname,
                        emailaddress,
                        address,
                        address2,
                        city,
                        country,
                        postcode,
                        mobilephonenumber,
                        designation,
                        staffcategory,
                        startdate,
                        idno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitWorkExecutionPlanContractorTeamAsync(string documentNumber, string contractor, string staffnumber, string staffname, string emailaddress, string address, string address2, string city, string country, string postcode, string mobilephonenumber, string designation, int staffcategory, System.DateTime startdate, string idno) {
            this.FnSubmitWorkExecutionPlanContractorTeamAsync(documentNumber, contractor, staffnumber, staffname, emailaddress, address, address2, city, country, postcode, mobilephonenumber, designation, staffcategory, startdate, idno, null);
        }
        
        /// <remarks/>
        public void FnSubmitWorkExecutionPlanContractorTeamAsync(
                    string documentNumber, 
                    string contractor, 
                    string staffnumber, 
                    string staffname, 
                    string emailaddress, 
                    string address, 
                    string address2, 
                    string city, 
                    string country, 
                    string postcode, 
                    string mobilephonenumber, 
                    string designation, 
                    int staffcategory, 
                    System.DateTime startdate, 
                    string idno, 
                    object userState) {
            if ((this.FnSubmitWorkExecutionPlanContractorTeamOperationCompleted == null)) {
                this.FnSubmitWorkExecutionPlanContractorTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitWorkExecutionPlanContractorTeamOperationCompleted);
            }
            this.InvokeAsync("FnSubmitWorkExecutionPlanContractorTeam", new object[] {
                        documentNumber,
                        contractor,
                        staffnumber,
                        staffname,
                        emailaddress,
                        address,
                        address2,
                        city,
                        country,
                        postcode,
                        mobilephonenumber,
                        designation,
                        staffcategory,
                        startdate,
                        idno}, this.FnSubmitWorkExecutionPlanContractorTeamOperationCompleted, userState);
        }
        
        private void OnFnSubmitWorkExecutionPlanContractorTeamOperationCompleted(object arg) {
            if ((this.FnSubmitWorkExecutionPlanContractorTeamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitWorkExecutionPlanContractorTeamCompleted(this, new FnSubmitWorkExecutionPlanContractorTeamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnPopulateWorkExecutionPlanL" +
            "ines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnPopulateWorkExecutionPlanLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnPopulateWorkExecutionPlanLines(string documentNumber, string projectnumber) {
            object[] results = this.Invoke("FnPopulateWorkExecutionPlanLines", new object[] {
                        documentNumber,
                        projectnumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnPopulateWorkExecutionPlanLinesAsync(string documentNumber, string projectnumber) {
            this.FnPopulateWorkExecutionPlanLinesAsync(documentNumber, projectnumber, null);
        }
        
        /// <remarks/>
        public void FnPopulateWorkExecutionPlanLinesAsync(string documentNumber, string projectnumber, object userState) {
            if ((this.FnPopulateWorkExecutionPlanLinesOperationCompleted == null)) {
                this.FnPopulateWorkExecutionPlanLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnPopulateWorkExecutionPlanLinesOperationCompleted);
            }
            this.InvokeAsync("FnPopulateWorkExecutionPlanLines", new object[] {
                        documentNumber,
                        projectnumber}, this.FnPopulateWorkExecutionPlanLinesOperationCompleted, userState);
        }
        
        private void OnFnPopulateWorkExecutionPlanLinesOperationCompleted(object arg) {
            if ((this.FnPopulateWorkExecutionPlanLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnPopulateWorkExecutionPlanLinesCompleted(this, new FnPopulateWorkExecutionPlanLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitWorkExecutionPlanEqu" +
            "ipments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitWorkExecutionPlanEquipments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitWorkExecutionPlanEquipments(string documentNumber, string contractor, string equipmentnumber, string equipmenttype, string equipmentdescription, int equipmentownership, string equipmentserialnumber, int equipmentusability, int yearofuse, int equipmentcondition, string equipmentavailability, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime scheduledeliverydate, string projectphase) {
            object[] results = this.Invoke("FnSubmitWorkExecutionPlanEquipments", new object[] {
                        documentNumber,
                        contractor,
                        equipmentnumber,
                        equipmenttype,
                        equipmentdescription,
                        equipmentownership,
                        equipmentserialnumber,
                        equipmentusability,
                        yearofuse,
                        equipmentcondition,
                        equipmentavailability,
                        scheduledeliverydate,
                        projectphase});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitWorkExecutionPlanEquipmentsAsync(string documentNumber, string contractor, string equipmentnumber, string equipmenttype, string equipmentdescription, int equipmentownership, string equipmentserialnumber, int equipmentusability, int yearofuse, int equipmentcondition, string equipmentavailability, System.DateTime scheduledeliverydate, string projectphase) {
            this.FnSubmitWorkExecutionPlanEquipmentsAsync(documentNumber, contractor, equipmentnumber, equipmenttype, equipmentdescription, equipmentownership, equipmentserialnumber, equipmentusability, yearofuse, equipmentcondition, equipmentavailability, scheduledeliverydate, projectphase, null);
        }
        
        /// <remarks/>
        public void FnSubmitWorkExecutionPlanEquipmentsAsync(string documentNumber, string contractor, string equipmentnumber, string equipmenttype, string equipmentdescription, int equipmentownership, string equipmentserialnumber, int equipmentusability, int yearofuse, int equipmentcondition, string equipmentavailability, System.DateTime scheduledeliverydate, string projectphase, object userState) {
            if ((this.FnSubmitWorkExecutionPlanEquipmentsOperationCompleted == null)) {
                this.FnSubmitWorkExecutionPlanEquipmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitWorkExecutionPlanEquipmentsOperationCompleted);
            }
            this.InvokeAsync("FnSubmitWorkExecutionPlanEquipments", new object[] {
                        documentNumber,
                        contractor,
                        equipmentnumber,
                        equipmenttype,
                        equipmentdescription,
                        equipmentownership,
                        equipmentserialnumber,
                        equipmentusability,
                        yearofuse,
                        equipmentcondition,
                        equipmentavailability,
                        scheduledeliverydate,
                        projectphase}, this.FnSubmitWorkExecutionPlanEquipmentsOperationCompleted, userState);
        }
        
        private void OnFnSubmitWorkExecutionPlanEquipmentsOperationCompleted(object arg) {
            if ((this.FnSubmitWorkExecutionPlanEquipmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitWorkExecutionPlanEquipmentsCompleted(this, new FnSubmitWorkExecutionPlanEquipmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitWEPEquipmentRepairPl" +
            "an", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitWEPEquipmentRepairPlan_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitWEPEquipmentRepairPlan(string documentNumber, string contractor, string equipmentnumber, int maintenancetype, string tododescription, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime scheduledate, string responsibleperson) {
            object[] results = this.Invoke("FnSubmitWEPEquipmentRepairPlan", new object[] {
                        documentNumber,
                        contractor,
                        equipmentnumber,
                        maintenancetype,
                        tododescription,
                        scheduledate,
                        responsibleperson});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitWEPEquipmentRepairPlanAsync(string documentNumber, string contractor, string equipmentnumber, int maintenancetype, string tododescription, System.DateTime scheduledate, string responsibleperson) {
            this.FnSubmitWEPEquipmentRepairPlanAsync(documentNumber, contractor, equipmentnumber, maintenancetype, tododescription, scheduledate, responsibleperson, null);
        }
        
        /// <remarks/>
        public void FnSubmitWEPEquipmentRepairPlanAsync(string documentNumber, string contractor, string equipmentnumber, int maintenancetype, string tododescription, System.DateTime scheduledate, string responsibleperson, object userState) {
            if ((this.FnSubmitWEPEquipmentRepairPlanOperationCompleted == null)) {
                this.FnSubmitWEPEquipmentRepairPlanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitWEPEquipmentRepairPlanOperationCompleted);
            }
            this.InvokeAsync("FnSubmitWEPEquipmentRepairPlan", new object[] {
                        documentNumber,
                        contractor,
                        equipmentnumber,
                        maintenancetype,
                        tododescription,
                        scheduledate,
                        responsibleperson}, this.FnSubmitWEPEquipmentRepairPlanOperationCompleted, userState);
        }
        
        private void OnFnSubmitWEPEquipmentRepairPlanOperationCompleted(object arg) {
            if ((this.FnSubmitWEPEquipmentRepairPlanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitWEPEquipmentRepairPlanCompleted(this, new FnSubmitWEPEquipmentRepairPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnCreateApplicantAccountRequ" +
            "est", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnCreateApplicantAccountRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCreateApplicantAccountRequest(string emailaddress) {
            object[] results = this.Invoke("FnCreateApplicantAccountRequest", new object[] {
                        emailaddress});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreateApplicantAccountRequestAsync(string emailaddress) {
            this.FnCreateApplicantAccountRequestAsync(emailaddress, null);
        }
        
        /// <remarks/>
        public void FnCreateApplicantAccountRequestAsync(string emailaddress, object userState) {
            if ((this.FnCreateApplicantAccountRequestOperationCompleted == null)) {
                this.FnCreateApplicantAccountRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreateApplicantAccountRequestOperationCompleted);
            }
            this.InvokeAsync("FnCreateApplicantAccountRequest", new object[] {
                        emailaddress}, this.FnCreateApplicantAccountRequestOperationCompleted, userState);
        }
        
        private void OnFnCreateApplicantAccountRequestOperationCompleted(object arg) {
            if ((this.FnCreateApplicantAccountRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreateApplicantAccountRequestCompleted(this, new FnCreateApplicantAccountRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnUpdateAcknowledgementStatu" +
            "s", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnUpdateAcknowledgementStatus_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUpdateAcknowledgementStatus(string vendorNumber, string documentno, int signatoryID) {
            object[] results = this.Invoke("FnUpdateAcknowledgementStatus", new object[] {
                        vendorNumber,
                        documentno,
                        signatoryID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUpdateAcknowledgementStatusAsync(string vendorNumber, string documentno, int signatoryID) {
            this.FnUpdateAcknowledgementStatusAsync(vendorNumber, documentno, signatoryID, null);
        }
        
        /// <remarks/>
        public void FnUpdateAcknowledgementStatusAsync(string vendorNumber, string documentno, int signatoryID, object userState) {
            if ((this.FnUpdateAcknowledgementStatusOperationCompleted == null)) {
                this.FnUpdateAcknowledgementStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdateAcknowledgementStatusOperationCompleted);
            }
            this.InvokeAsync("FnUpdateAcknowledgementStatus", new object[] {
                        vendorNumber,
                        documentno,
                        signatoryID}, this.FnUpdateAcknowledgementStatusOperationCompleted, userState);
        }
        
        private void OnFnUpdateAcknowledgementStatusOperationCompleted(object arg) {
            if ((this.FnUpdateAcknowledgementStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdateAcknowledgementStatusCompleted(this, new FnUpdateAcknowledgementStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnUpdateAcknowledgementStatu" +
            "sDWR", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnUpdateAcknowledgementStatusDWR_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUpdateAcknowledgementStatusDWR(string documentno, int signatoryID) {
            object[] results = this.Invoke("FnUpdateAcknowledgementStatusDWR", new object[] {
                        documentno,
                        signatoryID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUpdateAcknowledgementStatusDWRAsync(string documentno, int signatoryID) {
            this.FnUpdateAcknowledgementStatusDWRAsync(documentno, signatoryID, null);
        }
        
        /// <remarks/>
        public void FnUpdateAcknowledgementStatusDWRAsync(string documentno, int signatoryID, object userState) {
            if ((this.FnUpdateAcknowledgementStatusDWROperationCompleted == null)) {
                this.FnUpdateAcknowledgementStatusDWROperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdateAcknowledgementStatusDWROperationCompleted);
            }
            this.InvokeAsync("FnUpdateAcknowledgementStatusDWR", new object[] {
                        documentno,
                        signatoryID}, this.FnUpdateAcknowledgementStatusDWROperationCompleted, userState);
        }
        
        private void OnFnUpdateAcknowledgementStatusDWROperationCompleted(object arg) {
            if ((this.FnUpdateAcknowledgementStatusDWRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdateAcknowledgementStatusDWRCompleted(this, new FnUpdateAcknowledgementStatusDWRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnUpdateAcknowledgementStatu" +
            "sSiteInstructions", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnUpdateAcknowledgementStatusSiteInstructions_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUpdateAcknowledgementStatusSiteInstructions(string documentno, string signatoryID) {
            object[] results = this.Invoke("FnUpdateAcknowledgementStatusSiteInstructions", new object[] {
                        documentno,
                        signatoryID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUpdateAcknowledgementStatusSiteInstructionsAsync(string documentno, string signatoryID) {
            this.FnUpdateAcknowledgementStatusSiteInstructionsAsync(documentno, signatoryID, null);
        }
        
        /// <remarks/>
        public void FnUpdateAcknowledgementStatusSiteInstructionsAsync(string documentno, string signatoryID, object userState) {
            if ((this.FnUpdateAcknowledgementStatusSiteInstructionsOperationCompleted == null)) {
                this.FnUpdateAcknowledgementStatusSiteInstructionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdateAcknowledgementStatusSiteInstructionsOperationCompleted);
            }
            this.InvokeAsync("FnUpdateAcknowledgementStatusSiteInstructions", new object[] {
                        documentno,
                        signatoryID}, this.FnUpdateAcknowledgementStatusSiteInstructionsOperationCompleted, userState);
        }
        
        private void OnFnUpdateAcknowledgementStatusSiteInstructionsOperationCompleted(object arg) {
            if ((this.FnUpdateAcknowledgementStatusSiteInstructionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdateAcknowledgementStatusSiteInstructionsCompleted(this, new FnUpdateAcknowledgementStatusSiteInstructionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGeneratePCOReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGeneratePCOReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGeneratePCOReport(string vendorNo, string pCONo) {
            object[] results = this.Invoke("FnGeneratePCOReport", new object[] {
                        vendorNo,
                        pCONo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGeneratePCOReportAsync(string vendorNo, string pCONo) {
            this.FnGeneratePCOReportAsync(vendorNo, pCONo, null);
        }
        
        /// <remarks/>
        public void FnGeneratePCOReportAsync(string vendorNo, string pCONo, object userState) {
            if ((this.FnGeneratePCOReportOperationCompleted == null)) {
                this.FnGeneratePCOReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGeneratePCOReportOperationCompleted);
            }
            this.InvokeAsync("FnGeneratePCOReport", new object[] {
                        vendorNo,
                        pCONo}, this.FnGeneratePCOReportOperationCompleted, userState);
        }
        
        private void OnFnGeneratePCOReportOperationCompleted(object arg) {
            if ((this.FnGeneratePCOReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGeneratePCOReportCompleted(this, new FnGeneratePCOReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitWEPMethodofWorks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitWEPMethodofWorks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitWEPMethodofWorks(string documentNumber, string summary, string description, int entryno) {
            object[] results = this.Invoke("FnSubmitWEPMethodofWorks", new object[] {
                        documentNumber,
                        summary,
                        description,
                        entryno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitWEPMethodofWorksAsync(string documentNumber, string summary, string description, int entryno) {
            this.FnSubmitWEPMethodofWorksAsync(documentNumber, summary, description, entryno, null);
        }
        
        /// <remarks/>
        public void FnSubmitWEPMethodofWorksAsync(string documentNumber, string summary, string description, int entryno, object userState) {
            if ((this.FnSubmitWEPMethodofWorksOperationCompleted == null)) {
                this.FnSubmitWEPMethodofWorksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitWEPMethodofWorksOperationCompleted);
            }
            this.InvokeAsync("FnSubmitWEPMethodofWorks", new object[] {
                        documentNumber,
                        summary,
                        description,
                        entryno}, this.FnSubmitWEPMethodofWorksOperationCompleted, userState);
        }
        
        private void OnFnSubmitWEPMethodofWorksOperationCompleted(object arg) {
            if ((this.FnSubmitWEPMethodofWorksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitWEPMethodofWorksCompleted(this, new FnSubmitWEPMethodofWorksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnsendWEPRecordForApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnsendWEPRecordForApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnsendWEPRecordForApproval(string vendorNo, string documentNo, string recordType) {
            object[] results = this.Invoke("FnsendWEPRecordForApproval", new object[] {
                        vendorNo,
                        documentNo,
                        recordType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnsendWEPRecordForApprovalAsync(string vendorNo, string documentNo, string recordType) {
            this.FnsendWEPRecordForApprovalAsync(vendorNo, documentNo, recordType, null);
        }
        
        /// <remarks/>
        public void FnsendWEPRecordForApprovalAsync(string vendorNo, string documentNo, string recordType, object userState) {
            if ((this.FnsendWEPRecordForApprovalOperationCompleted == null)) {
                this.FnsendWEPRecordForApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnsendWEPRecordForApprovalOperationCompleted);
            }
            this.InvokeAsync("FnsendWEPRecordForApproval", new object[] {
                        vendorNo,
                        documentNo,
                        recordType}, this.FnsendWEPRecordForApprovalOperationCompleted, userState);
        }
        
        private void OnFnsendWEPRecordForApprovalOperationCompleted(object arg) {
            if ((this.FnsendWEPRecordForApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnsendWEPRecordForApprovalCompleted(this, new FnsendWEPRecordForApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FncancelWEPRecordApprovalCompletedEventHandler(object sender, FncancelWEPRecordApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FncancelWEPRecordApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FncancelWEPRecordApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateWEPReportCompletedEventHandler(object sender, FnGenerateWEPReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateWEPReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateWEPReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitProjectPhotoRecordCompletedEventHandler(object sender, FnSubmitProjectPhotoRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitProjectPhotoRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitProjectPhotoRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCreateNewDailyWorkRecordCompletedEventHandler(object sender, FnCreateNewDailyWorkRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreateNewDailyWorkRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreateNewDailyWorkRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitDailyWorkRecordExecutionLinesCompletedEventHandler(object sender, FnSubmitDailyWorkRecordExecutionLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitDailyWorkRecordExecutionLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitDailyWorkRecordExecutionLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetDWRWorkExecutionPlanNumberCompletedEventHandler(object sender, FngetDWRWorkExecutionPlanNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetDWRWorkExecutionPlanNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetDWRWorkExecutionPlanNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetDailyWorkRecordProjectNumberCompletedEventHandler(object sender, FngetDailyWorkRecordProjectNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetDailyWorkRecordProjectNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetDailyWorkRecordProjectNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetDailyWorkRecordDocumentDateCompletedEventHandler(object sender, FngetDailyWorkRecordDocumentDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetDailyWorkRecordDocumentDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetDailyWorkRecordDocumentDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetEOTRequestProjectEngineerCompletedEventHandler(object sender, FngetEOTRequestProjectEngineerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetEOTRequestProjectEngineerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetEOTRequestProjectEngineerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetEOTRequestProjectManagerCompletedEventHandler(object sender, FngetEOTRequestProjectManagerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetEOTRequestProjectManagerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetEOTRequestProjectManagerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitDailyWorkRecordKeyTeamCompletedEventHandler(object sender, FnSubmitDailyWorkRecordKeyTeamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitDailyWorkRecordKeyTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitDailyWorkRecordKeyTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitDailyWorkRecordEquipmentCompletedEventHandler(object sender, FnSubmitDailyWorkRecordEquipmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitDailyWorkRecordEquipmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitDailyWorkRecordEquipmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitDailyWorkRecordMaterialsDeliveredCompletedEventHandler(object sender, FnSubmitDailyWorkRecordMaterialsDeliveredCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitDailyWorkRecordMaterialsDeliveredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitDailyWorkRecordMaterialsDeliveredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitDailyWorkRecordMaterialsRemovedCompletedEventHandler(object sender, FnSubmitDailyWorkRecordMaterialsRemovedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitDailyWorkRecordMaterialsRemovedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitDailyWorkRecordMaterialsRemovedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitDailyWorkRecordLabourScheduleCompletedEventHandler(object sender, FnSubmitDailyWorkRecordLabourScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitDailyWorkRecordLabourScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitDailyWorkRecordLabourScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitDailyWorkRecordVisitorCompletedEventHandler(object sender, FnSubmitDailyWorkRecordVisitorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitDailyWorkRecordVisitorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitDailyWorkRecordVisitorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitDailyWorkRecordMeetingsCompletedEventHandler(object sender, FnSubmitDailyWorkRecordMeetingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitDailyWorkRecordMeetingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitDailyWorkRecordMeetingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitContractorAdvancePaymentCompletedEventHandler(object sender, FnSubmitContractorAdvancePaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitContractorAdvancePaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitContractorAdvancePaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitContractorPaymentRequestCompletedEventHandler(object sender, FnSubmitContractorPaymentRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitContractorPaymentRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitContractorPaymentRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmiCPRTaskLinesCompletedEventHandler(object sender, FnSubmiCPRTaskLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmiCPRTaskLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmiCPRTaskLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmiCPRPlanningLinesCompletedEventHandler(object sender, FnSubmiCPRPlanningLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmiCPRPlanningLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmiCPRPlanningLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitFeeNoteRequestCompletedEventHandler(object sender, FnSubmitFeeNoteRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitFeeNoteRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitFeeNoteRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmiFeeNoteTaskLinesCompletedEventHandler(object sender, FnSubmiFeeNoteTaskLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmiFeeNoteTaskLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmiFeeNoteTaskLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmiFeeNotePlanningLinesCompletedEventHandler(object sender, FnSubmiFeeNotePlanningLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmiFeeNotePlanningLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmiFeeNotePlanningLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetCPRProjectNumberCompletedEventHandler(object sender, FngetCPRProjectNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetCPRProjectNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetCPRProjectNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitRiskManagementPlanCompletedEventHandler(object sender, FnSubmitRiskManagementPlanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitRiskManagementPlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitRiskManagementPlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitRiskManagementPlanLinesCompletedEventHandler(object sender, FnSubmitRiskManagementPlanLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitRiskManagementPlanLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitRiskManagementPlanLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitContractorSupervisionRequirementCompletedEventHandler(object sender, FnSubmitContractorSupervisionRequirementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitContractorSupervisionRequirementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitContractorSupervisionRequirementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitTemporarySupervisionLinesCompletedEventHandler(object sender, FnSubmitTemporarySupervisionLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitTemporarySupervisionLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitTemporarySupervisionLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitSiteAgentNominationCompletedEventHandler(object sender, FnSubmitSiteAgentNominationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitSiteAgentNominationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitSiteAgentNominationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitContractorPersonnelAppointmentCompletedEventHandler(object sender, FnSubmitContractorPersonnelAppointmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitContractorPersonnelAppointmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitContractorPersonnelAppointmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitContractorStaffDisengagementCompletedEventHandler(object sender, FnSubmitContractorStaffDisengagementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitContractorStaffDisengagementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitContractorStaffDisengagementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitContractorEquipmentRegisterCompletedEventHandler(object sender, FnSubmitContractorEquipmentRegisterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitContractorEquipmentRegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitContractorEquipmentRegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitREsOfficeCompletedEventHandler(object sender, FnSubmitREsOfficeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitREsOfficeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitREsOfficeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCreateNewExtensionofTimeRequestCompletedEventHandler(object sender, FnCreateNewExtensionofTimeRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreateNewExtensionofTimeRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreateNewExtensionofTimeRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetEOTRequestProjectNumberCompletedEventHandler(object sender, FngetEOTRequestProjectNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetEOTRequestProjectNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetEOTRequestProjectNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitEOTRevisedActivityScheduleCompletedEventHandler(object sender, FnSubmitEOTRevisedActivityScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitEOTRevisedActivityScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitEOTRevisedActivityScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitEOTGroundsCompletedEventHandler(object sender, FnSubmitEOTGroundsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitEOTGroundsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitEOTGroundsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitEOTProjectVariationSectionCompletedEventHandler(object sender, FnSubmitEOTProjectVariationSectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitEOTProjectVariationSectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitEOTProjectVariationSectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitEOTProjectVariationCommitteeCompletedEventHandler(object sender, FnSubmitEOTProjectVariationCommitteeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitEOTProjectVariationCommitteeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitEOTProjectVariationCommitteeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitContractorVariationRequestLinesCompletedEventHandler(object sender, FnSubmitContractorVariationRequestLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitContractorVariationRequestLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitContractorVariationRequestLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCreateNewContractorVariationRequestCompletedEventHandler(object sender, FnCreateNewContractorVariationRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreateNewContractorVariationRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreateNewContractorVariationRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitCVRProjectVariationSectionCompletedEventHandler(object sender, FnSubmitCVRProjectVariationSectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitCVRProjectVariationSectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitCVRProjectVariationSectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCreateNewCostClaimCompletedEventHandler(object sender, FnCreateNewCostClaimCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreateNewCostClaimCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreateNewCostClaimCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitCostClaimLineDetailsCompletedEventHandler(object sender, FnSubmitCostClaimLineDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitCostClaimLineDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitCostClaimLineDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitContractorRequestforCloseoutCompletedEventHandler(object sender, FnSubmitContractorRequestforCloseoutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitContractorRequestforCloseoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitContractorRequestforCloseoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitContractorRequestforDLPInspectionCompletedEventHandler(object sender, FnSubmitContractorRequestforDLPInspectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitContractorRequestforDLPInspectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitContractorRequestforDLPInspectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UploadContractorSignatureCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetContractMilestonesCompletedEventHandler(object sender, FnGetContractMilestonesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetContractMilestonesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetContractMilestonesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string varAll {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetContractBidSecurityCompletedEventHandler(object sender, FnGetContractBidSecurityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetContractBidSecurityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetContractBidSecurityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string varAll {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetContractInsuranceCompletedEventHandler(object sender, FnGetContractInsuranceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetContractInsuranceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetContractInsuranceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string varAll {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetContractSignatoriesCompletedEventHandler(object sender, FnGetContractSignatoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetContractSignatoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetContractSignatoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string varAll {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetContractRepresentativeCompletedEventHandler(object sender, FnGetContractRepresentativeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetContractRepresentativeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetContractRepresentativeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string varAll {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetContractPaymentsCompletedEventHandler(object sender, FnGetContractPaymentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetContractPaymentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetContractPaymentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string varAll {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UploadDocumentWorkExecutionPlanCompletedEventHandler(object sender, UploadDocumentWorkExecutionPlanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadDocumentWorkExecutionPlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadDocumentWorkExecutionPlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetInsuranceofWorksCompletedEventHandler(object sender, FnGetInsuranceofWorksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetInsuranceofWorksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetInsuranceofWorksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string varAll {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetInsuranceofWorksDetailsCompletedEventHandler(object sender, FnGetInsuranceofWorksDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetInsuranceofWorksDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetInsuranceofWorksDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string varAll {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetInsuranceTypesCompletedEventHandler(object sender, FnGetInsuranceTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetInsuranceTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetInsuranceTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string varAll {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetTenderSecurityTypesCompletedEventHandler(object sender, FnGetTenderSecurityTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetTenderSecurityTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetTenderSecurityTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string varAll {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitProfessionalIndmnityCompletedEventHandler(object sender, FnSubmitProfessionalIndmnityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitProfessionalIndmnityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitProfessionalIndmnityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitInsuranceofWorksCompletedEventHandler(object sender, FnSubmitInsuranceofWorksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitInsuranceofWorksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitInsuranceofWorksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitAdvancePaymentsGuaranteeCompletedEventHandler(object sender, FnSubmitAdvancePaymentsGuaranteeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitAdvancePaymentsGuaranteeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitAdvancePaymentsGuaranteeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitPerformancesGuaranteeCompletedEventHandler(object sender, FnSubmitPerformancesGuaranteeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitPerformancesGuaranteeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitPerformancesGuaranteeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UploadDocumentInsuranceGuaranteeHeaderCompletedEventHandler(object sender, UploadDocumentInsuranceGuaranteeHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadDocumentInsuranceGuaranteeHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadDocumentInsuranceGuaranteeHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitSubContractorRequestDetailsCompletedEventHandler(object sender, FnSubmitSubContractorRequestDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitSubContractorRequestDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitSubContractorRequestDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitSubcontractingLineDetailsCompletedEventHandler(object sender, FnSubmitSubcontractingLineDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitSubcontractingLineDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitSubcontractingLineDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetSubcontractingRequiredDocCompletedEventHandler(object sender, FnGetSubcontractingRequiredDocCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetSubcontractingRequiredDocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetSubcontractingRequiredDocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string varAll {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UploadDocumentSubcontractorCompletedEventHandler(object sender, UploadDocumentSubcontractorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadDocumentSubcontractorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadDocumentSubcontractorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetFinalAccountTemplateIDCompletedEventHandler(object sender, FnGetFinalAccountTemplateIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetFinalAccountTemplateIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetFinalAccountTemplateIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string varAll {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitFinalAccountCompletedEventHandler(object sender, FnSubmitFinalAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitFinalAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitFinalAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitFinalAccountLineDetailsCompletedEventHandler(object sender, FnSubmitFinalAccountLineDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitFinalAccountLineDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitFinalAccountLineDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetExpiryStatusInsuranceCompletedEventHandler(object sender, FnGetExpiryStatusInsuranceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetExpiryStatusInsuranceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetExpiryStatusInsuranceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetExpiryStatusAdvanceGuaranteeCompletedEventHandler(object sender, FnGetExpiryStatusAdvanceGuaranteeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetExpiryStatusAdvanceGuaranteeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetExpiryStatusAdvanceGuaranteeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitWorkPlanCompletedEventHandler(object sender, FnSubmitWorkPlanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitWorkPlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitWorkPlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitWorkPlanLineCompletedEventHandler(object sender, FnSubmitWorkPlanLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitWorkPlanLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitWorkPlanLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitPlanningWorkPlanLineCompletedEventHandler(object sender, FnSubmitPlanningWorkPlanLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitPlanningWorkPlanLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitPlanningWorkPlanLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitContractorInspectionRequestCompletedEventHandler(object sender, FnSubmitContractorInspectionRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitContractorInspectionRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitContractorInspectionRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitContractorInspectionActivitiesCompletedEventHandler(object sender, FnSubmitContractorInspectionActivitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitContractorInspectionActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitContractorInspectionActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitTestMaterialRecordCompletedEventHandler(object sender, FnSubmitTestMaterialRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitTestMaterialRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitTestMaterialRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitMaterialTestLineCompletedEventHandler(object sender, FnSubmitMaterialTestLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitMaterialTestLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitMaterialTestLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetMaterialTestTemplateCompletedEventHandler(object sender, FnGetMaterialTestTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetMaterialTestTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetMaterialTestTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string varAll {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetWorkPlanNoCompletedEventHandler(object sender, FnGetWorkPlanNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetWorkPlanNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetWorkPlanNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string varAll {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UploadDocumentMaterialTestRecordCompletedEventHandler(object sender, UploadDocumentMaterialTestRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadDocumentMaterialTestRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadDocumentMaterialTestRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UploadDocumentWorkPlanCompletedEventHandler(object sender, UploadDocumentWorkPlanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadDocumentWorkPlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadDocumentWorkPlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UploadDocumentTestRquestCompletedEventHandler(object sender, UploadDocumentTestRquestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadDocumentTestRquestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadDocumentTestRquestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UploadDocumentSiteAgentCompletedEventHandler(object sender, UploadDocumentSiteAgentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadDocumentSiteAgentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadDocumentSiteAgentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UploadDocumentPaymentRequestCompletedEventHandler(object sender, UploadDocumentPaymentRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadDocumentPaymentRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadDocumentPaymentRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UploadDocumentEOTCompletedEventHandler(object sender, UploadDocumentEOTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadDocumentEOTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadDocumentEOTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UploadDocumentFinalAccountCompletedEventHandler(object sender, UploadDocumentFinalAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadDocumentFinalAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadDocumentFinalAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UploadDocumentReportSubmissionCompletedEventHandler(object sender, UploadDocumentReportSubmissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadDocumentReportSubmissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadDocumentReportSubmissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeleteInspectionActivityCompletedEventHandler(object sender, FnDeleteInspectionActivityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteInspectionActivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteInspectionActivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitWorkplanMaterialsonSiteCompletedEventHandler(object sender, FnSubmitWorkplanMaterialsonSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitWorkplanMaterialsonSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitWorkplanMaterialsonSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitWorkPlanEquipmentCompletedEventHandler(object sender, FnSubmitWorkPlanEquipmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitWorkPlanEquipmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitWorkPlanEquipmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GenerateTemplateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GenerateTemplateNewCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ImportTemplate_CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGeneratePreviousIPCCompletedEventHandler(object sender, FnGeneratePreviousIPCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGeneratePreviousIPCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGeneratePreviousIPCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ImportIPCDocumentCompletedEventHandler(object sender, ImportIPCDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportIPCDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportIPCDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UploadCPRExportedForImportCompletedEventHandler(object sender, UploadCPRExportedForImportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadCPRExportedForImportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadCPRExportedForImportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetMaximumAdvanceAmountCompletedEventHandler(object sender, FnGetMaximumAdvanceAmountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetMaximumAdvanceAmountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetMaximumAdvanceAmountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitEquipmentRepairCompletedEventHandler(object sender, FnSubmitEquipmentRepairCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitEquipmentRepairCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitEquipmentRepairCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitEquipmentRepairLineCompletedEventHandler(object sender, FnSubmitEquipmentRepairLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitEquipmentRepairLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitEquipmentRepairLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetLoginTypeCompletedEventHandler(object sender, FnGetLoginTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetLoginTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetLoginTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetReportSubmissionsCompletedEventHandler(object sender, FnGetReportSubmissionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetReportSubmissionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetReportSubmissionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string varAll {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetReportSubmissionsDetailsCompletedEventHandler(object sender, FnGetReportSubmissionsDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetReportSubmissionsDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetReportSubmissionsDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string varAll {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitReportSubmissionsCompletedEventHandler(object sender, FnSubmitReportSubmissionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitReportSubmissionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitReportSubmissionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetReportTypesCompletedEventHandler(object sender, FnGetReportTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetReportTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetReportTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string varAll {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetCostClaimLinesCompletedEventHandler(object sender, FnGetCostClaimLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetCostClaimLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetCostClaimLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string varAll {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetQualityManagementPlansCompletedEventHandler(object sender, FnGetQualityManagementPlansCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetQualityManagementPlansCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetQualityManagementPlansCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string varAll {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitQualityManagementPlanCompletedEventHandler(object sender, FnSubmitQualityManagementPlanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitQualityManagementPlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitQualityManagementPlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitInsuranceForNotificationCompletedEventHandler(object sender, FnSubmitInsuranceForNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitInsuranceForNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitInsuranceForNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitNotificationtoRERequestForTakingOverCompletedEventHandler(object sender, FnSubmitNotificationtoRERequestForTakingOverCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitNotificationtoRERequestForTakingOverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitNotificationtoRERequestForTakingOverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetTakingOverSectionsCompletedEventHandler(object sender, FnGetTakingOverSectionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetTakingOverSectionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetTakingOverSectionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string varAll {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetTakingOverSectionsLinesCompletedEventHandler(object sender, FnGetTakingOverSectionsLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetTakingOverSectionsLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetTakingOverSectionsLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string varAll {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitTakingOverSectionCompletedEventHandler(object sender, FnSubmitTakingOverSectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitTakingOverSectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitTakingOverSectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetInspectionSnagListCompletedEventHandler(object sender, FnGetInspectionSnagListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetInspectionSnagListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetInspectionSnagListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string varAll {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitInspectionSnagListCompletedEventHandler(object sender, FnSubmitInspectionSnagListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitInspectionSnagListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitInspectionSnagListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetProjectRoadLinksCompletedEventHandler(object sender, FnGetProjectRoadLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetProjectRoadLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetProjectRoadLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string varAll {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSupplierCommunicationDetailsCompletedEventHandler(object sender, FnSupplierCommunicationDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSupplierCommunicationDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSupplierCommunicationDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSupplierBusinessProfileCompletedEventHandler(object sender, FnSupplierBusinessProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSupplierBusinessProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSupplierBusinessProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertRFIResponseResponsibilityCenterCompletedEventHandler(object sender, FnInsertRFIResponseResponsibilityCenterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertRFIResponseResponsibilityCenterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertRFIResponseResponsibilityCenterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeleteResponsibilityCenterCompletedEventHandler(object sender, FnDeleteResponsibilityCenterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteResponsibilityCenterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteResponsibilityCenterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertRFregresponseHeaderCompletedEventHandler(object sender, FnInsertRFregresponseHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertRFregresponseHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertRFregresponseHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDelDocumentCompletedEventHandler(object sender, FnDelDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDelDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDelDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDelBidRespDocumentCompletedEventHandler(object sender, FnDelBidRespDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDelBidRespDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDelBidRespDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnRegisterVendorCompletedEventHandler(object sender, FnRegisterVendorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnRegisterVendorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnRegisterVendorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ResetPassCompletedEventHandler(object sender, ResetPassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetPassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetPassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnApplyPreQualificationCompletedEventHandler(object sender, FnApplyPreQualificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnApplyPreQualificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnApplyPreQualificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnApplyPreQualificationsDetailsCompletedEventHandler(object sender, FnApplyPreQualificationsDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnApplyPreQualificationsDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnApplyPreQualificationsDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCurrentYearCompletedEventHandler(object sender, GetCurrentYearCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentYearCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentYearCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnApplyRFQCompletedEventHandler(object sender, FnApplyRFQCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnApplyRFQCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnApplyRFQCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ApplyRFQOLDCompletedEventHandler(object sender, ApplyRFQOLDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplyRFQOLDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplyRFQOLDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendEmailCompletedEventHandler(object sender, SendEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnAddVendorSpecialGroupDetailsCompletedEventHandler(object sender, FnAddVendorSpecialGroupDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAddVendorSpecialGroupDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAddVendorSpecialGroupDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ActivateAccountCompletedEventHandler(object sender, ActivateAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ActivateAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ActivateAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnAddDirectorsCompletedEventHandler(object sender, FnAddDirectorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAddDirectorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAddDirectorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnApplyforTenderCompletedEventHandler(object sender, FnApplyforTenderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnApplyforTenderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnApplyforTenderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCountOpenTendersCompletedEventHandler(object sender, FnCountOpenTendersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCountOpenTendersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCountOpenTendersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCountAppliedTendersCompletedEventHandler(object sender, FnCountAppliedTendersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCountAppliedTendersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCountAppliedTendersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCountTendersAwardedCompletedEventHandler(object sender, FnCountTendersAwardedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCountTendersAwardedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCountTendersAwardedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnApplyforOpenTenderCompletedEventHandler(object sender, FnApplyforOpenTenderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnApplyforOpenTenderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnApplyforOpenTenderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertBlogCompletedEventHandler(object sender, FnInsertBlogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertBlogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertBlogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertBlogReplyCompletedEventHandler(object sender, FnInsertBlogReplyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertBlogReplyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertBlogReplyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnChangePasswordCompletedEventHandler(object sender, FnChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnEditProfileCompletedEventHandler(object sender, FnEditProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnEditProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnEditProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnResetPasswordCompletedEventHandler(object sender, FnResetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnResetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnResetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateVendorstatementCompletedEventHandler(object sender, FnGenerateVendorstatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateVendorstatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateVendorstatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateRfQDocumentCompletedEventHandler(object sender, FnGenerateRfQDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateRfQDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateRfQDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnAddPurchaseReqLineCompletedEventHandler(object sender, FnAddPurchaseReqLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAddPurchaseReqLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAddPurchaseReqLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnReqforRegistrationCompletedEventHandler(object sender, FnReqforRegistrationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnReqforRegistrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnReqforRegistrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnBLOBRfQDocumentCompletedEventHandler(object sender, FnBLOBRfQDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnBLOBRfQDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnBLOBRfQDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string bigText {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDownloadRfQPTDocCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSupplierRegistrationCompletedEventHandler(object sender, FnSupplierRegistrationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSupplierRegistrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSupplierRegistrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSupplierGeneralDetailsRegistrationCompletedEventHandler(object sender, FnSupplierGeneralDetailsRegistrationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSupplierGeneralDetailsRegistrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSupplierGeneralDetailsRegistrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertBankCompletedEventHandler(object sender, FnInsertBankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertBankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertBankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertBankDetailsCompletedEventHandler(object sender, FnInsertBankDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertBankDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertBankDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeleteBankCompletedEventHandler(object sender, FnDeleteBankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteBankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteBankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertDirectorCompletedEventHandler(object sender, FnInsertDirectorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertDirectorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertDirectorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertDirectorDetailsCompletedEventHandler(object sender, FnInsertDirectorDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertDirectorDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertDirectorDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeleteBeneficiaryCompletedEventHandler(object sender, FnDeleteBeneficiaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteBeneficiaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteBeneficiaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeleteShareholderCompletedEventHandler(object sender, FnDeleteShareholderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteShareholderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteShareholderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertBidResponseSecurityDetailsCompletedEventHandler(object sender, FnInsertBidResponseSecurityDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertBidResponseSecurityDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertBidResponseSecurityDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertLitigationHCompletedEventHandler(object sender, FnInsertLitigationHCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertLitigationHCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertLitigationHCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertLitigationHistoryDetailsCompletedEventHandler(object sender, FnInsertLitigationHistoryDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertLitigationHistoryDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertLitigationHistoryDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeleteLitigationHistoryDetailsCompletedEventHandler(object sender, FnDeleteLitigationHistoryDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteLitigationHistoryDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteLitigationHistoryDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertSpecialGrpCompletedEventHandler(object sender, FnInsertSpecialGrpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertSpecialGrpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertSpecialGrpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertPurchaseLinesDetailsCompletedEventHandler(object sender, FnInsertPurchaseLinesDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertPurchaseLinesDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertPurchaseLinesDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertPurchaseLinesResponseDetailsCompletedEventHandler(object sender, FnInsertPurchaseLinesResponseDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertPurchaseLinesResponseDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertPurchaseLinesResponseDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertPurchaseLinesResponseRFQDetailsCompletedEventHandler(object sender, FnInsertPurchaseLinesResponseRFQDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertPurchaseLinesResponseRFQDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertPurchaseLinesResponseRFQDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertPastXepCompletedEventHandler(object sender, FnInsertPastXepCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertPastXepCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertPastXepCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertPastExperienceDetailsCompletedEventHandler(object sender, FnInsertPastExperienceDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertPastExperienceDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertPastExperienceDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeletePastExperienceDetailsCompletedEventHandler(object sender, FnDeletePastExperienceDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeletePastExperienceDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeletePastExperienceDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeleteStaffExperienceCompletedEventHandler(object sender, FnDeleteStaffExperienceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteStaffExperienceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteStaffExperienceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeleteBidResponsePersonelCompletedEventHandler(object sender, FnDeleteBidResponsePersonelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteBidResponsePersonelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteBidResponsePersonelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeleteBidResponseEquipmentDetailsCompletedEventHandler(object sender, FnDeleteBidResponseEquipmentDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteBidResponseEquipmentDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteBidResponseEquipmentDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertBalanceSheetCompletedEventHandler(object sender, FnInsertBalanceSheetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertBalanceSheetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertBalanceSheetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnBidResponseInsertBalanceSheetCompletedEventHandler(object sender, FnBidResponseInsertBalanceSheetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnBidResponseInsertBalanceSheetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnBidResponseInsertBalanceSheetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeleteBalanceSheetDetailsCompletedEventHandler(object sender, FnDeleteBalanceSheetDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteBalanceSheetDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteBalanceSheetDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnEditBidResponseInsertBalanceSheetCompletedEventHandler(object sender, FnEditBidResponseInsertBalanceSheetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnEditBidResponseInsertBalanceSheetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnEditBidResponseInsertBalanceSheetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertIncomestatementCompletedEventHandler(object sender, FnInsertIncomestatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertIncomestatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertIncomestatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeleteIncomeStatementDetailsCompletedEventHandler(object sender, FnDeleteIncomeStatementDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteIncomeStatementDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteIncomeStatementDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnEditInsertIncomestatementDetailsCompletedEventHandler(object sender, FnEditInsertIncomestatementDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnEditInsertIncomestatementDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnEditInsertIncomestatementDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnBidResponseInsertIncomestatementCompletedEventHandler(object sender, FnBidResponseInsertIncomestatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnBidResponseInsertIncomestatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnBidResponseInsertIncomestatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeleteBidResponsIncomeStatamentDetailsCompletedEventHandler(object sender, FnDeleteBidResponsIncomeStatamentDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteBidResponsIncomeStatamentDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteBidResponsIncomeStatamentDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeleteBidResponsBalanceSheetDetailsCompletedEventHandler(object sender, FnDeleteBidResponsBalanceSheetDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteBidResponsBalanceSheetDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteBidResponsBalanceSheetDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeleteBidResponsPastExperienceDetailsCompletedEventHandler(object sender, FnDeleteBidResponsPastExperienceDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteBidResponsPastExperienceDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteBidResponsPastExperienceDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeleteBidResponTenderSecurityCompletedEventHandler(object sender, FnDeleteBidResponTenderSecurityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteBidResponTenderSecurityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteBidResponTenderSecurityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertFiledetailsCompletedEventHandler(object sender, FnInsertFiledetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertFiledetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertFiledetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnBidResponsePastExperienceCompletedEventHandler(object sender, FnBidResponsePastExperienceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnBidResponsePastExperienceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnBidResponsePastExperienceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertStaffEntryCompletedEventHandler(object sender, FnInsertStaffEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertStaffEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertStaffEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertStaffQlfEntryCompletedEventHandler(object sender, FnInsertStaffQlfEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertStaffQlfEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertStaffQlfEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertStaffXPrEntryCompletedEventHandler(object sender, FnInsertStaffXPrEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertStaffXPrEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertStaffXPrEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCompleteSupplierRegCompletedEventHandler(object sender, FnCompleteSupplierRegCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCompleteSupplierRegCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCompleteSupplierRegCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetOwnerPercentageCompletedEventHandler(object sender, FnGetOwnerPercentageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetOwnerPercentageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetOwnerPercentageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertRFIresponseHeaderCompletedEventHandler(object sender, FnInsertRFIresponseHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertRFIresponseHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertRFIresponseHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetLastDocumentNoRegistrationCompletedEventHandler(object sender, FnGetLastDocumentNoRegistrationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetLastDocumentNoRegistrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetLastDocumentNoRegistrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetLastDocumentNoCompletedEventHandler(object sender, FnGetLastDocumentNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetLastDocumentNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetLastDocumentNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertIFRResponseLinesCompletedEventHandler(object sender, FnInsertIFRResponseLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertIFRResponseLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertIFRResponseLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertRFIResponseLinesCompletedEventHandler(object sender, FnInsertRFIResponseLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertRFIResponseLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertRFIResponseLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertRFIResponseLinesDetailsCompletedEventHandler(object sender, FnInsertRFIResponseLinesDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertRFIResponseLinesDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertRFIResponseLinesDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitResponseFinalCompletedEventHandler(object sender, FnSubmitResponseFinalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitResponseFinalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitResponseFinalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnPrequalificationResponseDetailsCompletedEventHandler(object sender, FnPrequalificationResponseDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnPrequalificationResponseDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnPrequalificationResponseDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertFiledetails_RfiCompletedEventHandler(object sender, FnInsertFiledetails_RfiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertFiledetails_RfiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertFiledetails_RfiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertPrequalificatinDocumentsCompletedEventHandler(object sender, FnInsertPrequalificatinDocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertPrequalificatinDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertPrequalificatinDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertBidReponseDocumentsCompletedEventHandler(object sender, FnInsertBidReponseDocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertBidReponseDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertBidReponseDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmisionResponseStatusCompletedEventHandler(object sender, FnSubmisionResponseStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmisionResponseStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmisionResponseStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetEvalCritScoresCompletedEventHandler(object sender, FnGetEvalCritScoresCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetEvalCritScoresCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetEvalCritScoresCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnrfiResponsetLinksCompletedEventHandler(object sender, FnrfiResponsetLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnrfiResponsetLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnrfiResponsetLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSupplierRegistrationLinksCompletedEventHandler(object sender, FnSupplierRegistrationLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSupplierRegistrationLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSupplierRegistrationLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitTenderResponseCompletedEventHandler(object sender, FnSubmitTenderResponseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitTenderResponseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitTenderResponseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetBidResponseNumberCompletedEventHandler(object sender, FngetBidResponseNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetBidResponseNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetBidResponseNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInserBidInfoTab1CompletedEventHandler(object sender, FnInserBidInfoTab1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInserBidInfoTab1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInserBidInfoTab1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInserBidGeneralDetailsCompletedEventHandler(object sender, FnInserBidGeneralDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInserBidGeneralDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInserBidGeneralDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertBidPersonnelDetailsCompletedEventHandler(object sender, FnInsertBidPersonnelDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertBidPersonnelDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertBidPersonnelDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertBidEquipmentsDetailsCompletedEventHandler(object sender, FnInsertBidEquipmentsDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertBidEquipmentsDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertBidEquipmentsDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnAddBidPrefrCompletedEventHandler(object sender, FnAddBidPrefrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAddBidPrefrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAddBidPrefrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeleteBidAuditedBalsheetCompletedEventHandler(object sender, FnDeleteBidAuditedBalsheetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteBidAuditedBalsheetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteBidAuditedBalsheetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ResetSendEmailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitRFQResponseCompletedEventHandler(object sender, FnSubmitRFQResponseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitRFQResponseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitRFQResponseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInserRFQBidGeneralDetailsCompletedEventHandler(object sender, FnInserRFQBidGeneralDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInserRFQBidGeneralDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInserRFQBidGeneralDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateRFQPreviewReportCompletedEventHandler(object sender, FnGenerateRFQPreviewReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateRFQPreviewReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateRFQPreviewReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGeneratePrequalificationPreviewReportCompletedEventHandler(object sender, FnGeneratePrequalificationPreviewReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGeneratePrequalificationPreviewReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGeneratePrequalificationPreviewReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateRegistrationPreviewReportCompletedEventHandler(object sender, FnGenerateRegistrationPreviewReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateRegistrationPreviewReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateRegistrationPreviewReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeletePrequalificatinDocumentsCompletedEventHandler(object sender, FnDeletePrequalificatinDocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeletePrequalificatinDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeletePrequalificatinDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertBeneficiariesCompletedEventHandler(object sender, FnInsertBeneficiariesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertBeneficiariesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertBeneficiariesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitPrequalificationResponseCompletedEventHandler(object sender, FnSubmitPrequalificationResponseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitPrequalificationResponseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitPrequalificationResponseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetRegisteredCategoriesCompletedEventHandler(object sender, FnGetRegisteredCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetRegisteredCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetRegisteredCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string varAll {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCreatNewWorkExecutionPlanCompletedEventHandler(object sender, FnCreatNewWorkExecutionPlanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreatNewWorkExecutionPlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreatNewWorkExecutionPlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCreatNewWorkExecutionPlanDetailsCompletedEventHandler(object sender, FnCreatNewWorkExecutionPlanDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreatNewWorkExecutionPlanDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreatNewWorkExecutionPlanDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCreatWorkExecutionScheduleDetailsCompletedEventHandler(object sender, FnCreatWorkExecutionScheduleDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreatWorkExecutionScheduleDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreatWorkExecutionScheduleDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetWorkExecutionPlanNumberCompletedEventHandler(object sender, FngetWorkExecutionPlanNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetWorkExecutionPlanNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetWorkExecutionPlanNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetWorkExecutionPlanProjectNumberCompletedEventHandler(object sender, FngetWorkExecutionPlanProjectNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetWorkExecutionPlanProjectNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetWorkExecutionPlanProjectNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetContractNoCompletedEventHandler(object sender, FngetContractNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetContractNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetContractNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitWorkExecutionPlanScheduleDetailsCompletedEventHandler(object sender, FnSubmitWorkExecutionPlanScheduleDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitWorkExecutionPlanScheduleDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitWorkExecutionPlanScheduleDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitWorkExecutionPlanContractorTeamCompletedEventHandler(object sender, FnSubmitWorkExecutionPlanContractorTeamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitWorkExecutionPlanContractorTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitWorkExecutionPlanContractorTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnPopulateWorkExecutionPlanLinesCompletedEventHandler(object sender, FnPopulateWorkExecutionPlanLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnPopulateWorkExecutionPlanLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnPopulateWorkExecutionPlanLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitWorkExecutionPlanEquipmentsCompletedEventHandler(object sender, FnSubmitWorkExecutionPlanEquipmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitWorkExecutionPlanEquipmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitWorkExecutionPlanEquipmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitWEPEquipmentRepairPlanCompletedEventHandler(object sender, FnSubmitWEPEquipmentRepairPlanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitWEPEquipmentRepairPlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitWEPEquipmentRepairPlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCreateApplicantAccountRequestCompletedEventHandler(object sender, FnCreateApplicantAccountRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreateApplicantAccountRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreateApplicantAccountRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnUpdateAcknowledgementStatusCompletedEventHandler(object sender, FnUpdateAcknowledgementStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUpdateAcknowledgementStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUpdateAcknowledgementStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnUpdateAcknowledgementStatusDWRCompletedEventHandler(object sender, FnUpdateAcknowledgementStatusDWRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUpdateAcknowledgementStatusDWRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUpdateAcknowledgementStatusDWRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnUpdateAcknowledgementStatusSiteInstructionsCompletedEventHandler(object sender, FnUpdateAcknowledgementStatusSiteInstructionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUpdateAcknowledgementStatusSiteInstructionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUpdateAcknowledgementStatusSiteInstructionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGeneratePCOReportCompletedEventHandler(object sender, FnGeneratePCOReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGeneratePCOReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGeneratePCOReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitWEPMethodofWorksCompletedEventHandler(object sender, FnSubmitWEPMethodofWorksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitWEPMethodofWorksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitWEPMethodofWorksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnsendWEPRecordForApprovalCompletedEventHandler(object sender, FnsendWEPRecordForApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnsendWEPRecordForApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnsendWEPRecordForApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591